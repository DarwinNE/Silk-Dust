# 1 "silkdust34_no_UTF8.c"
 

# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdlib.h" 1 3
 








# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/_ansi.h" 1 3
 

 











# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/newlib.h" 1 3
 




 
 

 


 


 
 

 


 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 



# 15 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/_ansi.h" 2 3

# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/config.h" 1 3



# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/machine/ieeefp.h" 1 3



 






















































































# 100 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/machine/ieeefp.h" 3














































 






































# 193 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/machine/ieeefp.h" 3






































































# 4 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/config.h" 2 3


 







 














































# 76 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/config.h" 3















 









# 111 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/config.h" 3


 
























 




























 













# 16 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/_ansi.h" 2 3


 
 































# 68 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/_ansi.h" 3


 







 

# 90 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/_ansi.h" 3






# 10 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdlib.h" 2 3




# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 1 3






 


# 19 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3



 


 





 


# 61 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


 





 


















 





 

 

# 131 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


 

 


































typedef long unsigned int  size_t;






















 




 





























 


























typedef short int wchar_t;

















# 283 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


 

# 315 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3




 





















# 14 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdlib.h" 2 3


# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/reent.h" 1 3
 

 










# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/_types.h" 1 3
 

 








typedef long _off_t;
__extension__ typedef long long _off64_t;




typedef long _ssize_t;



# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 1 3






 


# 19 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3



 


 





 


# 61 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


 





 


















 





 

 

# 131 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


 

 

# 190 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3



 




 

# 271 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3









typedef unsigned int  wint_t;




 

# 315 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3




 





















# 22 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/_types.h" 2 3


 
typedef struct
{
  int __count;
  union
  {
    wint_t __wch;
    unsigned char __wchb[4];
  } __value;		 
} _mbstate_t;

typedef int _flock_t;

 
typedef void *_iconv_t;


# 14 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/reent.h" 2 3





typedef unsigned long  __ULong;















 




struct _Bigint 
{
  struct _Bigint *_next;
  int _k, _maxwds, _sign, _wds;
  __ULong _x[1];
};

 
struct __tm
{
  int   __tm_sec;
  int   __tm_min;
  int   __tm_hour;
  int   __tm_mday;
  int   __tm_mon;
  int   __tm_year;
  int   __tm_wday;
  int   __tm_yday;
  int   __tm_isdst;
};

 





struct _on_exit_args {
	void *  _fnargs[32 ];	         
	__ULong _fntypes;           	         

};








struct _atexit {
	struct	_atexit *_next;			 
	int	_ind;				 
	void	(*_fns[32 ])(void);	 
        struct _on_exit_args _on_exit_args;
};


 






struct __sbuf {
	unsigned char *_base;
	int	_size;
};

 




typedef long _fpos_t;		 
				 





 
























# 156 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/reent.h" 3




struct __sFILE {
  unsigned char *_p;	 
  int	_r;		 
  int	_w;		 
  short	_flags;		 
  short	_file;		 
  struct __sbuf _bf;	 
  int	_lbfsize;	 





   
  void * 	_cookie;	 

  int   (*_read)   (void *  _cookie, char *_buf, int _n)  ;
  int   (*_write)   (void *  _cookie, const char *_buf,
					    int _n)  ;
  _fpos_t  (*_seek)   (void *  _cookie, _fpos_t _offset, int _whence)  ;
  int	 (*_close)   (void *  _cookie)  ;

   
  struct __sbuf _ub;	 
  unsigned char *_up;	 
  int	_ur;		 

   
  unsigned char _ubuf[3];	 
  unsigned char _nbuf[1];	 

   
  struct __sbuf _lb;	 

   
  int	_blksize;	 
  int	_offset;	 


  struct _reent *_data;	 



  _flock_t _lock;	 

};

# 252 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/reent.h" 3

typedef struct __sFILE   __FILE;


struct _glue 
{
  struct _glue *_next;
  int _niobs;
  __FILE *_iobs;
};

 




















struct _rand48 {
  unsigned short _seed[3];
  unsigned short _mult[3];
  unsigned short _add;




};

 




 







# 531 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/reent.h" 3


struct _reent
{
  int _errno;			 

   


  __FILE *_stdin, *_stdout, *_stderr;

  int  _inc;			 
  char _emergency[25 ];
 
  int _current_category;	 
  const  char *_current_locale;

  int __sdidinit;		 

  void  (*__cleanup)   (struct _reent *)  ;

   
  struct _Bigint *_result;
  int _result_k;
  struct _Bigint *_p5s;
  struct _Bigint **_freelist;

   
  int _cvtlen;			 
  char *_cvtbuf;

  union
    {
      struct
        {
          unsigned int _unused_rand;
          char * _strtok_last;
          char _asctime_buf[26 ];
          struct __tm _localtime_buf;
          int _gamma_signgam;
          __extension__ unsigned long long _rand_next;
          struct _rand48 _r48;
          _mbstate_t _mblen_state;
          _mbstate_t _mbtowc_state;
          _mbstate_t _wctomb_state;
          char _l64a_buf[8];
          char _signal_buf[24 ];
          int _getdate_err;  
          _mbstate_t _mbrlen_state;
          _mbstate_t _mbrtowc_state;
          _mbstate_t _mbsrtowcs_state;
          _mbstate_t _wcrtomb_state;
          _mbstate_t _wcsrtombs_state;
        } _reent;
   

 
      struct
        {

          unsigned char * _nextf[30 ];
          unsigned int _nmalloc[30 ];
        } _unused;
    } _new;

   
  struct _atexit *_atexit;	 
  struct _atexit _atexit0;	 

   
  void (**(_sig_func))(int);

   


  struct _glue __sglue;		 
  __FILE __sf[3];  		 
};










# 683 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/reent.h" 3






































 








extern struct _reent *_impure_ptr  ;

void _reclaim_reent  (struct _reent *)  ;

 


















# 16 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdlib.h" 2 3

# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/machine/stdlib.h" 1 3



 




# 17 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdlib.h" 2 3


# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/alloca.h" 1 3
 

 
 















# 19 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdlib.h" 2 3



 

typedef struct 
{
  int quot;  
  int rem;  
} div_t;

typedef struct 
{
  long quot;  
  long rem;  
} ldiv_t;


typedef struct
{
  long long int quot;  
  long long int rem;  
} lldiv_t;











extern   int __mb_cur_max;



void 	 abort   (void ) __attribute__ ( (noreturn) )   ;
int	 abs   (int)  ;
int	 atexit   (void  (*__func)(void ))  ;
double	 atof   (const char *__nptr)  ;

float	 atoff   (const char *__nptr)  ;

int	 atoi   (const char *__nptr)  ;
int	 _atoi_r   (struct _reent *, const char *__nptr)  ;
long	 atol   (const char *__nptr)  ;
long	 _atol_r   (struct _reent *, const char *__nptr)  ;
void * 	 bsearch   (const void *  __key,
		       const void *  __base,
		       size_t __nmemb,
		       size_t __size,
		       int (*  _compar )  (const void * , const void * )  )  ;
void * 	 calloc   (size_t __nmemb, size_t __size)  ;
div_t	 div   (int __numer, int __denom)  ;
void 	 exit   (int __status) __attribute__ ( (noreturn) )   ;
void 	 free   (void * )  ;
char *   getenv   (const char *__string)  ;
char *	 _getenv_r   (struct _reent *, const char *__string)  ;



char *	 _findenv   (const  char *, int *)  ;
char *	 _findenv_r   (struct _reent *, const  char *, int *)  ;
long	 labs   (long)  ;
ldiv_t	 ldiv   (long __numer, long __denom)  ;
void * 	 malloc   (size_t __size)  ;
int	 mblen   (const char *, size_t)  ;
int	 _mblen_r   (struct _reent *, const char *, size_t, _mbstate_t *)  ;
int	 mbtowc   (wchar_t *, const char *, size_t)  ;
int	 _mbtowc_r   (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *)  ;
int	 wctomb   (char *, wchar_t)  ;
int	 _wctomb_r   (struct _reent *, char *, wchar_t, _mbstate_t *)  ;
size_t	 mbstowcs   (wchar_t *, const char *, size_t)  ;
size_t	 _mbstowcs_r   (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *)  ;
size_t	 wcstombs   (char *, const wchar_t *, size_t)  ;
size_t	 _wcstombs_r   (struct _reent *, char *, const wchar_t *, size_t, _mbstate_t *)  ;


int      mkstemp   (char *)  ;
char *   mktemp   (char *)  ;


void 	 qsort   (void *  __base, size_t __nmemb, size_t __size, int(*_compar)(const void * , const void * ))  ;
int	 rand   (void )  ;
void * 	 realloc   (void *  __r, size_t __size)  ;



void 	 srand   (unsigned __seed)  ;
double	 strtod   (const char *__n, char **__end_PTR)  ;
double	 _strtod_r   (struct _reent *,const char *__n, char **__end_PTR)  ;
float	 strtof   (const char *__n, char **__end_PTR)  ;

 




long	 strtol   (const char *__n, char **__end_PTR, int __base)  ;
long	 _strtol_r   (struct _reent *,const char *__n, char **__end_PTR, int __base)  ;
unsigned long  strtoul   (const char *__n, char **__end_PTR, int __base)  ;
unsigned long  _strtoul_r   (struct _reent *,const char *__n, char **__end_PTR, int __base)  ;

int	 system   (const char *__string)  ;


long     a64l   (const char *__input)  ;
char *   l64a   (long __input)  ;
char *   _l64a_r   (struct _reent *,long __input)  ;
int	 on_exit   (void  (*__func)(int, void * ),void *  __arg)  ;
void 	 _Exit   (int __status) __attribute__ ( (noreturn) )   ;
int	 putenv   (const char *__string)  ;
int	 _putenv_r   (struct _reent *, const char *__string)  ;
int	 setenv   (const char *__string, const char *__value, int __overwrite)  ;
int	 _setenv_r   (struct _reent *, const char *__string, const char *__value, int __overwrite)  ;

char *	 gcvt   (double,int,char *)  ;
char *	 gcvtf   (float,int,char *)  ;
char *	 fcvt   (double,int,int *,int *)  ;
char *	 fcvtf   (float,int,int *,int *)  ;
char *	 ecvt   (double,int,int *,int *)  ;
char *	 ecvtbuf   (double, int, int*, int*, char *)  ;
char *	 fcvtbuf   (double, int, int*, int*, char *)  ;
char *	 ecvtf   (float,int,int *,int *)  ;
char *	 dtoa   (double, int, int, int *, int*, char**)  ;
int	 rand_r   (unsigned *__seed)  ;

double  drand48   (void )  ;
double  _drand48_r   (struct _reent *)  ;
double  erand48   (unsigned short [3])  ;
double  _erand48_r   (struct _reent *, unsigned short [3])  ;
long    jrand48   (unsigned short [3])  ;
long    _jrand48_r   (struct _reent *, unsigned short [3])  ;
void    lcong48   (unsigned short [7])  ;
void    _lcong48_r   (struct _reent *, unsigned short [7])  ;
long    lrand48   (void )  ;
long    _lrand48_r   (struct _reent *)  ;
long    mrand48   (void )  ;
long    _mrand48_r   (struct _reent *)  ;
long    nrand48   (unsigned short [3])  ;
long    _nrand48_r   (struct _reent *, unsigned short [3])  ;
unsigned short *
        seed48   (unsigned short [3])  ;
unsigned short *
        _seed48_r   (struct _reent *, unsigned short [3])  ;
void    srand48   (long)  ;
void    _srand48_r   (struct _reent *, long)  ;
long long  atoll   (const char *__nptr)  ;
long long  _atoll_r   (struct _reent *, const char *__nptr)  ;
long long  llabs   (long long)  ;
lldiv_t	 lldiv   (long long __numer, long long __denom)  ;
long long  strtoll   (const char *__n, char **__end_PTR, int __base)  ;
long long  _strtoll_r   (struct _reent *, const char *__n, char **__end_PTR, int __base)  ;
unsigned long long  strtoull   (const char *__n, char **__end_PTR, int __base)  ;
unsigned long long  _strtoull_r   (struct _reent *, const char *__n, char **__end_PTR, int __base)  ;


void 	 cfree   (void * )  ;
# 188 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdlib.h" 3




char *	 _dtoa_r   (struct _reent *, double, int, int, int *, int*, char**)  ;

void * 	 _malloc_r   (struct _reent *, size_t)  ;
void * 	 _calloc_r   (struct _reent *, size_t, size_t)  ;
void 	 _free_r   (struct _reent *, void * )  ;
void * 	 _realloc_r   (struct _reent *, void * , size_t)  ;
void 	 _mstats_r   (struct _reent *, char *)  ;

int	 _system_r   (struct _reent *, const char *)  ;

void 	 __eprintf   (const char *, const char *, unsigned int, const char *)  ;

# 231 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdlib.h" 3


 


# 3 "silkdust34_no_UTF8.c" 2

# 1 "config34.h" 1
 

















# 4 "silkdust34_no_UTF8.c" 2


# 1 "aws.h" 1



typedef unsigned char boolean;



typedef unsigned char word_type;








typedef struct info_d {
    char *version;
    unsigned int textcolor;
    unsigned int backcolor;
    unsigned int textcolordark;
    unsigned int backcolordark;
    char *name;
    char *author;
    char *date;
    char *description;
    unsigned int code;
    char *fontname;
    unsigned int charsize;
    unsigned int fontstyle;
    unsigned int startroom;
    boolean graphical;
    unsigned int maxcarryingw;
    unsigned int maxcarryings;
} info;

typedef struct word_d {

    char c1,c2,c3;



    unsigned int code;
    word_type t;
} word;




    typedef unsigned char room_code;


typedef struct room_d {
    room_code code;
    const char *long_d;
    


    const char *short_d;

    





        
         
        room_code directions[6 ];
    
} room;

typedef struct message_d {
    unsigned int code;
    char *txt;
} message;




    typedef unsigned char obj_code;




        
typedef struct object_d {
    obj_code code;
    


    const char *desc;
    



    unsigned int position;       
    unsigned char attributes;
} object;

typedef struct tree_d {
    unsigned char c;
    unsigned char son0idx;
    unsigned char son1idx;
} tree;

void restart(void);










# 6 "silkdust34_no_UTF8.c" 2


# 1 "inout.h" 1


# 1 "systemd.h" 1



 
























# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/time.h" 1 3
 















 
# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/machine/time.h" 1 3


















# 18 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/time.h" 2 3









# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 1 3






 


# 19 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3



 


 





 


# 61 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


 





 


















 





 

 

# 131 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


 

 


# 188 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3





 




 

# 271 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


# 283 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


 

# 315 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3




 





















# 27 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/time.h" 2 3


# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/types.h" 1 3
 






















typedef short int __int16_t;
typedef unsigned short int __uint16_t;


typedef long int __int32_t;
typedef unsigned long int __uint32_t;









__extension__ typedef long long __int64_t;
__extension__ typedef unsigned long long __uint64_t;














# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 1 3






 







 

 




 


 





 


# 61 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


 





 


















 





 

 





















typedef long int  ptrdiff_t;









 




 

 


# 188 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3





 




 


# 269 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3
















 

# 315 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3




 













 







# 55 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/types.h" 2 3

# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/machine/types.h" 1 3



 





# 28 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/machine/types.h" 3








typedef long int __off_t;
typedef int __pid_t;

__extension__ typedef long long int __loff_t;








# 56 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/types.h" 2 3


 


















 
typedef	unsigned char	u_char;
typedef	unsigned short	u_short;
typedef	unsigned int	u_int;
typedef	unsigned long	u_long;



typedef	unsigned short	ushort;		 
typedef	unsigned int	uint;		 



typedef unsigned long  clock_t;




typedef long  time_t;


 

struct timespec {
  time_t  tv_sec;    
  long    tv_nsec;   
};

struct itimerspec {
  struct timespec  it_interval;   
  struct timespec  it_value;      
};


typedef	long	daddr_t;
typedef	char *	caddr_t;








typedef	unsigned short	ino_t;




# 146 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/types.h" 3


 











typedef	short	dev_t;




typedef long		off_t;

typedef	unsigned short	uid_t;
typedef	unsigned short	gid_t;


typedef int pid_t;

typedef	long key_t;

typedef _ssize_t ssize_t;













typedef unsigned int mode_t __attribute__ ((__mode__ (__SI__))) ;




typedef unsigned short nlink_t;

 









 









typedef	long	fd_mask;





 

typedef	struct _types_fd_set {
	fd_mask	fds_bits[((( 64  )+((  (sizeof (fd_mask) * 8 )  )-1))/(  (sizeof (fd_mask) * 8 )  )) ];
} _types_fd_set;


















 



# 374 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/types.h" 3







# 29 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/time.h" 2 3


 

struct tm
{
  int	tm_sec;
  int	tm_min;
  int	tm_hour;
  int	tm_mday;
  int	tm_mon;
  int	tm_year;
  int	tm_wday;
  int	tm_yday;
  int	tm_isdst;
};

clock_t	    clock       (void)  ;
double	    difftime    (time_t _time2, time_t _time1)  ;
time_t	    mktime      (struct tm *_timeptr)  ;
time_t	    time        (time_t *_timer)  ;

char	  *  asctime     (const struct tm *_tblock)  ;
char	  *  ctime       (const time_t *_time)  ;
struct tm *  gmtime      (const time_t *_timer)  ;
struct tm *  localtime   (const time_t *_timer)  ;

size_t	    strftime    (char *_s, size_t _maxsize, const char *_fmt, const struct tm *_t)  ;

char	  *  asctime_r   	(const struct tm *, char *)  ;
char	  *  ctime_r   	(const time_t *, char *)  ;
struct tm *  gmtime_r   	(const time_t *, struct tm *)  ;
struct tm *  localtime_r   	(const time_t *, struct tm *)  ;

 






char      *  strptime        (const char *, const char *, struct tm *)  ;
void        tzset   	(void )  ;
void        _tzset_r   	(struct _reent *)  ;

 

# 95 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/time.h" 3


 
extern   time_t _timezone;
extern   int _daylight;
extern   char *_tzname[2];

 




 
# 119 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/time.h" 3







# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/features.h" 1 3
 


























 

# 72 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/features.h" 3








# 90 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/features.h" 3






# 126 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/time.h" 2 3


# 166 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/time.h" 3

# 175 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/time.h" 3







 

 




 


                            
                            

                            
                            

 



 




 

# 217 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/time.h" 3


# 227 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/time.h" 3

























# 29 "systemd.h" 2


 












    
    

# 621 "systemd.h"


    
# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdio.h" 1 3
 


















 













# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 1 3






 


# 19 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3



 


 





 


# 61 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


 





 


















 





 

 


# 126 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3


 




 

 


# 188 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3





 




 


# 269 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3
















 

# 315 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stddef.h" 3




 













 







# 34 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdio.h" 2 3



# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stdarg.h" 1 3
 













































 



 
















 






typedef void *__gnuc_va_list;



 

# 121 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stdarg.h" 3







 

 












# 210 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/include/stdarg.h" 3




# 37 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdio.h" 2 3


 








 

typedef __FILE FILE;








typedef _fpos_t fpos_t;





# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/stdio.h" 1 3



 










# 65 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdio.h" 2 3






	 


















 








































































 









FILE *	 tmpfile    (void)  ;
char *	 tmpnam    (char *)  ;
int	 fclose    (FILE *)  ;
int	 fflush    (FILE *)  ;
FILE *	 freopen    (const char *, const char *, FILE *)  ;
void	 setbuf    (FILE *, char *)  ;
int	 setvbuf    (FILE *, char *, int, size_t)  ;
int	 fprintf    (FILE *, const char *, ...)  ;
int	 fscanf    (FILE *, const char *, ...)  ;
int	 printf    (const char *, ...)  ;
int	 scanf    (const char *, ...)  ;
int	 sscanf    (const char *, const char *, ...)  ;
int	 vfprintf    (FILE *, const char *, __gnuc_va_list )  ;
int	 vprintf    (const char *, __gnuc_va_list )  ;
int	 vsprintf    (char *, const char *, __gnuc_va_list )  ;
int	 fgetc    (FILE *)  ;
char *   fgets    (char *, int, FILE *)  ;
int	 fputc    (int, FILE *)  ;
int	 fputs    (const char *, FILE *)  ;
int	 getc    (FILE *)  ;
int	 getchar    (void)  ;
char *   gets    (char *)  ;
int	 putc    (int, FILE *)  ;
int	 putchar    (int)  ;
int	 puts    (const char *)  ;
int	 ungetc    (int, FILE *)  ;
size_t	 fread    (void * , size_t _size, size_t _n, FILE *)  ;
size_t	 fwrite    (const void *  , size_t _size, size_t _n, FILE *)  ;



int	 fgetpos    (FILE *, fpos_t *)  ;

int	 fseek    (FILE *, long, int)  ;



int	 fsetpos    (FILE *, const fpos_t *)  ;

long	 ftell    ( FILE *)  ;
void	 rewind    (FILE *)  ;
void	 clearerr    (FILE *)  ;
int	 feof    (FILE *)  ;
int	 ferror    (FILE *)  ;
void     perror    (const char *)  ;

FILE *	 fopen    (const char *_name, const char *_type)  ;
int	 sprintf    (char *, const char *, ...)  ;
int	 remove    (const char *)  ;
int	 rename    (const char *, const char *)  ;


int	 asprintf    (char **, const char *, ...)  ;




int	 fseeko    (FILE *, off_t, int)  ;
off_t	 ftello    ( FILE *)  ;

int	 vfiprintf    (FILE *, const char *, __gnuc_va_list )  ;
int	 iprintf    (const char *, ...)  ;
int	 fiprintf    (FILE *, const char *, ...)  ;
int	 siprintf    (char *, const char *, ...)  ;
char *	 tempnam    (const char *, const char *)  ;
int	 vasprintf    (char **, const char *, __gnuc_va_list )  ;
int	 vsnprintf    (char *, size_t, const char *, __gnuc_va_list )  ;
int	 vfscanf    (FILE *, const char *, __gnuc_va_list )  ;
int	 vscanf    (const char *, __gnuc_va_list )  ;
int	 vsscanf    (const char *, const char *, __gnuc_va_list )  ;

int	 fcloseall    (void )  ;
int	 snprintf    (char *, size_t, const char *, ...)  ;



 





FILE *	 fdopen    (int, const char *)  ;

int	 fileno    (FILE *)  ;
int	 getw    (FILE *)  ;
int	 pclose    (FILE *)  ;
FILE *   popen    (const char *, const char *)  ;
int	 putw    (int, FILE *)  ;
void     setbuffer    (FILE *, char *, int)  ;
int	 setlinebuf    (FILE *)  ;
int	 getc_unlocked    (FILE *)  ;
int	 getchar_unlocked    (void)  ;
void	 flockfile    (FILE *)  ;
int	 ftrylockfile    (FILE *)  ;
void	 funlockfile    (FILE *)  ;
int	 putc_unlocked    (int, FILE *)  ;
int	 putchar_unlocked    (int)  ;


 



int	 _asprintf_r    (struct _reent *, char **, const char *, ...)  ;
int	 _fcloseall_r    (struct _reent *)  ;
FILE *	 _fdopen_r    (struct _reent *, int, const char *)  ;
FILE *	 _fopen_r    (struct _reent *, const char *, const char *)  ;
int	 _fscanf_r    (struct _reent *, FILE *, const char *, ...)  ;
int	 _getchar_r    (struct _reent *)  ;
char *	 _gets_r    (struct _reent *, char *)  ;
int	 _iprintf_r    (struct _reent *, const char *, ...)  ;
int	 _mkstemp_r    (struct _reent *, char *)  ;
char *	 _mktemp_r    (struct _reent *, char *)  ;
void	 _perror_r    (struct _reent *, const char *)  ;
int	 _printf_r    (struct _reent *, const char *, ...)  ;
int	 _putchar_r    (struct _reent *, int)  ;
int	 _puts_r    (struct _reent *, const char *)  ;
int	 _remove_r    (struct _reent *, const char *)  ;
int	 _rename_r    (struct _reent *,
			   const char *_old, const char *_new)  ;
int	 _scanf_r    (struct _reent *, const char *, ...)  ;
int	 _sprintf_r    (struct _reent *, char *, const char *, ...)  ;
int	 _snprintf_r    (struct _reent *, char *, size_t, const char *, ...)  ;
int	 _sscanf_r    (struct _reent *, const char *, const char *, ...)  ;
char *	 _tempnam_r    (struct _reent *, const char *, const char *)  ;
FILE *	 _tmpfile_r    (struct _reent *)  ;
char *	 _tmpnam_r    (struct _reent *, char *)  ;
int	 _vasprintf_r    (struct _reent *, char **, const char *, __gnuc_va_list )  ;
int	 _vfprintf_r    (struct _reent *, FILE *, const char *, __gnuc_va_list )  ;
int	 _vprintf_r    (struct _reent *, const char *, __gnuc_va_list )  ;
int	 _vsprintf_r    (struct _reent *, char *, const char *, __gnuc_va_list )  ;
int	 _vsnprintf_r    (struct _reent *, char *, size_t, const char *, __gnuc_va_list )  ;
int	 _vfscanf_r    (struct _reent *, FILE *, const char *, __gnuc_va_list )  ;
int	 _vscanf_r    (struct _reent *, const char *, __gnuc_va_list )  ;
int	 _vsscanf_r    (struct _reent *, const char *, const char *, __gnuc_va_list )  ;

ssize_t  __getdelim    (char **, size_t *, int, FILE *)  ;
ssize_t  __getline    (char **, size_t *, FILE *)  ;

# 331 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdio.h" 3

 
 



int	 __srget    (FILE *)  ;
int	 __swbuf    (int, FILE *)  ;

 




FILE	*  funopen   (const void *  _cookie,
		int (*readfn)(void *  _cookie, char *_buf, int _n),
		int (*writefn)(void *  _cookie, const char *_buf, int _n),
		fpos_t (*seekfn)(void *  _cookie, fpos_t _off, int _whence),
		int (*closefn)(void *  _cookie))  ;





 





# 387 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdio.h" 3




# 400 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdio.h" 3

 










# 432 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/stdio.h" 3





























 









 


# 623 "systemd.h" 2

    
# 1 "/opt/z8kgcc-jan-19-2009/lib/gcc-lib/z8k-pcos/2.9-ecosSWtools-990319-m20z8k-3/../../../../z8k-pcos/include/sys/pcos.h" 1 3
 







 








































 









 


























extern unsigned short _pcos_extent_length;

 
extern int errno_from_pcos_err(int pcos_err);

extern void __inline__ _pcos_print(char *str)
{
     





    asm("pushl   @rr14,rr12 \n\t"
        "ldl     rr12,%S0   \n\t"
        "push    @rr14,r5   \n\t"   
        "sc      #89        \n\t"
        "pop     r5,@rr14   \n\t"
        "popl    rr12,@rr14 \n\t" : : "r" (str)  );
}

 
struct pcostime {
    int ticks;   
    int seconds;
    int minutes;
    int hours;
    int day;
    int month;
    int year;
};

typedef unsigned char cursor_shape[12];

 












 
extern int _pcos_dgetlen(int did, unsigned long *length);
extern int _pcos_dgetposition(int did, unsigned long *length);
extern int _pcos_dseek(int did, unsigned long offset);
extern int _pcos_resetbyte(int did);
extern int _pcos_eof(int did, unsigned int *status);
extern int _pcos_putbyte(int did, unsigned char byte);
extern int _pcos_getbyte(int did, unsigned char *byte);
extern int _pcos_writebytes(int did, const void *buffer,
                            unsigned int nbytes, unsigned int *retbytes);
extern int _pcos_readbytes(int did, const void *buffer,
                           unsigned int nbytes, unsigned int *retbytes);
extern int _pcos_readline(int did, const void *buffer,
                          unsigned int nbytes, unsigned int *retbytes);
extern int _pcos_new(unsigned short length, void **memory);
extern int _pcos_newsamesegment(unsigned short length, void **memory);
extern int _pcos_dispose(int length, void **memory);
extern int _pcos_drename(const char *from, int fromlen, const char *to, int tolen);
extern int _pcos_dremove(const char *name, int namelen);
extern int _pcos_openfile(int did, const char *name, int namelen, int mode,
                          int extent_len);
extern int _pcos_close(int did);
extern int _pcos_ddirectory(const char *name, int namelen);
extern int _pcos_maxsize(unsigned short *maxsize);
extern int _pcos_search(int drive, int search_mode, int *length, char **file_pointer,
                        char *name_pointer);
extern void _pcos_selectcur(int mode);
extern void _pcos_cls(void);
extern int _pcos_crlf(void);
extern void _pcos_grfinit(int *color, void **pointer);
extern int _pcos_cleartext(unsigned int column, unsigned int row,
                           unsigned int xlen, unsigned int ylen);
extern int _pcos_scrolltext(unsigned int plane_mask, unsigned int function,
                            unsigned int src_x, unsigned int src_y,
                            unsigned int dst_x, unsigned int dst_y,
                            unsigned int xlen, unsigned int ylen);
extern int _pcos_bset(void *dest, unsigned char val, unsigned int len);
extern int _pcos_bwset(void *dest, unsigned short val, unsigned int len);
extern int _pcos_bclear(void *dest, unsigned int len);
extern int _pcos_bmove(void *dest, const void *src, unsigned int len);
extern int _pcos_dstring(char *string);
extern int _pcos_dhex(unsigned int word);
extern int _pcos_dhexbyte(unsigned char byte);
extern int _pcos_dhexlong(unsigned long byte);
extern int _pcos_dlong(unsigned long byte);
extern int _pcos_dnumw(unsigned int word, unsigned int field_width);
extern int _pcos_gettime(char *buf, unsigned int buflen);
extern int _pcos_getdate(char *buf, unsigned int buflen);
extern int _pcos_settime(char *buf, unsigned int buflen);
extern int _pcos_setdate(char *buf, unsigned int buflen);
extern int _pcos_lookbyte(int did, unsigned char *byte, unsigned char *buffer_status);
extern int _pcos_chgwindow(unsigned int fgcolor, unsigned int bgcolor);
extern int _pcos_readcur0(cursor_shape *shape, unsigned int *blinkrate,
                          unsigned int *column, unsigned int *row);
extern int _pcos_readcur1(cursor_shape *shape, unsigned int *blinkrate,
                          unsigned int *x_pos, unsigned int *y_pos);
extern int _pcos_chgcur0(unsigned int column, unsigned int row);
extern int _pcos_chgcur1(unsigned int x_pos, unsigned int y_pos);
extern void _pcos_chgcur2(unsigned int blinkrate);
extern void _pcos_chgcur3(unsigned int blinkrate);
extern void _pcos_chgcur4(cursor_shape new_shape);
extern void _pcos_chgcur5(cursor_shape new_shape);
extern int _pcos_setcontrolbyte(int did, unsigned int word_number, unsigned int word);
extern int _pcos_getstatusbyte(int did, unsigned int word_number, unsigned int *word);
extern int _pcos_checkvolume(void);

 
extern void _get_pcostime(struct pcostime *cur_time);



 
 
 
 
# 624 "systemd.h" 2


    
    
    

    
    
    
    void m20_putc(char c);
    void wait_key(void);

    
    
    

    

     
    

    
    
    
    
    
    

    
    
    

    
# 1 "m20sp.h" 1


void showsplash(void);


# 656 "systemd.h" 2

    





    

# 1185 "systemd.h"



    







    



    









    











    



# 3 "inout.h" 2

# 1 "loadsave.h" 1



void savegame(char *filename)  ;
void loadgame(char *filename)  ;
char *i2s(char *s, int v);



# 4 "inout.h" 2


void writesameln(const char *line)  ;
void writeln(const char* line)  ;
unsigned int readln(void);
char *eatcr(char *s)  ;
void interrogationAndAnalysis(void);
void clear(void);









# 8 "silkdust34_no_UTF8.c" 2



extern unsigned int verb;
extern unsigned int noun1;
extern unsigned int noun2;
extern unsigned char  adve;
extern unsigned char  actor;
extern unsigned char  adjective;
unsigned int dummy;
unsigned char  cdummy;


room *cr;

char *compressed;
unsigned char bpointer;
unsigned int cpointer;
char decompress_b[128 +1];
unsigned char currbyte;


const tree huftree[145 ]={
    {56,255,255},
    {54,255,255},
    {255,0,1},
    {57,255,255},
    {55,255,255},
    {255,3,4},
    {74,255,255},
    {255,6,2},
    {75,255,255},
    {255,8,5},
    {34,255,255},
    {86,255,255},
    {255,10,11},
    {255,7,9},
    {51,255,255},
    {52,255,255},
    {255,14,15},
    {59,255,255},
    {255,17,12},
    {49,255,255},
    {85,255,255},
    {255,19,20},
    {106,255,255},
    {71,255,255},
    {255,22,23},
    {122,255,255},
    {255,13,25},
    {79,255,255},
    {255,27,16},
    {70,255,255},
    {255,18,29},
    {53,255,255},
    {76,255,255},
    {255,31,32},
    {67,255,255},
    {255,21,34},
    {40,255,255},
    {41,255,255},
    {255,36,37},
    {82,255,255},
    {50,255,255},
    {255,39,40},
    {63,255,255},
    {255,24,42},
    {48,255,255},
    {255,44,26},
    {113,255,255},
    {255,46,28},
    {69,255,255},
    {255,48,33},
    {77,255,255},
    {255,30,50},
    {72,255,255},
    {255,52,41},
    {255,35,38},
    {80,255,255},
    {87,255,255},
    {255,55,56},
    {68,255,255},
    {255,43,58},
    {58,255,255},
    {83,255,255},
    {255,60,61},
    {45,255,255},
    {255,45,63},
    {66,255,255},
    {255,47,65},
    {78,255,255},
    {255,67,49},
    {120,255,255},
    {255,51,69},
    {255,53,54},
    {255,57,59},
    {33,255,255},
    {255,73,62},
    {65,255,255},
    {255,75,64},
    {73,255,255},
    {255,66,77},
    {84,255,255},
    {255,68,79},
    {39,255,255},
    {255,70,81},
    {10,255,255},
    {255,71,83},
    {255,72,74},
    {89,255,255},
    {255,76,86},
    {255,78,80},
    {118,255,255},
    {255,89,82},
    {107,255,255},
    {255,91,84},
    {44,255,255},
    {255,85,93},
    {255,87,88},
    {98,255,255},
    {102,255,255},
    {255,96,97},
    {119,255,255},
    {255,99,90},
    {0,255,255},
    {103,255,255},
    {255,101,102},
    {46,255,255},
    {255,104,92},
    {112,255,255},
    {109,255,255},
    {255,106,107},
    {121,255,255},
    {255,109,94},
    {99,255,255},
    {255,111,95},
    {117,255,255},
    {255,113,98},
    {100,255,255},
    {255,100,115},
    {255,103,105},
    {108,255,255},
    {255,118,108},
    {104,255,255},
    {255,110,120},
    {115,255,255},
    {255,122,112},
    {105,255,255},
    {114,255,255},
    {255,124,125},
    {110,255,255},
    {255,127,114},
    {255,116,117},
    {97,255,255},
    {255,119,130},
    {116,255,255},
    {111,255,255},
    {255,132,133},
    {255,121,123},
    {101,255,255},
    {255,136,126},
    {255,128,129},
    {255,131,134},
    {32,255,255},
    {255,135,140},
    {255,137,138},
    {255,139,141},
    {255,142,143},
};




char hufget(void)
{

unsigned char  iii;

    iii= 145 -1;
    while(1) {
        if(currbyte&0x1) {
            iii=huftree[iii].son1idx;
        } else {
            iii=huftree[iii].son0idx;
        }
        if(++bpointer==8) {
            bpointer=0;
            currbyte=compressed[++cpointer];
        } else {
            currbyte>>=1;
        }
        if(huftree[iii].c!=255)
            return huftree[iii].c;
    }
}

boolean decode(void)
{
    register char c;
    unsigned char  k=0;
    if(bpointer==0)
       currbyte=compressed[cpointer];
    do {
        c=hufget();
         ;
        decompress_b[k++]=c;
    } while(c!='\0'&&!(c==' '&&k> 128 -15)&&k< 128 );
    if(c!='\0') {
        decompress_b[k]='\0';
        return 1 ;
    }
    return 0 ;
}
const word dictionary[367 ]={
    {0xf7, 0x41, 0x4b,1,1},
    {0xe9, 0x4f, 0x41,2,2},
    {0xe9, 0xe2, 0x41,2,2},
    {0x5d, 0x52, 0x40,3,2},
    {0xef, 0x5b, 0x41,3,2},
    {0x43, 0x4b, 0xf9,3,2},
    {0x4a, 0xfa, 0xfb,3,2},
    {0x4a, 0x57, 0xfb,3,2},
    {0xe8, 0x59, 0x49,3,2},
    {0x4b, 0x54, 0x5f,3,2},
    {0xea, 0xed, 0x50,3,2},
    {0xe9, 0x4f, 0x4f,4,2},
    {0xfd, 0x41, 0x54,4,2},
    {0xfb, 0xf0, 0xe3,4,2},
    {0xf6, 0x52, 0x43,4,2},
    {0x4f, 0xf6, 0xe3,4,2},
    {0xe3, 0xf6, 0xe3,4,2},
    {0x42, 0x41, 0x52,6,2},
    {0xec, 0xf8, 0xe4,10,2},
    {0x48, 0x42, 0xe0,10,2},
    {0x48, 0x42, 0x4e,10,2},
    {0xec, 0xe9, 0xee,11,2},
    {0x40, 0xe9, 0xee,11,2},
    {0xfe, 0x50, 0x45,12,1},
    {0xe5, 0xf3, 0xfa,12,1},
    {0xef, 0xf7, 0xe6,13,2},
    {0x43, 0xf7, 0xe6,13,2},
    {0x5e, 0xf1, 0xfa,13,2},
    {0x5e, 0x5c, 0xfa,13,2},
    {0x54, 0x55, 0x42,14,2},
    {0x54, 0xf7, 0xfc,14,2},
    {0x55, 0x53, 0x45,15,1},
    {0x4c, 0x41, 0x59,15,1},
    {0x5e, 0xf4, 0xf2,17,2},
    {0x5e, 0x59, 0xf2,17,2},
    {0xf8, 0x49, 0x4b,17,2},
    {0x4b, 0x56, 0x53,17,2},
    {0xf8, 0xe4, 0x4b,17,2},
    {0xe7, 0x56, 0x53,17,2},
    {0x42, 0x45, 0x44,18,2},
    {0xe9, 0xf3, 0x52,18,2},
    {0xe9, 0xf3, 0xfc,18,2},
    {0xfc, 0x4b, 0x4b,19,2},
    {0xfc, 0xe6, 0x4b,19,2},
    {0xec, 0xe4, 0x43,19,2},
    {0xed, 0xec, 0x56,20,2},
    {0x50, 0x42, 0xf7,22,2},
    {0xea, 0xef, 0xf7,22,2},
    {0x48, 0xf2, 0xfa,22,2},
    {0x4d, 0x42, 0xf1,24,4},
    {0x44, 0xe7, 0xf2,24,4},
    {0xff, 0xef, 0x55,24,4},
    {0xf3, 0xf2, 0x44,24,4},
    {0xfb, 0xe0, 0xeb,25,4},
    {0xea, 0xfb, 0x4e,25,4},
    {0x4c, 0x47, 0xf0,26,4},
    {0x4b, 0x49, 0xfb,26,4},
    {0xe4, 0x4f, 0x59,26,4},
    {0xe7, 0xef, 0xe0,26,4},
    {0x4b, 0xe1, 0xf1,26,4},
    {0x4d, 0xfa, 0xee,26,4},
    {0x43, 0x41, 0x4e,27,2},
    {0x54, 0x49, 0x4e,27,2},
    {0x4a, 0x41, 0x52,27,2},
    {0xe6, 0x41, 0x52,27,2},
    {0x4a, 0x53, 0xea,27,2},
    {0x58, 0x49, 0xe9,27,2},
    {0x4f, 0x40, 0x49,27,2},
    {0x4f, 0x40, 0xe7,27,2},
    {0xef, 0x41, 0x4e,27,2},
    {0x56, 0x58, 0x5d,28,2},
    {0xfa, 0x58, 0x5d,28,2},
    {0x43, 0x41, 0x52,29,2},
    {0xef, 0x41, 0x52,29,2},
    {0x49, 0x54, 0x41,29,2},
    {0x31, 0x35, 0x30,29,2},
    {0x31, 0x30, 0x30,29,2},
    {0xeb, 0xf2, 0xe0,30,4},
    {0x46, 0x56, 0xe1,30,4},
    {0xf6, 0xee, 0xea,32,2},
    {0xfb, 0xf4, 0xfc,33,2},
    {0xed, 0xfa, 0x45,34,2},
    {0xf0, 0x4f, 0x43,35,2},
    {0xe9, 0xf3, 0x49,37,4},
    {0xf6, 0x41, 0x49,37,4},
    {0xec, 0xf3, 0xe1,39,2},
    {0xec, 0xf3, 0x4f,39,2},
    {0xf5, 0x45, 0x41,40,2},
    {0xe5, 0xfe, 0xef,40,2},
    {0xe8, 0x41, 0x4b,41,2},
    {0x47, 0x45, 0x54,50,1},
    {0xfa, 0x52, 0x41,50,1},
    {0xee, 0x41, 0x4b,50,1},
    {0xfc, 0x4f, 0x4f,50,1},
    {0xe7, 0xfa, 0x42,51,2},
    {0xfe, 0xf3, 0x4e,51,2},
    {0x52, 0x4e, 0x5f,51,2},
    {0xf5, 0xe4, 0x41,51,2},
    {0xf5, 0xe4, 0xef,51,2},
    {0x4e, 0x4f, 0x59,51,2},
    {0xe2, 0x4f, 0x59,51,2},
    {0xf0, 0x45, 0x53,51,2},
    {0xe5, 0xfd, 0x41,52,1},
    {0xf6, 0x41, 0x4b,53,2},
    {0xfe, 0x49, 0x45,53,2},
    {0xfe, 0xf3, 0x4f,53,2},
    {0xe5, 0xfa, 0xe8,53,2},
    {0xec, 0xf9, 0x52,54,2},
    {0xeb, 0x52, 0x4f,55,1},
    {0xe5, 0xfe, 0x41,55,1},
    {0x53, 0x45, 0x54,55,1},
    {0xe4, 0xe1, 0x52,55,1},
    {0xf8, 0x4f, 0x53,55,1},
    {0xed, 0xe9, 0x49,56,1},
    {0xff, 0xe2, 0x54,56,1},
    {0xe5, 0xf6, 0x4c,57,2},
    {0xec, 0x45, 0x41,58,2},
    {0xe3, 0x41, 0x4d,58,2},
    {0xe3, 0xec, 0x4d,58,2},
    {0xf3, 0xee, 0xfd,58,2},
    {0x5f, 0xee, 0xfd,58,2},
    {0xf4, 0xf1, 0x53,59,2},
    {0xf4, 0xf1, 0xfd,59,2},
    {0xe7, 0x49, 0x4e,59,2},
    {0xfa, 0xef, 0x4f,59,2},
    {0xf5, 0xe8, 0x52,60,2},
    {0xee, 0x55, 0x44,62,2},
    {0xfd, 0x49, 0x56,66,1},
    {0xf5, 0xea, 0x46,66,1},
    {0xee, 0xe4, 0x55,67,1},
    {0xe0, 0x41, 0x53,67,1},
    {0x55, 0xea, 0xea,68,2},
    {0xe4, 0x41, 0x4c,68,2},
    {0xe4, 0xec, 0x4c,68,2},
    {0xea, 0xf3, 0x4e,68,2},
    {0xea, 0xf3, 0xe0,68,2},
    {0x5b, 0x4a, 0xfa,68,2},
    {0xfb, 0xf7, 0x41,68,2},
    {0xfb, 0xf7, 0xef,69,2},
    {0x5c, 0x50, 0xe8,69,1},
    {0xe3, 0x55, 0x4c,69,1},
    {0xf7, 0xf2, 0xe7,69,1},
    {0xf7, 0x4f, 0x56,69,1},
    {0xe7, 0xf3, 0x41,69,1},
    {0xe7, 0x55, 0x53,69,1},
    {0xfc, 0xff, 0x45,69,1},
    {0x45, 0xfe, 0xfe,69,1},
    {0x45, 0x58, 0x0,70,1},
    {0x4d, 0xef, 0xf2,70,1},
    {0x58, 0x0, 0x0,70,1},
    {0xe9, 0x45, 0x41,70,1},
    {0xfe, 0xf8, 0xf4,70,1},
    {0xe8, 0xf7, 0x49,71,1},
    {0x50, 0x55, 0x54,71,1},
    {0xf3, 0xe2, 0xfa,71,1},
    {0x49, 0x0, 0x0,72,2},
    {0x49, 0x4e, 0x56,72,2},
    {0xf3, 0x4e, 0x56,72,2},
    {0x43, 0x52, 0x5b,72,2},
    {0x42, 0x59, 0x45,73,1},
    {0xfb, 0x48, 0x4f,74,1},
    {0xe8, 0x48, 0x41,75,1},
    {0xed, 0xe5, 0x45,75,1},
    {0xe0, 0x41, 0x4c,75,1},
    {0xf9, 0xe2, 0x4f,75,1},
    {0xee, 0x58, 0x49,76,1},
    {0xfc, 0x54, 0x4f,76,1},
    {0xfa, 0x55, 0x49,76,1},
    {0xf6, 0x4c, 0x41,77,1},
    {0xfc, 0xe7, 0x45,78,1},
    {0x49, 0xe9, 0xe1,78,1},
    {0x5e, 0x5f, 0xe8,78,1},
    {0xf8, 0x49, 0x4c,78,1},
    {0xe0, 0x4f, 0x4f,79,2},
    {0x4e, 0x0, 0x0,80,2},
    {0xfc, 0x4f, 0x52,80,2},
    {0x46, 0x0, 0x0,80,2},
    {0xe5, 0xf9, 0x52,80,2},
    {0xf8, 0xf9, 0x55,81,2},
    {0x41, 0x46, 0x54,81,2},
    {0x41, 0x0, 0x0,81,2},
    {0x45, 0x0, 0x0,82,2},
    {0xee, 0x41, 0x53,82,2},
    {0x40, 0x44, 0x4a,82,2},
    {0x53, 0x0, 0x0,82,2},
    {0x57, 0x0, 0x0,83,2},
    {0xfc, 0x45, 0x53,83,2},
    {0xfb, 0x4f, 0x52,83,2},
    {0x50, 0x0, 0x0,83,2},
    {0xe8, 0xf9, 0x4f,84,2},
    {0x55, 0x0, 0x0,84,2},
    {0x55, 0x50, 0x0,84,2},
    {0x53, 0x42, 0xe7,84,2},
    {0xf2, 0xec, 0x4c,85,2},
    {0x44, 0x0, 0x0,85,2},
    {0xf5, 0x4f, 0x57,85,2},
    {0xe7, 0x55, 0x51,85,1},
    {0xef, 0xe2, 0x44,85,2},
    {0xf5, 0x49, 0x4c,86,1},
    {0xed, 0xed, 0x54,87,2},
    {0x42, 0x55, 0x59,88,1},
    {0xea, 0x4f, 0x4c,90,2},
    {0xfb, 0x4f, 0x53,90,2},
    {0xe4, 0x49, 0x43,95,1},
    {0xe4, 0xf4, 0x55,98,2},
    {0x47, 0x4f, 0x0,100,1},
    {0x52, 0x55, 0x4e,100,1},
    {0xe3, 0x41, 0x4c,100,1},
    {0xe2, 0xef, 0x4f,102,2},
    {0xe2, 0xef, 0xe1,102,2},
    {0xe6, 0x4f, 0x43,102,2},
    {0xe6, 0xe2, 0x43,102,2},
    {0xe8, 0x4f, 0x53,103,2},
    {0xe8, 0xe2, 0x53,103,2},
    {0xfc, 0x48, 0x49,104,2},
    {0x4b, 0x51, 0xf6,105,2},
    {0xfe, 0xef, 0x4f,108,2},
    {0xfe, 0xef, 0xe1,108,2},
    {0x4c, 0x0, 0x0,110,1},
    {0xf8, 0x4f, 0x4f,110,1},
    {0xec, 0xf2, 0xff,111,1},
    {0x58, 0xe2, 0xec,112,2},
    {0x40, 0xfe, 0xe8,112,2},
    {0xe7, 0xf2, 0xfb,112,2},
    {0xea, 0x49, 0x4c,112,2},
    {0xfa, 0x45, 0x41,120,1},
    {0x54, 0xf5, 0xea,121,1},
    {0xef, 0xf1, 0xf8,121,1},
    {0xfc, 0x41, 0x49,122,1},
    {0xe0, 0xef, 0x59,123,2},
    {0xe0, 0xef, 0xf7,123,2},
    {0xf6, 0x4f, 0x56,124,2},
    {0xe0, 0xff, 0x45,143,1},
    {0x5d, 0x4e, 0x43,144,2},
    {0x5d, 0x56, 0xf6,144,2},
    {0x45, 0xff, 0xfd,144,2},
    {0xf5, 0xff, 0xe3,156,2},
    {0x4f, 0xe6, 0xf9,157,1},
    {0xe6, 0xe2, 0xf9,157,1},
    {0xf2, 0x4f, 0x4e,157,1},
    {0xf6, 0xe8, 0x49,157,1},
    {0xe3, 0xfa, 0x52,157,1},
    {0xf6, 0xe0, 0x4f,159,2},
    {0xed, 0xe2, 0xf6,159,2},
    {0xe7, 0x49, 0x46,160,1},
    {0xfc, 0x49, 0x52,164,2},
    {0xf9, 0xf2, 0x43,165,2},
    {0xfb, 0xe3, 0x47,166,2},
    {0xe3, 0x4f, 0x52,168,2},
    {0xfb, 0xfd, 0x53,169,2},
    {0xf8, 0x41, 0x52,171,2},
    {0x35, 0x30, 0x41,174,2},
    {0xe9, 0xe4, 0xe7,176,2},
    {0x4b, 0x45, 0x59,177,2},
    {0xf3, 0xfe, 0xff,178,2},
    {0xed, 0x4e, 0x47,179,2},
    {0xff, 0xfa, 0x4c,180,2},
    {0x50, 0x4f, 0xe3,181,2},
    {0x41, 0xfe, 0xe0,182,4},
    {0x4d, 0xf2, 0xe3,182,4},
    {0x4d, 0x56, 0xfe,183,4},
    {0x4a, 0x52, 0x5d,183,4},
    {0xf8, 0xfe, 0x49,184,4},
    {0xf8, 0xfe, 0xe7,184,4},
    {0x47, 0xf0, 0xe9,186,4},
    {0x59, 0xfe, 0xe4,186,4},
    {0xf8, 0xff, 0xf0,186,4},
    {0x4c, 0xe2, 0xed,187,4},
    {0xf7, 0x4f, 0x4f,187,4},
    {0xe0, 0x49, 0x4e,187,4},
    {0xed, 0xf7, 0x52,188,4},
    {0x4c, 0x5b, 0x59,188,4},
    {0xf0, 0x45, 0x44,190,4},
    {0xee, 0xef, 0xf4,190,4},
    {0xe3, 0xf5, 0xfa,190,4},
    {0x52, 0x4f, 0x59,191,4},
    {0x57, 0x55, 0x58,191,4},
    {0x4e, 0xea, 0xfd,193,2},
    {0x4b, 0x49, 0xf3,194,2},
    {0xf2, 0xf0, 0xfd,195,2},
    {0x40, 0xf0, 0xff,196,2},
    {0xfd, 0x41, 0x49,198,2},
    {0xfd, 0xec, 0x49,198,2},
    {0x53, 0x5f, 0x4b,199,2},
    {0x47, 0xf6, 0xed,200,2},
    {0xf6, 0x4f, 0x4f,200,2},
    {0xf6, 0xe2, 0x4f,200,2},
    {0x53, 0x49, 0x54,201,1},
    {0xe9, 0xe2, 0x45,201,1},
    {0x44, 0xfa, 0xf7,202,2},
    {0xef, 0xf7, 0x4f,203,1},
    {0xf4, 0xf7, 0x54,204,2},
    {0xe5, 0xf1, 0xf5,205,1},
    {0xe7, 0xeb, 0x49,206,1},
    {0xe7, 0x4f, 0x4f,206,2},
    {0xe7, 0xe2, 0x4f,206,2},
    {0xe1, 0x41, 0x50,207,2},
    {0x4d, 0x41, 0x50,207,2},
    {0xf6, 0x52, 0x41,210,1},
    {0xf5, 0xe7, 0x49,211,1},
    {0x45, 0x41, 0x54,211,1},
    {0x48, 0xe5, 0xf3,211,1},
    {0xe3, 0xf4, 0xfd,212,2},
    {0x4f, 0xf4, 0xfd,212,2},
    {0xe5, 0x55, 0x52,213,1},
    {0xe0, 0xf8, 0xfd,219,2},
    {0xf7, 0xfa, 0xeb,220,2},
    {0xea, 0x4f, 0x52,230,1},
    {0xf7, 0x59, 0x41,232,2},
    {0x57, 0x44, 0xfb,233,2},
    {0xff, 0xed, 0xf6,235,1},
    {0xfa, 0xfa, 0xe2,239,2},
    {0x56, 0xee, 0xfb,240,2},
    {0xf2, 0x4f, 0x52,240,2},
    {0xe3, 0xe0, 0x4f,240,2},
    {0xef, 0xfe, 0x44,241,2},
    {0xf1, 0xf7, 0x54,246,2},
    {0x5d, 0xf7, 0xec,246,2},
    {0x42, 0x4f, 0x58,246,2},
    {0xf8, 0xe2, 0x58,246,2},
    {0xf6, 0xe9, 0xf4,246,2},
    {0xf8, 0x4f, 0x43,247,2},
    {0x57, 0xf0, 0xfa,247,2},
    {0x47, 0x55, 0x4e,248,2},
    {0xeb, 0x55, 0x4e,248,2},
    {0xf2, 0xf5, 0x49,249,2},
    {0x54, 0x56, 0xfe,254,4},
    {0x54, 0xfb, 0xfe,254,4},
    {0xe6, 0xf2, 0xf4,254,4},
    {0x52, 0x4e, 0x59,255,4},
    {0x4f, 0x55, 0x54,300,1},
    {0xf5, 0x4b, 0x55,390,2},
    {0x59, 0x4b, 0x55,390,2},
    {0xf0, 0x4f, 0x41,391,2},
    {0x48, 0x59, 0xf4,392,2},
    {0x58, 0x5e, 0x57,393,2},
    {0x59, 0xea, 0xe6,394,2},
    {0x59, 0x47, 0xe6,394,2},
    {0x4f, 0x49, 0x4c,395,2},
    {0x5f, 0x52, 0x55,395,2},
    {0xf3, 0x52, 0x55,395,2},
    {0xee, 0xe4, 0x52,395,2},
    {0xee, 0xf4, 0x52,395,2},
    {0xf8, 0x48, 0x4f,396,1},
    {0xf2, 0xe9, 0x41,397,2},
    {0xf9, 0xe3, 0x56,398,2},
    {0xf4, 0xfb, 0x4b,399,2},
    {0xef, 0xee, 0x52,400,1},
    {0xf2, 0x55, 0x43,400,1},
    {0xe8, 0x55, 0x4e,400,1},
    {0xe8, 0xf8, 0x4e,400,1},
    {0xfc, 0x49, 0x53,400,1},
    {0x50, 0x45, 0x45,401,1},
    {0xf8, 0x48, 0x49,401,1},
    {0xf9, 0xec, 0xfc,406,1},
    {0xe8, 0xf9, 0x55,406,1},
    {0xe7, 0x49, 0x53,406,1},
    {0xf9, 0xf8, 0xfc,406,1},
    {0xe7, 0x45, 0x4c,407,1},
    {0xf9, 0x4e, 0x46,407,1},
    {0xe3, 0x49, 0x4e,408,1},
    {0x52, 0xfa, 0xfc,987,1},
    {0xf7, 0x4f, 0x41,988,1},
    {0xe9, 0x41, 0x56,989,1},
    {0xfd, 0xfe, 0x5a,1000,1},
    {0xe5, 0x48, 0x45,9999,3},
    {0x41, 0x4e, 0x44,9999,3}
};

const char long_d60[]={0xFB,0x27,0xAD,0xD3,0xBA,0x31,0xC1,0x78,0x4D,0x7C,0xCB,0xA8,0x92,0xE4,0x29,0xF6,0x35,0xF1,0x8D,0x61,0x5C,
0xD2,0x44,0x6E,0x16,0x9E,0x62,0xBF,0xB5,0x14,0x77,0x78,0x4D,0x5C,0x7,0xF3,0xE0,0x39,};
const char short_d60[]={0x7B,0x32,0x59,0x17,0xE};
const char long_d61[]={0xBB,0xAD,0x9E,0x8C,0xAF,0x4A,0xB1,0x24,0xEE,0x5B,0x9E,0xDF,0xDA,0x4,0x86,0xBD,0xC5,0xE6,0x33,0x83,0xD7,0x4,
0xE3,0xC9,0xB8,0xD1,0x6D,0x21,0xB7,0xD8,0x7C,0xDB,0x4C,0xE2,0xF5,0xA8,0x49,0x8A,0xC4,0x7D,0xB5,0x91,0x6C,
0xD7,0x6B,0xE2,0xB,0xE9,0x39,};
const char short_d61[]={0x23,0x70,0xC7,0x90,0xB4,0xB8,0xC5,0xE6,0xBB,0xDF,0xA2,0xE6,0xF2,0xBB,0x3};
const char long_d62[]={0xBB,0xAD,0x9E,0x8C,0x93,0x2C,0xB2,0x78,0x4D,0x5C,0x7,0xF3,0x60,0xBE,0xBE,0x41,0x8A,0x33,0xDC,0x62,0xF3,
0xCD,0x56,0xB,0xDE,0x47,0xEC,0xB6,0x8F,0x52,0x10,0xD6,0x7D,0x88,0xEA,0xD5,0x2E,0x6A,0x82,0xAF,0xD,0xD7,0x38,0xD7,
0x3A,0x2,0x62,0x48,0xAD,0x6F,0x6D,0x2,0xBF,0x26,0xAE,0x87,0x6E,0x1E,0x5F,0x6F,0x8E,0x49,0xDC,0xE7,0xA3,
0xE4,0x3D,0x28,0xD4,0xA3,0xAC,0x2,0x8B,0xE7,0x0};
const char short_d62[]={0x23,0x63,0xF3,0xCD,0x56,0xB,0xE};
const char long_d63[]={0xBB,0xAD,0x9E,0x8C,0xAF,0x4A,0xB1,0x24,0xEE,0x5B,0x9E,0xDF,0xDA,0x4,0x86,0xBD,0xC5,0xE6,0x33,0x83,0xD7,0x4,
0xE3,0xC9,0xB8,0xD1,0x6D,0x21,0xB7,0xD8,0x7C,0xDB,0x4C,0xE2,0xF5,0xA8,0x49,0x8A,0xC4,0x7D,0xB5,0x91,0x6C,
0xD7,0x6B,0xE2,0xB,0xE9,0x39,};
const char short_d63[]={0x23,0x70,0xC7,0x90,0xB4,0xB8,0xC5,0xE6,0xBB,0xDF,0x56,0x25,0x6B,0x9D,0x6C,0xFD,0xEE,0x0};
const char long_d64[]={0xFB,0x74,0x4D,0x12,0xF7,0x9A,0xAA,0x2F,0xE4,0x69,0xDD,0x44,0x8B,0xB4,0x80,0x57,0xBF,0x26,0x3E,0x9B,0x69,0xA7,
0x5B,0x3C,0x7};
const char short_d64[]={0x23,0x63,0xF3,0xDD,0x6F,0x51,0x73,0xF9,0xDD,0x1};
const char long_d65[]={0xBB,0xAD,0xBE,0x80,0xD7,0xC4,0x43,0xB2,0x8B,0xCF,0xAC,0x6D,0x8E,0x5F,0x93,0x5B,0xB9,0xF3,0xC6,0xA4,0x6D,0xBE,
0x26,0xAE,0x83,0x79,0x38,0xAD,0x87,0x4E,0xB,0x3B,0xFE,0x16,0x7A,0xC1,0x5E,0x1B,0x9E,0x9F,0x48,0xD3,0xF0,0x18,
0x95,0x21,0xD0,0xF6,0xAD,0x4D,0x60,0xEF,0x3B,0x1E,0x92,0x5D,0x7C,0xE3,0x14,0xBC,0xE5,0x79,0x1F,0x89,0xFB,0xA8,
0x57,0x9D,0xD6,0xD5,0x82,0xBD,0xDE,0xFC,0x9A,0xB4,0xC6,0x97,0xAE,0xEB,0xC9,0xD7,0xB9,0xE3,0xD7,0xC4,0xB7,
0x8C,0x2A,0x49,0xCC,0xD7,0xB7,0xD4,0x48,0x9E,0xF5,0x9A,0x78,0xEA,0x75,0x88,0x7D,0xEB,0xAF,0x89,0xAF,0x49,
0x91,0xE7,0x0};
const char short_d65[]={0xFB,0xDE,0x69,0x49,0xDC,0x5B,0x6C,0x3E,0x7};
const char long_d66[]={0xBB,0xAD,0x9E,0x8C,0xAF,0x4A,0xB1,0x24,0xEE,0x5,0x66,0xEB,0xD5,0xAF,0x89,0x2F,0xA4,0xE7,0x0};
const char short_d66[]={0x23,0x63,0xF3,0xDD,0x6F,0xAB,0x92,0xB5,0x4E,0xB6,0x7E,0x77,0x0};
const char long_d67[]={0x7B,0xCB,0x7C,0x3D,0xBF,0xA2,0xE4,0x85,0x30,0xDC,0x62,0x6B,0xCE,0x82,0x7D,0x14,0x72,0xC3,0xF8,0x81,0xEA,0xDA,
0xF0,0xFC,0x8A,0x33,0x84,0x87,0x8C,0x23,0xEF,0xBB,0xAD,0xBE,0x80,0xE7,0x2D,0x96,0xEF,0x6,0xD5,0x7C,0x19,0xFD,0x6D,
0x26,0xF1,0x1A,0x3F,0x1F,0x48,0xE3,0xE4,0x61,0xFC,0x9A,0xF8,0x96,0x51,0x25,0x89,0xF9,0xBA,0x6,0xFB,0x14,0xFB,
0xFC,0x16,0x7A,0xA1,0x3C,0x7};
const char short_d67[]={0x7E,0xCD,0xA8,0x92,0xC4,0x7C,0x7D,0x4B,0x8D,0xC4,0x1};
const char long_d70[]={0xFB,0x27,0xAD,0xD3,0x7A,0x4D,0x7C,0x4B,0x8D,0xE4,0xC6,0x4,0xE3,0x23,0x30,0xC9,0x86,0xB5,0xBE,0x27,0xD3,0xB6,0x35,
0xF7,0x5A,0xFD,0x15,0x80,0x68,0x79,0xDF,0x5B,0xE6,0xEB,0x21,0xD9,0x5,0xBF,0x66,0xCA,0x87,0x56,0xBC,0x9E,0x62,
0x5F,0x13,0x8F,0x73,0xB6,0x9B,0x32,0x5C,0x57,0x2C,0x54,0x8A,0x71,0x5A,0x8F,0x9B,0x71,0x86,0x4E,0x2,0x3B,
0xBE,0xA6,0xEA,0x19,0x25,0xD7,0x75,0xEE,0xF8,0x35,0xB3,0x4E,0x75,0x5A,0x97,0xAE,0x9B,0xC0,0xC3,0x2D,0xE9,0x3A,
0x18,0x52,0xDE,0x77,0x5B,0x7D,0x1,0xD7,0xBA,0x7D,0xEB,0x29,0xF6,0x71,0x46,0xEB,0x1D,0x41,0xDE,0xF2,0x9,
0xBE,0xC5,0xF2,0xDD,0x98,0xB4,0xCD,0xD3,0x7A,0xA0,0xBA,0x36,0x3C,0xE5,0x8,0x70,0x53,0xEA,0x95,0x5A,0xC0,
0x43,0xC6,0x91,0xE7,0x0};
const char short_d70[]={0x7B,0x32,0x6D,0x5B,0x73,0xAF,0xD5,0xE6,0xEB,0x5B,0x6A,0x24,0xE};
const char long_d71[]={0xFB,0x27,0xAD,0xD3,0xFA,0xD0,0x8A,0x3F,0x3B,0xC6,0xAD,0x62,0x12,0xF7,0x35,0xF1,0x91,0x68,0xC5,0x82,0xC1,0xFB,0xDE,
0x3A,0xAD,0x6F,0x1,0x29,0xD7,0x54,0x9D,0xD6,0xA5,0xEB,0x26,0xF0,0xF0,0x90,0xEC,0x62,0x7C,0xEC,0x41,0x51,0x14,
0xC1,0xDE,0xA0,0x9A,0xCF,0x6B,0xB0,0xE3,0xE7,0x57,0x9C,0x21,0xBC,0x52,0xB,0xB8,0x41,0x35,0x5F,0x46,0x7F,0x9B,
0x49,0xBC,0x9E,0x62,0x9F,0xDF,0x42,0x2F,0x94,0xF7,0xFD,0x93,0xD6,0x5D,0x32,0x61,0x3D,0x1F,0xB7,0xE4,0x2A,0xDA,
0x9E,0x51,0x84,0xE4,0x94,0xD,0xAF,0x7E,0x4D,0x5A,0x8F,0x42,0x6E,0x18,0x3F,0x50,0x5D,0x1B,0x9E,0x5F,0x71,0x86,
0xF0,0x28,0x39,0x75,0x9D,0xE4,0x21,0xE3,0xC8,0xFB,0x6E,0xAB,0x2F,0xE0,0x35,0xF1,0x2D,0x43,0x7C,0x33,0x61,0xA9,0xC0,
0x9C,0x82,0x94,0x2F,0xE4,0x75,0xEE,0xF8,0xF9,0xA8,0xB9,0x66,0x7,0x78,0xE};
const char short_d71[]={0xFB,0x8A,0x29,0x50,0x9A,0xAF,0x6F,0xA9,0x91,0x38,};
const char long_d72[]={0xFB,0x27,0xAD,0xD3,0x7A,0x9E,0x11,0xB2,0xC8,0x84,0x30,0x3C,0x24,0xBB,0x38,0x77,0xC7,0xF,0x54,0xD7,0x86,
0xE7,0xA3,0xE4,0xD4,0x75,0x92,0x87,0x8C,0xA3,0xF1,0xD,0xAA,0xF9,0x7C,0x68,0x71,0x5F,0xA9,0x5,0xDC,0x98,0x60,
0x7C,0x68,0xF5,0x14,0xFB,0xC,0xE1,0x35,0xF1,0xAE,0x9,0x7E,0x94,0x6B,0x41,0x5C,0xF0,0x3A,0xB2,0x9E,0x62,
0xBF,0x22,0x88,0x7D,0x51,0x8C,0x57,0xBB,0xA8,0x9,0x3E,0xC9,0x6B,0xE2,0x30,0x41,0x48,0xDC,0x75,0xD,
0x7A,0x33,0xEE,0x36,0x89,0xFB,0xEA,0xAF,0x0,0x44,0x9E,0x3};
const char short_d72[]={0x23,0x93,0x90,0xB8,0xE7,0xEE,0xD8,0x1};
const char long_d73[]={0xFB,0x27,0xAD,0xD3,0x7A,0x4D,0x3C,0xA,0xB9,0xE1,0xC6,0x4,0xE3,0x3B,0x82,0x6,0xAE,0xAF,0x0,0x44,0x6B,0x7C,
0x13,0x78,0xF8,0xA2,0x98,0x42,0xF2,0xAB,0x3F,0xB4,0xE2,0x6F,0xA9,0x91,0x78,0xE};
const char short_d73[]={0x3B,0x82,0x6,0x2E,0xF3,0xF5,0x2D,0x35,0x12,0x7};
const char long_d74[]={0xA3,0xC3,0x4,0xCE,0x70,0x2A,0xC4,0xEB,0x35,0xB3,0xBE,0x27,0xD3,0xB6,0x35,0xF7,0x5A,0xFD,0x88,0x11,0x25,0xC3,
0x5E,0x6F,0x7E,0x4D,0x3C,0xAD,0x9,0x52,0x8A,0xF1,0x64,0x7C,0x82,0x31,0xDA,0x45,0xC5,0xE0,0x56,0xEB,0x21,
0xD9,0xC5,0xB7,0x14,0x5A,0x5,0x5E,0xDF,0x5A,0x2A,0x49,0x48,0xDC,0xAF,0x28,0x19,0x8F,0x8,0x1B,0xD6,0xF8,0x21,
0xD9,0xC5,0x47,0x22,0x79,0xBD,0xF5,0x47,0xC9,0xA9,0xEB,0x24,0xE3,0x6F,0x29,0xEB,0xAD,0xBF,0x29,0x3C,0xC5,0xBE,
0x6B,0x82,0x1F,0x94,0xC6,0xB4,0xA5,0xD4,0xF2,0x1C};
const char short_d74[]={0x7E,0x74,0xB0,0xF7,0x5B,0xD4,0x5C,0x7E,0x77,0x0};
const char long_d75[]={0xBB,0xAD,0xBE,0x2A,0xC5,0x9E,0xE4,0xF9,0x90,0xEC,0xE2,0xB3,0x83,0xBD,0x31,0xC1,0xB8,0xDB,0x6D,0xD7,0x93,
0xF1,0x55,0xCD,0xB0,0xD7,0x9B,0x5F,0x9C,0xB2,0xA2,0xE6,0xF2,0xBE,0x43,0x4E,0x71,0xD4,0x8B,0xC4,0x3D,0x71,
0xCB,0x6D,0x37,0x3F,0x20,0xED,0x7A,0xEA,0xF5,0x6A,0x23,0xD9,0xAE,0xD7,0xC4,0x37,0x86,0x61,0xBE,0xBE,0x7,0x95,0x5C,
0xE0,0xE5,0x39,};
const char short_d75[]={0x66,0x26,0xC9,0x67,0x7,0xEB,0x0};
const char long_d76[]={0x66,0xA6,0xC,0x77,0xBB,0xED,0x7A,0x32,0xBE,0xAA,0x19,0xF6,0x13,0x8C,0xD1,0xBE,0xA5,0xAC,0xB7,0xFE,0x28,0x39,
0x75,0x9D,0x64,0xFC,0xA6,0x30,0x7E,0x9C,0x32,0xBC,0x6,0xC6,0x1A,0x7F,0x45,0xC9,0x58,0x4F,0xB1,0xAF,0xEE,0xB0,
0x3C,0x7};
const char short_d76[]={0x7E,0x74,0xB0,0xF7,0xDB,0xAA,0x64,0xAD,0x93,0xAD,0xDF,0x1D};
const char long_d77[]={0xFB,0x27,0xAD,0xD3,0x7A,0x4D,0x3C,0xA,0xB9,0xE1,0xC6,0x4,0xE3,0x35,0xF1,0x8D,0x61,0x8C,0xBF,0x75,0x1C,0xF5,
0x82,0xBD,0x36,0xBC,0x26,0x3,0x8F,0x21,0x4F,0xB1,0x2F,0xA3,0x6F,0x74,0xC,0x19,0x7F,0x5,0x20,0x5A,0xDE,0x77,
0x5B,0x7D,0x1,0xAF,0x9,0xE2,0x6B,0xE0,0x9A,0x6B,0xFC,0x85,0x28,0x39,0xB,0xF6,0xDA,0xF0,0x4D,0x71,0x25,
0xC9,0x1A,0x7F,0xC5,0x19,0xC2,0xB7,0xD4,0x48,0x50,0xEB,0x29,0xF6,0x65,0xF4,0xA3,0xE6,0x9A,0x1D,0xB0,0x3C,0x7};
const char short_d77[]={0x7E,0x65,0x18,0xE6,0xEB,0x7B,0x50,0xC9,0x5,0x5E,0xE};
const char long_d80[]={0x66,0xEC,0xB6,0x4F,0xB1,0xCF,0x33,0x16,0xD8,0x84,0xB7,0x7E,0xCB,0x24,0x3E,0x12,0xF7,0x46,0x16,0xF8,0xB4,
0xBE,0xAA,0x19,0xF6,0x13,0x8C,0xF1,0x7D,0x88,0xEA,0x24,0xD7,0xDA,0x2C,0xD6,0xA3,0x90,0x1B,0xEC,0x49,0xBE,0x75,
0x1C,0x25,0x57,0xC,0xA9,0xE5,0x39,};
const char short_d80[]={0x23,0xA4,0x14,0xF,0xE};
const char long_d81[]={0xFB,0x27,0xAD,0xD3,0x7A,0x4D,0xDC,0x47,0xE2,0xDA,0x8E,0xDF,0xFA,0x77,0x5B,0xAD,0x5,0x7D,0xFC,0x9A,0xF8,0xD6,0xED,
0x7B,0xEB,0xAF,0x89,0x8F,0x3C,0x48,0xC6,0x10,0x78,0xDF,0x6D,0xF5,0x5,0x3C,0x1F,0x92,0x5D,0x7C,0x55,0x9B,0x30,
0x7E,0x5E,0xCB,0x45,0xF2,0x14,0xFB,0xBC,0xD1,0xEC,0xD3,0x20,0xDB,0xF4,0x1C};
const char short_d81[]={0x23,0x99,0x21,0x60,0x70,0x0};
const char long_d82[]={0xFB,0x27,0xAD,0x47,0x21,0x37,0x9C,0xD6,0x4D,0xE0,0xE1,0xB3,0xEB,0x29,0xF6,0x5B,0x4B,0x25,0xC9,0x7A,0x4D,
0x3C,0x4E,0x92,0xAF,0x49,0x91,0xF9,0x3A,0xC4,0x25,0xC1,0x53,0xEC,0x53,0x36,0xA,0x21,0x79,0x38,0xF6,0xA0,0x28,0x8A,
0x21,0x35,0xDA,0x57,0x21,0xE3,0xBB,0x10,0x70,0x56,0xF3,0x1A,0x3F,0x1F,0x92,0x5D,0xDC,0xC8,0x2,0x9F,0xB1,
0xC0,0xA6,0x26,0x1E,0x5F,0x27,0xC6,0x61,0xB6,0x48,0x5C,0x45,0x6B,0x82,0xD7,0xF8,0xA8,0xCD,0x73,0x0};
const char short_d82[]={0xFB,0x12,0x97,0x4,0xE7,0xEE,0xD8,0x1};
const char long_d83[]={0x66,0x4,0xF3,0xF0,0x55,0xC8,0xF8,0x10,0x97,0x4,0xEB,0x9A,0x62,0xF9,0xD6,0x19,0xBC,0xEF,0x78,0x48,0x76,0xF1,0x3D,
0xA8,0x94,0xA2,0x1A,0x4E,0xEB,0xAB,0x9A,0x61,0x5F,0x13,0x8C,0xF1,0x49,0xAE,0x29,0xF1,0x81,0xD7,0x17,0xA2,
0xE4,0x2C,0xD8,0xEB,0xDC,0xF1,0x6B,0xE2,0x8C,0x55,0x6F,0xFD,0x35,0xF1,0x91,0x7,0xC9,0x18,0x82,0x6B,0xC3,
0x53,0x9E,0xC4,0x3B,0x17,0xB9,0xB3,0xAE,0xA9,0xE0,0x9B,0x48,0xEB,0x7D,0xAF,0x7C,0xCB,0x85,0xB7,0x7E,0x9D,0x18,0xE3,0x1B,
0x59,0xE0,0x6F,0x29,0xD7,0xF0,0x48,0xC5,0x11,0xEC,0x49,0xAE,0x73,0xC7,0xAF,0x89,0x6B,0x5D,0xD5,0xF1,0xAB,
0xF,0xB3,0x45,0xE2,0x2A,0x5A,0xF3,0x54,0x9E,0x3};
const char short_d83[]={0x7E,0xED,0xC,0xD7,0x94,0xF8,0xC0,0xE};
const char long_d84[]={0xFB,0x27,0x1E,0x11,0x67,0xC1,0x7C,0x7D,0x4D,0x8A,0x4E,0xEB,0xB1,0xDA,0xE6,0x57,0x9C,0x21,0x80,0x5F,0x33,0xE5,
0x35,0xF1,0x91,0x7,0xC9,0x18,0x82,0xF1,0x35,0x55,0xA7,0x75,0x3D,0x57,0x81,0xBD,0xEF,0xD3,0x5A,0xDB,0xE1,0xB4,0x9E,
0xDC,0x4A,0xEC,0xF8,0x19,0xC2,0x6B,0xE2,0x11,0x71,0x16,0xD6,0x67,0x9A,0x70,0xAD,0x93,0x2D,0xEC,0x6B,0xE2,0x23,
0xF,0x92,0x31,0x4,0xE3,0x4B,0xD7,0x67,0x9A,0x48,0xDC,0x7,0xE8,0xF5,0x58,0x6D,0xF3,0x13,0xC,0xCF,0x1};
const char short_d84[]={0xFB,0x27,0xAE,0x31,0x59,0x17,0x6F,0xFD,0x35,0xF1,0x88,0x38,0xB,0x5F,0x93,0x22,0x7};
const char long_d90[]={0xFB,0x27,0xAD,0x47,0x21,0x37,0x9C,0xD6,0xF3,0x3A,0x85,0x9A,0xC3,0x67,0xB2,0xD6,0x8A,0xAF,0x16,0xEC,0xB5,0xE1,
0x3A,0xAD,0x9,0x8E,0x21,0x4F,0xB1,0x5F,0x71,0x86,0x70,0xAD,0xB3,0xD6,0x49,0xBE,0x23,0xC0,0x6C,0x8A,0x65,0x4A,0xF3,
0xF5,0xA5,0x34,0xC5,0x9A,0xF7,0xFD,0x13,0x8C,0x27,0xE3,0x1D,0xEC,0x75,0x5A,0xF3,0x5A,0x67,0xAD,0xA7,0xD8,0x47,
0x14,0xB0,0xDE,0xFA,0x59,0x69,0x1A,0xAD,0x79,0x98,0xC0,0x83,0x31,0xC1,0xF0,0xFC,0xFD,0x77,0x5B,0x7D,0x4B,0xB9,0xDB,0xA3,
0xDD,0xC0,0xAA,0xF1,0x91,0xAB,0x1C};
const char short_d90[]={0x66,0xA4,0x35,0x49,0xDC,0xCF,0x64,0xAD,0x15,0x3B,};
const char long_d91[]={0xBB,0xAD,0xBE,0x2A,0xC5,0xBE,0xE5,0x35,0x71,0x8B,0xCD,0xF7,0xD6,0x5F,0x13,0x8F,0x88,0xB3,0x60,0xBE,0xBE,
0x26,0x45,0xDE,0xF7,0x4F,0x30,0x4E,0xEB,0x35,0xF1,0x2D,0x45,0x5A,0x3E,0xB4,0xFA,0x8A,0xC8,0x7,0x3B,0xBE,0xA6,0xEA,
0xD2,0xC6,0x87,0x56,0x97,0x2E,0xDA,0xF0,0xFC,0xCC,0xDA,0xE6,0xAB,0x4F,0xB2,0x22,0x6C,0xF5,0x9A,0x38,
0xC4,0x25,0xC1,0x53,0xEC,0x57,0x35,0xE3,0xAB,0x63,0x3C,0x28,0xD7,0x4D,0x17,0x9E,0xBF,0xFF,0x6E,0xAB,0x6F,0x29,0x77,
0x7B,0xB4,0x1B,0x58,0xE5,0x0};
const char short_d91[]={0x23,0x10,0x67,0xC1,0x7C,0x7D,0x4D,0x8A,0x1C};
const char long_d92[]={0xBB,0xAD,0x9E,0x8C,0x93,0x3C,0xBF,0x71,0x1B,0x16,0xF6,0x29,0xF6,0x2B,0x46,0x8,0xC3,0x2B,0x4D,0x60,0xF1,
0x6E,0x46,0x5A,0x13,0x1C,0x43,0xEE,0xF6,0x6B,0x82,0x71,0x63,0x42,0x5E,0x13,0xC3,0x75,0x12,0x5A,0xF3,0x35,0x41,
0x7C,0xA3,0xD9,0xF7,0xAC,0x2F,0xE4,0x53,0xEC,0xAB,0x6F,0x99,0xC4,0xF7,0xD5,0x31,0x1E,0x91,0xD4,0xBA,0xCE,
0x1D,0xBF,0x26,0xAE,0x25,0x7B,0xFE,0xFE,0xBB,0xAD,0xBE,0xA5,0xDC,0xED,0xD1,0x8E,0x5C,0x35,0xBE,0x81,0x55,0xE};
const char short_d92[]={0xFB,0xD3,0x4,0x16,0x7};
const char long_d93[]={0x7B,0xE6,0xE6,0x3B,0x77,0xC7,0xFE,0xFE,0xBB,0xAD,0xBE,0xA5,0xDC,0xED,0xD1,0x8E,0x5C,0xE5,0x0};
const char short_d93[]={0x7B,0xE6,0xE6,0x3B,0x77,0xC7,0xE};
const char long_d102[]={0xBB,0xAD,0x3E,0xD3,0x84,0xAF,0x8,0x52,0x37,0x0,0xDF,0xBA,0xD1,0xEC,0x23,0x71,0x6F,0x50,0xCD,0xEF,0xC9,0xB4,0x6D,
0xCD,0xBD,0x56,0xBF,0xFA,0x11,0x23,0x4A,0xC6,0xF5,0xE6,0xD7,0xC4,0x47,0xA7,0xE0,0xBB,0x9F,0x3A,0xED,0x39,0x43,0x18,
0xBC,0xEF,0x2D,0xF3,0x75,0x69,0xE3,0x3B,0x85,0xA,0xC3,0xFD,0xBC,0xC7,0xC6,0xF7,0x8B,0x9D,0xDA,0x4E,0x76,0xEA,0xDE,0xCD,0xD8,0x8A,0x6F,0x73,0x58,0x4F,0xB7,0xC7,
0x1F,0x5A,0x5D,0xEB,0x64,0xB,0xFB,0xFC,0x2A,0x64,0x7C,0x1D,0xCC,0xC3,0xB7,0xC,0x1,0xF6,0x23,0xF,0x92,0x31,
0x4,0xAF,0xBE,0x8B,0x7A,0xF5,0x77,0x4,0x98,0x4D,0xB1,0x4C,0x39,0x3E,0xC9,0xF7,0xE5,0xE,0x51,0x79,0xDF,0x5B,0xDF,
0x5A,0x2A,0x49,0xD6,0x6B,0xE2,0x5B,0xF2,0x53,0xEC,0x61,0x2,0xF,0x35,0x49,0xDC,0xB,0x60,0x61,0xAF,0x37,
0xBF,0x26,0xE,0xB3,0x11,0x2C,0x15,0xB5,0x78,0x1F,0xBD,0xAF,0x27,0x8F,0x4F,0xF5,0x99,0xEB,0x1A,0x20,0xCF,
0xB,0x6D,0xF8,0xC6,0x8A,0x16,0xCC,0xE0,0x43,0xAB,0xAF,0x8,0x52,0xCF,0x87,0xAE,0xB7,0xFE,0xA2,0x18,0x37,0xA8,
0xE6,0xF7,0x64,0xDA,0xB6,0xE6,0x5E,0xAB,0xBF,0x4A,0xD9,0x81,0xC4,0x7D,0x9C,0xD1,0x7A,0x8A,0x3D,0xB7,0x2A,0xAC,0x6B,
0x28,0x3,0x90,0xEF,0xCB,0x1D,0xA2,0x7A,0x8A,0xFD,0x5E,0xB1,0x94,0xDE,0xF7,0x96,0xF9,0x7A,0x4D,0x3C,0xE4,0xAA,0xC3,
0x4,0x21,0x71,0x3F,0xB4,0xBA,0x41,0x21,0x7C,0x45,0x10,0xFB,0x16,0xAD,0x93,0xED,0x68,0xAF,0x8E,0x9B,0xB9,0x8D,0xC7,
0xCD,0x42,0xE2,0x7E,0x68,0xF5,0x64,0x7C,0xA9,0x28,0xEA,0x5,0xFB,0xEA,0x6B,0xE0,0x9A,0xCF,0xFA,0x8E,0x0,0xB3,
0x29,0x96,0x29,0x3D,0x7F,0xFF,0xFD,0xFD,0xB8,0x4D,0x78,0xCB,0x6B,0xE2,0x23,0xF,0x92,0x31,0x4,0xE3,0xAB,0x85,0xEB,0xCD,
0xB8,0xDF,0x74,0xBF,0x8F,0x9F,0x7A,0xDD,0x6F,0xE9,0xF7,0xF1,0xA3,0xE6,0xBA,0xDF,0x22,0xBF,0x3F,0xC5,0x7E,0x55,0xB2,0xD6,0xC9,0xF6,0x7E,
0x5B,0x7E,0xF7,0x1C};
const char short_d102[]={0x7B,0xA5,0xB8,0xAD,0xDA,0x8A,0x5A,0x1C};
const char long_d103[]={0xBB,0xAD,0x9E,0x62,0xBF,0x65,0x54,0x49,0x72,0x33,0x33,0x43,0x2B,0xFD,0x24,0x5,0xE6,0x76,0xB3,0xF0,0x9A,
0x78,0x19,0xFD,0x8D,0x29,0x26,0xC9,0xB0,0xBC,0xEF,0x9F,0x18,0x9E,0x8C,0x47,0xDD,0x7C,0x57,0xD,0xEB,0xA1,0xDB,0x47,
0xE2,0x5E,0x6F,0x3E,0x72,0xD,0x8F,0x5B,0x30,0x3C,0xC5,0xBE,0x26,0x86,0x5B,0xB2,0x97,0xAE,0xFB,0xA4,0x8D,0xC7,
0x6A,0x9B,0xDE,0x77,0x5B,0xBD,0x25,0xC,0xF,0x48,0x96,0xD7,0xCC,0x7A,0x4D,0xC,0x57,0xB,0xCF,0xEB,0xB4,
0x26,0x89,0xFB,0x99,0xAC,0xB5,0xE2,0x4B,0xD7,0xF5,0xE4,0xEB,0xDC,0xF1,0x8D,0x9,0xC6,0x6B,0xE2,0x23,0xF,0x92,
0x31,0x4,0xA7,0x75,0xD,0x5C,0x13,0xD6,0xFB,0x1E,0xC9,0x86,0xB7,0x7C,0xCD,0x66,0x8C,0x3F,0xB4,0x7A,0x40,0x9A,
0xF0,0x9A,0xF8,0xC6,0x30,0x5E,0x7D,0x8B,0x40,0x26,0xF0,0x6B,0xE2,0x65,0xF4,0x37,0xA6,0x98,0x24,0xC3,0x7A,
0xF5,0x6B,0xE2,0xA1,0xB7,0xC,0x8F,0x3A,0xD0,0x6,0xEF,0x7B,0xE5,0x35,0xF1,0x18,0x29,0x45,0x31,0xC6,0x1F,0x5A,
0x3D,0xC5,0x7E,0xCB,0xA8,0x92,0xE4,0x66,0x66,0x86,0x56,0xFA,0x3,0xD2,0x84,0x57,0x7F,0x21,0x79,0x9B,0xD7,0x9B,
0x5F,0x13,0x9F,0xBD,0x2A,0x5D,0x2C,0xCF,0x1};
const char short_d103[]={0x23,0x24,0xD7,0xF7,0xB8,0x3};
const char long_d130[]={0xFB,0x92,0x2,0x3F,0xCA,0xB5,0x8C,0x66,0xEB,0x0};
const char short_d130[]={0x7B,0xA5,0xB8,0xAD,0xDA,0x8A,0x5A,0x1C};

const room_code original_connections[28 ][6 ]={
    {0,62,0,0,0,0,},
    {0,64,62,0,0,0,},
    {60,65,63,61,0,72,},
    {0,66,0,62,0,0,},
    {61,0,65,0,0,0,},
    {62,67,66,64,0,0,},
    {63,0,0,65,0,0,},
    {65,0,0,0,0,0,},
    {0,72,0,0,0,0,},
    {0,0,72,0,0,0,},
    {70,75,73,71,62,81,},
    {0,0,0,72,0,0,},
    {0,0,75,0,0,0,},
    {72,77,76,74,0,0,},
    {0,0,0,75,0,0,},
    {75,0,0,0,0,0,},
    {0,81,0,0,0,0,},
    {80,82,0,0,72,0,},
    {81,83,0,0,0,0,},
    {82,0,0,0,0,0,},
    {0,0,0,0,71,0,},
    {0,0,91,92,0,0,},
    {0,0,0,90,0,0,},
    {0,0,90,93,0,0,},
    {0,0,92,0,0,0,},
    {0,0,0,0,0,0,},
    {0,0,0,0,0,0,},
    {0,0,0,0,0,0,}
};
room world[28 ]={
    {60,long_d60,short_d60,{0,62,0,0,0,0,}},
    {61,long_d61,short_d61,{0,64,62,0,0,0,}},
    {62,long_d62,short_d62,{60,65,63,61,0,72,}},
    {63,long_d63,short_d63,{0,66,0,62,0,0,}},
    {64,long_d64,short_d64,{61,0,65,0,0,0,}},
    {65,long_d65,short_d65,{62,67,66,64,0,0,}},
    {66,long_d66,short_d66,{63,0,0,65,0,0,}},
    {67,long_d67,short_d67,{65,0,0,0,0,0,}},
    {70,long_d70,short_d70,{0,72,0,0,0,0,}},
    {71,long_d71,short_d71,{0,0,72,0,0,0,}},
    {72,long_d72,short_d72,{70,75,73,71,62,81,}},
    {73,long_d73,short_d73,{0,0,0,72,0,0,}},
    {74,long_d74,short_d74,{0,0,75,0,0,0,}},
    {75,long_d75,short_d75,{72,77,76,74,0,0,}},
    {76,long_d76,short_d76,{0,0,0,75,0,0,}},
    {77,long_d77,short_d77,{75,0,0,0,0,0,}},
    {80,long_d80,short_d80,{0,81,0,0,0,0,}},
    {81,long_d81,short_d81,{80,82,0,0,72,0,}},
    {82,long_d82,short_d82,{81,83,0,0,0,0,}},
    {83,long_d83,short_d83,{82,0,0,0,0,0,}},
    {84,long_d84,short_d84,{0,0,0,0,71,0,}},
    {90,long_d90,short_d90,{0,0,91,92,0,0,}},
    {91,long_d91,short_d91,{0,0,0,90,0,0,}},
    {92,long_d92,short_d92,{0,0,90,93,0,0,}},
    {93,long_d93,short_d93,{0,0,92,0,0,0,}},
    {102,long_d102,short_d102,{0,0,0,0,0,0,}},
    {103,long_d103,short_d103,{0,0,0,0,0,0,}},
    {130,long_d130,short_d130,{0,0,0,0,0,0,}}
};

const char areyousure[]={0x3B,0x18,0x1F,0x5A,0x7D,0x29,0xC6,0x48,0xBF,0x7F,0x88,0x70,0xF3,0x5D,0xF3,0xA7,0xD8,0x33,0x4A,0xB1,0x9C,0xF4,0xF,0x58,
0x9E,0x3};
const char exitrestart[]={0xE6,0xFB,0x32,0x7F,0x8A,0x3D,0xA3,0x14,0xCB,0xAB,0xF,0xB3,0x54,0xE3,0xA7,0xC,0x35,0x49,0xDC,0x23,0x2C,0xBC,
0xFA,0x8C,0x55,0xC9,0xE5,0x39,};
const char header[]={0xA3,0x53,0xF0,0x7D,0x64,0xB5,0x6A,0xFC,0x28,0xB9,0xBE,0xC7,0xFC,0x47,0x4E,0x13,0x59,0x7C,0x4F,0xB5,0x6D,0xE4,0x6F,0x86,0xC1,0x8B,0x5A,0xEE,0x17,
0xDE,0x4E,0x3C,0xBF,0x18,0x7F,0x74,0x44,0xE5,0xDD,0xCF,0x3B,0xF1,0xF3,0x4E,0xBE,0xF3,0x47,0x47,0x54,0xDE,0xFD,0xBC,0x13,0x3F,0xFB,0xD9,0x7F,0xC7,0x88,0xA3,0x7F,0x8F,0x79,0x3B,0x71,0x0};
const char message61[]={0x7E,0x5,0x57,0x92,0x84,0xE1,0xD2,0xF5,0x9,0xC6,0x28,0x7};
const char message66[]={0xBB,0xAD,0x6E,0x5B,0xCC,0xEB,0x46,0x4A,0xBD,0xFA,0x96,0x56,0x29,0xD6,0x3E,0x29,0xF6,0xEE,0x7,0xCC,0xD7,0x7B,0xDB,
0x54,0x44,0xB0,0x9E,0x3};
const char message122[]={0xBB,0xAD,0x6E,0xB4,0x98,0xD7,0x5,0xB0,0x37,0x51,0x7,0xC8,0x86,0x57,0x7F,0xEB,0x38,0xA,0x28,0xBC,0x26,
0xAD,0x47,0xC9,0xF5,0xD6,0x5F,0x13,0x77,0x33,0x86,0xE7,0x0};
const char message231[]={0xBB,0xAD,0x1E,0xE7,0xF0,0xE2,0x61,0x7C,0x4D,0xD5,0xA9,0x6E,0x50,0x8,0x8F,0xB8,0xB5,0xD4,0xC2,0x70,0xE9,0xBA,0xD1,
0xEC,0xF3,0x1C};
const char message400[]={0xFB,0xB4,0xF7,0xDD,0x56,0x4F,0x86,0x98,0xD7,0x8B,0x18,0xF6,0xD2,0x86,0xE7,0x0};
const char message401[]={0xFB,0xF4,0x5,0xB0,0xAF,0xBE,0xED,0xD7,0xCC,0xBA,0xB4,0xE1,0x39,};
const char message402[]={0x7E,0xB9,0x70,0x73,0x6D,0x80,0xF9,0xAB,0xBF,0xAA,0xA3,0x47,0x21,0x7,0x12,0xD7,0x73,0x0};
const char message403[]={0x7B,0x34,0xC7,0x97,0x1E,0xDF,0xC0,0x93,0x71,0xE9,0xBA,0xDB,0x24,0xEE,0xAB,0xBF,0x2A,0x87,0x4F,0x30,0x9E,
0x21,0xDC,0xE6,0x30,0xCA,0x1};
const char message407[]={0xBB,0xAD,0xBE,0x66,0xAB,0x60,0x3F,0xD3,0x84,0x7,0x24,0xB,0xEC,0x67,0x1B,0xAF,0x7E,0x14,0x72,0x78,0x4D,0x5A,
0x77,0x33,0xC6,0xF8,0xDA,0x70,0x69,0xC3,0x73,0x0};
const char message408[]={0x23,0x4,0xE4,0xC2,0xF8,0x35,0x44,0x78,0x3E,0x6E,0xC6,0x57,0x84,0x8D,0x74,0xDA,0x9E,0x5B,0x51,0x8B,0xE7,0x79,0xE};
const char message504[]={0x23,0x4,0xE4,0xC2,0x75,0x20,0x5C,0x67,0xE0,0xD5,0xDF,0x5A,0x8A,0x44,0x61,0x7C,0xD2,0x3F,0xB4,0xBA,0x41,
0x6B,0xBE,0xDA,0xF3,0xBC,0xEF,0x35,0x37,0xE1,0x1A,0xB6,0x8E,0x71,0x8A,0x23,0xB0,0x89,0x5A,0xAD,0x57,0x7F,0x19,0x48,
0x26,0x71,0x9F,0x62,0x1F,0x71,0xEB,0x29,0x54,0xC3,0xF3,0xA1,0xC5,0x7D,0x51,0x8C,0xA7,0xDB,0x9E,0x3};
const char message505[]={0xFB,0xF4,0xF8,0x43,0xAB,0xDB,0x16,0xF3,0xBA,0xE,0x84,0xD7,0xC4,0x5,0xB0,0x9E,0x3};
const char message600[]={0x3B,0xD5,0xCC,0x40,0xE1,0x66,0x66,0x86,0x56,0xFA,0x69,0xBD,0x26,0xBE,0x65,0x54,0x49,0xF2,0x14,0x7B,0x5A,0x4F,
0x79,0xD6,0xC,0x28,0xDA,0x1E,0xA7,0x8C,0x9F,0x5A,0xAB,0xFA,0x1E,0xDF,0xC9,0x7,0x24,0xAF,0x77,0xB0,0xDE,0xFD,0xC0,0x69,
0x9D,0xB1,0x22,0x6C,0x5,0x7B,0x6D,0x78,0x4D,0x7C,0x63,0x18,0x9E,0x3};
const char message601[]={0x7E,0xE0,0xB1,0x5A,0x75,0xD,0xF7,0xF3,0x1E,0x7F,0xF3,0xFD,0xBC,0x6F,0x1F,0x90,0xBC,0xDE,0xC1,0x8E,0x4F,0xEB,0x2B,0x90,0x3B,
0x2B,0xC,0xAF,0xC,0x1,0xFC,0x9A,0x29,0x1F,0x5A,0x8D,0x6F,0x50,0xCD,0x6B,0xDC,0x86,0x7C,0x26,0xF1,0x53,0xEC,
0xF3,0x6,0xAD,0x68,0xB8,0x86,0x64,0xEB,0xDD,0xF,0x7C,0xE6,0x7A,0xDE,0x85,0x54,0xC0,0x57,0x25,0xE3,0x24,
0x9F,0xB4,0xAE,0x71,0x1B,0x72,0xC,0x58,0xDE,0x77,0x5B,0x3D,0x19,0xDF,0x83,0xA2,0xC2,0xB3,0x8A,0x73,0x2B,0xD8,
0x57,0x7F,0x52,0xEC,0x39,};
const char message602[]={0xBB,0xAD,0x3E,0xD3,0x4,0x31,0xAF,0xF,0xA8,0xCF,0xB4,0xAF,0x89,0x77,0x14,0x35,0x97,0x12,0xAA,0xE1,0xD5,
0xAF,0xC,0xBE,0x57,0x7F,0x47,0xD0,0xC0,0xF5,0xC,0x2D,0x78,0x8A,0xBD,0xB4,0xD6,0x76,0x38,0xAD,0x27,0xB7,0x12,
0xEB,0x7D,0xB7,0xD5,0x43,0xB7,0xEF,0x59,0x9F,0x14,0x7F,0x81,0xA9,0xD5,0xA,0xC3,0x53,0xEC,0x87,0x56,0x5F,0x39,
0xBC,0xFA,0x93,0xE2,0xF1,0xB7,0xE,0x36,0xC,0xA3,0xF9,0xEF,0x7C,0x33,0xD9,0xFB,0x8,0x24,0x8,0xE3,0xEF,0x3D,0x63,0x3,0x99,0x60,
0x3F,0xB4,0xE2,0xC7,0x58,0x2B,0x5D,0xDC,0x98,0x14,0xF0,0xBD,0x37,0x72,0x9D,0xE4,0xFB,0x15,0x93,0x78,0xDF,0x7B,0xA3,
0x55,0xB0,0xF,0xE4,0xC3,0xAB,0x4F,0xA2,0x37,0xC7,0x1F,0x5A,0xBD,0x66,0xD6,0xF7,0x3E,0xE3,0x47,0x60,0x1D,0x5B,
0x85,0xE1,0xA9,0x5,0xBC,0xFA,0x16,0x1B,0x59,0x5C,0x6F,0x7E,0x3C,0x2C,0x4,0xFD,0xC6,0x84,0xBC,0xFA,0x95,0x3E,
0x3C,0x4A,0xAE,0x57,0x3F,0xE5,0x69,0x4D,0x90,0x52,0x8C,0x37,0x5F,0xBA,0x3C,0x7F,0xFF,0x1D,0x41,0x3,0xD7,0x43,
0xB7,0x6F,0x7D,0x95,0x12,0x81,0x7D,0x8A,0x7D,0xDC,0x5C,0xA4,0x13,0xAC,0xE7,0xEF,0xBF,0xF3,0xF7,0xA5,0xE6,0xF8,0x7B,0x1F,0x23,
0xA5,0x3C,0xCF,0xFB,0xDE,0x1B,0x29,0x5,0xFB,0x6A,0xCF,0xF3,0xBE,0xD7,0x3C,0xFE,0x6A,0xE6,0x61,0xFC,0xBD,0xB7,0x64,0x2F,
0x5D,0x37,0x52,0xEA,0xD5,0x9E,0xE7,0xF9,0xFB,0xEF,0xB6,0x7A,0x4D,0xC8,0x57,0x4C,0x1,0x4F,0xB1,0x1F,0x5A,0xDD,0x47,
0x6B,0x7D,0x52,0x7C,0x92,0x82,0x2C,0x84,0xC1,0xFB,0x8E,0xA0,0x81,0xEB,0xA1,0xDB,0xB7,0xE,0x13,0xE4,0x71,0x33,
0xBE,0x4A,0x89,0xC0,0x8E,0x3F,0xA0,0xAE,0xAB,0x10,0xDE,0xFA,0x47,0xA2,0x7,0xCF,0xDF,0x7F,0xE7,0xEF,0xD1,0x1C,0x7F,0x5F,0x31,0x5,0xCA,
0xF1,0xF7,0x3E,0xB4,0x9,0x1F,0x5A,0x8D,0xBF,0xF7,0x33,0x4D,0x78,0x68,0x13,0xEC,0x87,0x56,0x5F,0x24,0x1B,0x5E,0x13,
0xD7,0x89,0x57,0x3D,0xEE,0x18,0x52,0xDF,0xFB,0x95,0xC6,0x87,0x56,0x27,0x79,0x4D,0x9C,0x7B,0xE1,0x6E,0xB2,
0x85,0x8C,0xBF,0xF7,0xA1,0x4D,0xF8,0xD0,0xCA,0xF3,0x3C,0x7F,0xFF,0x9D,0xBF,0xF7,0x3E,0x69,0xC3,0xF3,0x3C,0x7F,0xFF,0xDD,0x56,0xD7,0xBA,0xE6,
0x57,0xE5,0x70,0xC4,0x1A,0xE7,0x6,0xFB,0x14,0x7B,0x1F,0xAD,0x45,0xE2,0x5E,0x6F,0x7E,0xDE,0x98,0x14,0x30,0xBE,
0xA6,0xEA,0x35,0x21,0x1F,0x5A,0x7D,0x55,0x47,0xE3,0xE7,0xFA,0xD0,0xEA,0xB6,0xC5,0xBC,0x6E,0xA4,0xD4,0xAB,0xAF,
0xE1,0xB,0x10,0xEF,0xBB,0xAD,0xAE,0x75,0xCD,0x6F,0x2D,0x45,0xA2,0xF0,0xEA,0xAF,0x4A,0xC6,0x49,0xAA,
0x8F,0xDC,0xE6,0xBB,0x26,0xD8,0x7C,0x1D,0x3,0xD6,0x49,0x5E,0x13,0xCF,0x58,0x3,0x3F,0x90,0x3B,0xEB,0xAD,
0xBF,0x5,0x6F,0xFD,0x35,0xF1,0xB8,0x57,0x5D,0x43,0xAA,0x22,0x5D,0x85,0x2F,0x25,0xB,0xB5,0x5E,0x13,0x37,0x13,
0x96,0xA,0xCC,0x29,0x48,0xF9,0x42,0x7E,0x4B,0x79,0xEB,0x3A,0xF8,0xD5,0xA7,0x5A,0xF,0x6A,0xF3,0xD,
0x2F,0x4E,0x13,0x42,0x0,0x2F,0xCF,0x1};
const char message603[]={0x23,0x30,0xC9,0x86,0xB5,0xBE,0xEF,0x6A,0xA3,0x10,0xF2,0x7B,0x32,0x6D,0x5B,0x73,0xAF,0xD5,0xA7,0xF5,0x3D,0xB6,0x6F,0x1F,0x90,0xBC,
0xDE,0xC1,0x3E,0xC5,0x9E,0xD6,0x53,0xE,0x1,0xBB,0x28,0xDA,0x6E,0x74,0x9C,0x32,0xBE,0xD6,0x2C,0x27,
0xA9,0x7E,0xB,0xDE,0xFA,0x6B,0xE2,0x1D,0x2C,0x56,0x7D,0x6F,0x65,0xA0,0x94,0xEB,0x19,0x53,0x20,0x2C,0xEF,0xA3,
0x4F,0x7C,0xE6,0xFA,0x9A,0xCD,0x75,0x2D,0xB4,0x58,0x7C,0x26,0xF1,0xF8,0xB4,0xCE,0x8,0x59,0x64,0x42,0x18,0x5E,
0x93,0xE4,0x29,0xF6,0xD2,0x75,0x13,0x78,0x78,0x65,0x8,0xE3,0x6B,0xAA,0x3E,0xC1,0xD7,0xDA,0xE,0xA7,0xF5,
0xAC,0x19,0x50,0xB4,0x3D,0xC5,0x7E,0x82,0xEF,0x32,0x20,0xC7,0x80,0xF5,0x35,0x49,0x70,0x83,0x6A,0x3E,
0x1F,0xC8,0x9D,0xF5,0xD6,0x6F,0x51,0xE0,0x98,0x24,0x8B,0x5A,0x3C,0x7};
const char message604[]={0xBB,0xAD,0xD6,0x82,0x7E,0x5A,0xAF,0x89,0x6F,0xDD,0xBE,0xB7,0xFE,0x9A,0xF8,0xC8,0x83,0x64,0xC,0x81,0x77,0x3F,
0xF0,0x99,0xEB,0x35,0xF1,0x68,0xE,0x8B,0xF6,0xA0,0x70,0xAB,0xCE,0x1D,0xF0,0xA1,0xD5,0x8D,0x56,0xC1,0x1E,0x66,0x23,0x6C,
0x35,0xDA,0x43,0xB2,0x8B,0xAF,0xD9,0x2A,0x58,0xF0,0x7A,0x8A,0xBD,0x86,0x10,0x6,0xCF,0x1};
const char message605[]={0x3B,0x7F,0xB7,0xD5,0x5A,0xD0,0xC7,0x37,0x66,0xD6,0x93,0xF1,0xA1,0xD5,0x23,0x46,0x94,0x4C,0xE2,0x8E,0xD4,0x7F,0xE7,0xEF,0xD1,0x1C,
0x7F,0x22,0x84,0xBE,0x99,0x69,0x33,0x1E,0xF5,0xD1,0x93,0x73,0x7E,0x4B,0xE5,0xCE,0xFA,0xEA,0x18,0x17,0xDA,0xF0,0x85,
0xBC,0xC6,0xC8,0xF8,0x35,0x69,0x3D,0xF5,0x2,0x4B,0xB7,0x3C,0xC5,0x7E,0xEF,0x33,0x7E,0xC4,0x88,0x92,0x49,
0xDC,0xD7,0x44,0x7C,0x83,0x6A,0x3E,0xBF,0xC8,0xE2,0x96,0xD6,0x7C,0xEB,0xC7,0xDA,0x92,0x3B,0xE0,0x10,0x4B,
0x26,0x7C,0x15,0xC,0xD8,0xEF,0x83,0x8C,0x3A,0x50,0xA5,0x7C,0xD5,0x10,0xE0,0xF9,0xFB,0xEF,0x9F,0xF8,0x8A,0x11,0xC2,0x69,
0xDD,0x22,0xD0,0x46,0xAD,0xD6,0x28,0x7};
const char message606[]={0x3B,0xBE,0x2A,0x19,0xD7,0xB9,0xE3,0xD7,0xC4,0xB7,0x6E,0xDF,0xB,0x21,0xAC,0xF,0xAD,0x4E,0x65,0xBE,0xAE,0xA1,
0xA,0x7C,0xE9,0x3A,0xCC,0x46,0xA1,0x19,0xAF,0x89,0x47,0x29,0xC5,0xC3,0x8D,0x49,0x1,0x9F,0xF8,0x96,
0xF2,0x5,0x7C,0x68,0xE5,0x39,};
const char message607[]={0x66,0x98,0xAA,0x9A,0xA9,0x4F,0xEB,0x35,0xF1,0xA1,0x95,0xB8,0x58,0xF5,0x18,0xB1,0x6,0x7E,0xEB,0xAF,0x89,0x6F,
0xC,0xE3,0x29,0xF6,0xB4,0x2E,0xB4,0xF9,0x24,0x63,0xD8,0xEF,0xEF,0xA1,0xBD,0xFB,0x81,0x1B,0xCD,0xBE,0xF5,0x65,0x90,
0x5E,0x61,0x78,0x8A,0xBD,0x6D,0xAC,0x4B,0xD7,0x57,0x84,0xF4,0xDD,0x4,0x1E,0x1E,0xAB,0x6D,0x7A,0xE};
const char message608[]={0xA3,0x27,0xE7,0x3C,0xAD,0x57,0x86,0x30,0x7E,0x6A,0xAD,0xEA,0x7B,0x6C,0x27,0x1F,0x90,0xBC,0xDE,0xC1,0x8E,0x6F,0x20,0x99,
0xC4,0x7D,0xDE,0x68,0xF6,0x91,0xB8,0x5F,0x8A,0xCA,0xFB,0xE8,0x13,0xF7,0x1,0xD1,0xFA,0x4,0x9F,0x61,0x3F,0x93,
0xF8,0x45,0xB0,0x57,0xD1,0x53,0xEC,0x69,0xDD,0x65,0xE4,0x22,0x71,0x5F,0x13,0x5F,0x85,0x8C,0xF,0x71,
0x49,0xE0,0x39,};
const char message609[]={0xFB,0xF4,0xF8,0x6B,0xC2,0x7C,0xDD,0x68,0xF6,0x91,0xB8,0x9E,0x3};
const char message610[]={0x7B,0xCB,0x7C,0x3D,0x1F,0x92,0x5D,0xBC,0x98,0xA2,0x80,0x9D,0x73,0x2B,0x6A,0x39,0xC4,0x25,0x81,0xF7,0xD1,0xB,0x19,
0x7F,0xEB,0x18,0xEB,0x3A,0x77,0xFC,0x9A,0xF8,0x2A,0x64,0x7C,0x17,0x2,0xCE,0x6A,0xBE,0xC0,0x6C,0xBD,0xFA,
0x35,0xF1,0xAD,0x33,0x5C,0x53,0xE2,0x3,0x7B,0xE};
const char message611[]={0x3B,0x7F,0x44,0xDC,0xA0,0x10,0xAE,0x81,0x6B,0xBE,0x3A,0x6E,0xE6,0x36,0x1E,0x37,0xB,0x89,0x7B,0x92,0xEF,0x8,0x30,
0x9B,0x62,0x99,0x72,0xFC,0x2D,0xA3,0x4A,0x92,0x91,0xFA,0xEF,0xFC,0x5D,0xAC,0xF1,0x6B,0xE2,0xB,0x79,0x83,0x42,0xB8,0x86,
0x6F,0x19,0xE2,0x57,0xB,0xB9,0xB3,0x9E,0x62,0xBF,0xF7,0x30,0x1B,0x61,0xAB,0x1B,0xB8,0x41,0x21,0x5C,0xC3,0x6B,
0x82,0xF1,0xAC,0x27,0xB7,0x12,0xFB,0x9D,0xD2,0x49,0x5E,0x13,0x8F,0x9B,0x85,0xC4,0xF5,0x1C};
const char message612[]={0xBB,0xAD,0x3E,0x91,0xFC,0xDD,0x56,0x6B,0x41,0xFF,0x96,0x21,0x90,0xB8,0xA3,0xDD,0x92,0x8,0xF8,0xB4,0xBE,0xC0,
0x26,0xD8,0x51,0xDF,0x6D,0xF5,0x18,0xA8,0xD7,0xC4,0x37,0x86,0x31,0x7E,0x4D,0x7C,0xCB,0xA8,0x92,0x64,0xFC,0x88,0x49,
0x36,0xAC,0xF5,0x3D,0x99,0xB6,0xAD,0xB9,0xD7,0xEA,0xA7,0xD8,0xEF,0x8,0x1A,0xB8,0x4E,0xF2,0x9A,0xB8,0x25,0x21,
0x71,0xCF,0xDD,0xB1,0xE7,0xEF,0x3F,0xF2,0x20,0x19,0x43,0xF0,0xD6,0x75,0xF0,0xFA,0xEA,0x18,0xF,0xCA,0xAC,0x62,0xC2,0xFA,
0x52,0xDB,0x7C,0xAE,0x2F,0xA,0x26,0xF0,0x37,0x55,0x1,0x3C,0x5C,0x6F,0xBE,0xA5,0x55,0x24,0xAE,0xA2,0x35,0x61,
0xEF,0x2A,0xAC,0x5A,0x5F,0x6A,0x9B,0xCF,0xF5,0x3D,0x99,0xB6,0xAD,0xB9,0xD7,0x6A,0x33,0x78,0x4D,0x7C,0x21,0xAF,0x31,
0x32,0x7E,0x32,0xE,0xB3,0x1B,0x42,0x80,0xD4,0x53,0xEC,0x57,0x9F,0xD6,0x6B,0xE2,0x10,0x4B,0x26,0x78,0xDF,0x5B,
0xE6,0xEB,0x35,0xF1,0x90,0xAB,0xE,0x13,0x84,0xC4,0xFD,0xD0,0xEA,0x6,0x85,0xF0,0x15,0x41,0xEC,0x53,0xEB,
0x64,0xFB,0x14,0xFB,0x9A,0xF8,0xC6,0x30,0x1E,0x23,0xD6,0xC0,0xEB,0x33,0x4D,0xB8,0x6,0xC8,0x87,0x56,0x7C,0x9D,
0x9,0x62,0xD7,0x53,0xEC,0xF5,0x8C,0x29,0xC,0xD7,0x9B,0x5F,0x13,0xF,0xB9,0xEA,0x7A,0x2B,0xBE,0xCD,0x61,0x79,
0xDF,0xA1,0x17,0xF8,0xC8,0x22,0x71,0xC7,0xAF,0x89,0x6F,0x19,0x55,0x92,0x9C,0x51,0x8A,0x65,0xBD,0xFA,0x93,
0xD6,0xAD,0x2A,0xC2,0x7A,0x8A,0x3D,0x23,0x10,0x4C,0x58,0xDF,0x7,0x36,0xC7,0x5F,0xFD,0x35,0xF1,0x2D,0xE5,
0x95,0x3E,0x7C,0x82,0x5F,0x8A,0xE5,0xC8,0x22,0x71,0x3D,0x7F,0xFF,0xDD,0x56,0x5F,0x11,0xC4,0xBE,0x26,0xCE,0x58,
0xF5,0xD6,0x5F,0x13,0x87,0x9,0x42,0xE2,0x3E,0xD0,0x2A,0x8,0x89,0xFB,0xEA,0xEF,0xB6,0x5A,0xB,0xFA,0xF8,
0x79,0x97,0x91,0xF5,0x55,0xCD,0x43,0x21,0x4,0xF0,0x8D,0xD9,0x9F,0xB9,0x3E,0xD3,0x3E,0x4E,0x19,0x9E,0xD6,0x4,
0x29,0xC5,0x58,0x5F,0x49,0x81,0xC4,0x7D,0x4D,0x7C,0xC1,0x4,0xF9,0x42,0x2E,0xEF,0xBB,0xAD,0x5E,0x4C,0xB0,
0xAF,0x7E,0x6E,0xF5,0x2D,0x97,0xCA,0x10,0x86,0xF1,0x35,0x55,0x1F,0x5A,0x9D,0xA4,0xC0,0x1B,0xA2,0xFA,0x8E,0xA0,0x81,
0xCB,0x7C,0x7D,0x55,0x32,0xDE,0xB2,0xE1,0xCD,0x2F,0x83,0x36,0x78,0xFE,0xFE,0x3B,0xEA,0x35,0x71,0x88,0x7D,0xEB,
0xAF,0x89,0xC3,0x4,0x21,0x71,0xC7,0x87,0x9,0x3C,0x68,0x6D,0x87,0x4B,0xD7,0x5B,0x6E,0x55,0xD,0x77,0x1B,0xEB,
0xD5,0x67,0xAC,0xF2,0xBE,0xDB,0xEA,0x6E,0xBF,0xFA,0x43,0x2B,0xFE,0x96,0x1A,0xC9,0xF8,0xD5,0x3D,0xBE,0xA6,0xEA,
0x43,0xAB,0x6F,0x29,0xE6,0xF5,0x15,0x80,0x68,0xFC,0x9A,0x24,0x3E,0x12,0xF7,0xAD,0x7F,0x47,0xD0,0xC0,0xE5,0xF9,0x3B,};
const char message613[]={0x23,0x4E,0xC8,0x87,0x56,0xEF,0x8,0xF2,0x9A,0xB8,0xED,0xE6,0xF1,0x87,0x56,0x9F,0x48,0x7E,0x3E,0xB4,0xB2,
0xAF,0xA9,0xE2,0xC8,0xFB,0x6E,0xAB,0xB3,0x92,0x57,0xBF,0x26,0x1E,0x27,0xC9,0x2D,0x36,0xDF,0x68,0xCF,0xAF,0x38,0x43,
0xB8,0xD6,0x59,0xA7,0xF5,0x2D,0xF4,0xC2,0x53,0xEC,0x67,0xAE,0xAF,0xD9,0xF5,0xBC,0xCB,0x19,0x45,0x81,0xC4,
0xFD,0xEC,0xF6,0xBD,0x66,0xD6,0xB7,0x54,0xEE,0xAC,0xD7,0xC4,0x39,0x29,0x90,0xB8,0xDE,0xF7,0xD6,0x57,0xD4,0x5C,0xEB,
0xF9,0x7D,0xDB,0xE2,0x6F,0x29,0xD2,0xF2,0xA8,0x49,0x8A,0xC4,0x7D,0xB5,0x91,0x6C,0xD7,0x6B,0xE2,0x23,0xF,0x92,0x31,
0x4,0xDE,0xFD,0x9A,0x51,0x25,0xC9,0xCD,0xCC,0xC,0xAD,0xF4,0x6F,0x1D,0x63,0x8D,0xBF,0x29,0x5E,0x24,0xAE,0xE7,0xEF,0xBF,0xF3,0xF7,
0x9A,0x9B,0xF0,0x89,0x64,0x7B,0x2D,0xC5,0xAE,0xB7,0xFE,0x38,0x39,0x95,0x5,0xAF,0x73,0x6B,0x5F,0x71,0x86,0x70,
0x1D,0xCC,0x84,0xE5,0x7D,0xC7,0xD7,0xEC,0xBA,0xCE,0x1D,0xBF,0x66,0xD6,0xB7,0x14,0x69,0xB9,0xD1,0x2A,0xD8,0x47,
0xDC,0x5A,0x6A,0x61,0xB8,0xDB,0xAF,0xC9,0xAD,0xDC,0x79,0xB5,0xAE,0x73,0xC7,0x5F,0x64,0xF1,0xEA,0x2F,0xB2,0xF0,0xFC,
0xFD,0x77,0x5B,0x7D,0x22,0xF9,0x29,0x6F,0xB6,0xE0,0xAF,0xD9,0xAA,0x60,0xAF,0x73,0xC7,0xAF,0x89,0x6B,0x9D,
0x35,0x9A,0xBF,0xFF,0xCE,0x1F,0xBD,0x3A,0x3A,0xC4,0x25,0xC1,0x7A,0xF3,0xD,0xDC,0xA0,0x10,0xBE,0x48,0x7C,0x1F,0x5A,0x79,0xFE,0xFE,
0xBB,0xAD,0x3E,0xD3,0x84,0x57,0x5F,0xEF,0x10,0xDA,0x78,0x4D,0xBC,0xD9,0x82,0x9F,0x62,0xAF,0xB7,0xE2,0x27,
0xC7,0xB0,0x27,0xB1,0x64,0x22,0xAB,0x32,0xAC,0x6F,0x1D,0xE3,0xA9,0x75,0xB2,0xF5,0xFC,0xFD,0x77,0xBE,0x5F,0x33,0xAA,0x24,
0x39,0x23,0x4E,0x92,0x75,0x83,0x6A,0x5E,0x2D,0xEF,0xFB,0x32,0x81,0x7,0xAD,0xED,0x70,0x84,0x85,0x57,0xBF,0x26,0x88,
0xBF,0xA5,0x46,0xB2,0xDE,0x7C,0x3,0x5F,0xB3,0xBB,0x46,0xF9,0x8F,0x38,0x29,0xE0,0x29,0x57,0xB2,0x81,0x11,0xB7,
0x50,0xAB,0xF5,0x88,0x38,0xB,0xC7,0xDA,0x9A,0x6B,0x7D,0x68,0xF5,0xEA,0xF,0xAD,0xF8,0x5B,0x6A,0x24,0xE3,0xF,
0xAD,0x3E,0x91,0xFC,0x9A,0x78,0x40,0x5A,0xF0,0x5B,0x7F,0x4D,0x3C,0x22,0xCE,0xC2,0x7A,0x2E,0x1F,0x89,
0xFB,0x2D,0xA3,0x4A,0x92,0x9B,0x99,0x19,0x5A,0xE9,0xA3,0xF9,0xFB,0xEF,0xFC,0x11,0x27,0x18,0xA7,0xF5,0x9A,0x78,0xC4,0x24,0x1B,
0xD6,0x1A,0xA9,0xBF,0xFF,0x8E,0x39,0x7E,0x4D,0xC,0xF7,0x49,0x1B,0x4F,0xAD,0x55,0x7D,0x4F,0xA6,0x6D,0x6B,0xEE,0xB5,0x7A,0x94,0x3};
const char message614[]={0xBB,0xAD,0xBE,0x80,0xD7,0xC4,0x23,0xE2,0x2C,0x2C,0xF3,0xAF,0x49,0xD1,0xA5,0xEB,0xD5,0x7D,0x3D,0xF9,0x1A,
0x42,0x1B,0xDE,0xF7,0x4F,0x30,0x4E,0xEB,0x79,0xEE,0x8,0xF,0x69,0x2D,0xF8,0x2D,0xAF,0x89,0x6B,0x2A,0x18,
0xC9,0xBE,0xF1,0xB7,0xD0,0xB,0xAF,0x7E,0x4D,0x3C,0x6A,0xAE,0xD9,0x1,0x9E,0x3};
const char message615[]={0xFB,0xF4,0xF8,0x35,0x71,0xDB,0xCD,0xA7,0x75,0x2D,0xF4,0xE6,0x83,0x7D,0x8A,0x7D,0xCD,0x5E,0xF8,0xC6,0x14,0x93,
0x64,0x58,0x9F,0x69,0xC2,0x3,0xF4,0xFA,0xEA,0x18,0x2D,0x78,0xE8,0xF6,0xB5,0x2A,0xCF,0x1};
const char message616[]={0xBB,0xAD,0xDE,0x11,0xE4,0x35,0xF1,0xA8,0xB9,0x66,0x7,0x8C,0x2F,0x5D,0xB4,0x91,0xB8,0x1F,0x5A,0x7D,0x4B,
0x79,0x86,0xB8,0x57,0x9D,0x91,0xDB,0x7C,0x4D,0x3C,0xA4,0xB5,0x60,0xCF,0x1};
const char message617[]={0xBB,0xAD,0xEE,0x3,0xA2,0xF,0xAD,0xF8,0x11,0x78,0xB5,0x64,0xB8,0x86,0xD0,0xE2,0x92,0xB8,0xEB,0x35,0xC1,0xF0,
0xBE,0xB7,0xCC,0xD7,0xB7,0xD0,0xB,0x76,0x7C,0x69,0xC3,0x73,0x0};
const char message618[]={0xBB,0xAD,0xDE,0x11,0xE4,0x43,0x2B,0xFE,0x16,0x7A,0xA1,0xC6,0xAF,0xFE,0x2,0x4E,0xFA,0x87,0x56,0xDF,0x52,
0xAE,0x93,0xD8,0xAF,0x8E,0x51,0x93,0xC4,0xBD,0x5A,0xD0,0x55,0x38,0xC9,0x22,0xB,0xCF,0x1};
const char message619[]={0xBB,0xAD,0xBE,0x80,0xF,0xAD,0xF8,0x41,0xB9,0x6E,0xBA,0xF0,0x1C};
const char message620[]={0xBB,0xAD,0xBE,0x90,0xBC,0xCD,0xF,0xAD,0xF8,0x41,0xB9,0x6E,0xBA,0xB8,0xDE,0xFC,0xD5,0x31,0x6A,0x92,0xB8,0x57,
0xB,0xBA,0xA,0xDE,0x77,0x5B,0x7D,0x1,0x1F,0x5A,0xF1,0x55,0xAC,0x31,0x42,0x48,0xCF,0x1};
const char message621[]={0xBB,0xAD,0x9E,0x8C,0x4F,0xA4,0x25,0x71,0x5F,0x6D,0x24,0xDB,0xF5,0x7D,0xB9,0x43,0x54,0xE3,0x6B,0xAA,0x3E,0xB4,0x7A,
0x32,0x3E,0x2,0x21,0x6E,0x29,0x2C,0x8C,0x9F,0x7A,0x81,0x9F,0x21,0x78,0xDF,0xA7,0xEB,0x8C,0xC,0x61,0x78,0xC,
0xC9,0x8D,0xC4,0x1D,0x5F,0x53,0xF5,0x38,0x7,0xD,0xA7,0xFA,0x96,0xF2,0x2D,0xD5,0xC2,0x57,0xC7,0xF8,0x4C,0x8E,0x47,
0xEA,0x0};
const char message622[]={0x23,0xB7,0x98,0xD7,0x87,0x56,0xAF,0x49,0xE2,0xFB,0xD0,0xEA,0x33,0x4D,0x78,0x65,0xF0,0xC1,0x1E,0xD2,0xCA,0x9D,0x37,
0xA8,0xE6,0x27,0xC5,0x23,0x75,0x0};
const char message623[]={0xBB,0x39,0x8C,0xFA,0x88,0x54,0xF3,0x35,0x71,0x15,0x6B,0x8C,0x10,0xF2,0x43,0xAB,0x47,0x2A,0x84,0xD7,0xC4,0xB9,0x23,
0x3C,0xA4,0xB5,0xE0,0x57,0x1B,0xC9,0x76,0x7D,0x68,0xE5,0x7D,0xB7,0xD5,0xB7,0x94,0x5B,0xAC,0xD,0x62,0x5F,
0xFD,0x9A,0x78,0x44,0x9C,0x85,0x65,0xFE,0x35,0x29,0x1A,0x3F,0xD7,0xA5,0xB5,0xB6,0xC3,0x19,0x71,0x92,0xC0,0xBE,
0x26,0x18,0x9E,0x3};
const char message624[]={0xFB,0x32,0x9B,0x31,0x9,0xEC,0x49,0x6E,0x51,0x49,0x61,0xFC,0x9A,0xF8,0x96,0x22,0x2D,0xB7,0x8D,0x75,0xE9,
0xFA,0x2,0xE2,0xAF,0x3E,0xC5,0x11,0x63,0x2D,0x32,0xC1,0xFB,0xDE,0x3A,0xAD,0x47,0xDC,0x5A,0x6A,0x61,0xF8,0xBE,0xED,0xE4,0x3,
0x92,0xD7,0x3B,0xD8,0xA7,0xD8,0xCF,0x5C,0xAF,0xBE,0x86,0x93,0x2B,0x54,0xB0,0x37,0xA8,0xE6,0xF3,0x81,
0x64,0x55,0x6F,0xBE,0xD7,0xE4,0x56,0xEE,0x3C,0xD5,0x7A,0xB5,0xDA,0xE6,0x67,0x7,0x78,0xE};
const char message625[]={0xBB,0xAD,0x6E,0xB4,0xA,0xF6,0x81,0x7C,0x78,0xF5,0x2B,0x83,0xEF,0xF9,0xD0,0x75,0x83,0x6A,0x7E,0x52,0x3C,0xBE,
0xA6,0xEA,0xD2,0x75,0x69,0xC3,0x73,0x0};
const char message626[]={0xFB,0xF4,0xF8,0xAB,0x63,0x68,0x6D,0x87,0xD3,0x7A,0x4D,0x30,0x46,0x39,};
const char message627[]={0xBB,0xAD,0xE,0xB3,0x19,0x93,0xE0,0x35,0xF1,0x99,0xB5,0xCD,0x57,0x7F,0x1,0x27,0xFD,0x35,0xC1,0x38,
0xAD,0xE7,0x8D,0x1C,0x5E,0x7D,0x17,0x75,0x92,0x45,0x16,0xE3,0xF,0xAD,0x2E,0x5D,0xB4,0xE1,0xF9,0x38,0x65,
0x76,0xC0,0xB7,0xD0,0xB,0xAF,0x3E,0x95,0xE7,0x0};
const char message628[]={0xFB,0x27,0x18,0xA7,0xF5,0xFC,0x2,0x9B,0x68,0xC3,0x43,0x5A,0xB,0x1E,0x5F,0x43,0x68,0xC3,0x73,0x0};
const char message629[]={0x7B,0xCB,0x7C,0xBD,0x26,0x1E,0x27,0xC9,0x43,0xA7,0x25,0x71,0x3F,0xB3,0xB6,0xE9,0x7D,0xFF,0xE4,0x56,0xEE,0x3C,0xD5,
0xF8,0x35,0xF1,0xD9,0xC1,0xAE,0xCF,0x34,0xE1,0x1A,0x20,0xF,0x9D,0x16,0xF6,0x6,0xD5,0x7C,0x4D,0x7C,0xE3,
0x14,0x78,0xE};
const char message630[]={0x7B,0xEB,0xA1,0xDB,0xB7,0x1E,0x71,0xC7,0xB4,0x48,0x5C,0xCF,0x1};
const char message631[]={0xFB,0x27,0x6E,0xBB,0xF9,0x1,0x69,0x49,0xDC,0x57,0xBF,0x26,0xBE,0x31,0xC,0xF3,0xF5,0x3D,0xA8,0xE4,0x2,0xAF,
0xD3,0xFA,0x9A,0xAA,0x3C,0x7};
const char message632[]={0x3B,0xE2,0x16,0xF7,0x35,0xF1,0xEA,0xE,0x6B,0xFC,0xA1,0xD5,0x75,0x12,0xFB,0xFC,0xCC,0x38,0x6,0x3F,0xC5,0x7E,
0x75,0x8C,0x87,0x64,0x17,0x97,0xA4,0xB0,0x3C,0x7};
const char message633[]={0xBB,0xAD,0x4E,0xB2,0xC0,0xF5,0x16,0x5C,0x92,0xC2,0x49,0x5E,0x13,0xAF,0x56,0xDB,0xFC,0xEC,0x0,0xEF,0x7B,
0xEB,0xB4,0x5E,0x13,0x67,0x72,0x67,0x7D,0xD1,0x4E,0xE3,0xD5,0xDF,0x3A,0x8E,0x2,0xA,0x61,0xB8,0x16,0x7A,0xF3,
0x9D,0xCA,0xBB,0x5F,0xDB,0x4,0x86,0xBD,0x36,0xBC,0x26,0x2E,0x4D,0xB,0x6F,0xFD,0x35,0xF1,0x85,0x1C,0x7F,0x68,
0xF5,0x49,0x75,0xAA,0x1B,0x54,0xF3,0x35,0xF1,0x99,0x71,0xC,0x7E,0x8A,0xFD,0xD0,0xEA,0x1A,0x23,0x7D,0xA7,
0x7A,0xEB,0xFA,0x49,0x16,0x59,0x78,0xDF,0x3F,0x69,0x7D,0x4B,0x91,0x96,0x1B,0x14,0xC2,0xA5,0xEB,0x1A,0xAE,0x56,
0x6A,0x1,0x4F,0x19,0x5E,0x14,0xE3,0xAB,0x5B,0x46,0x39,};
const char message634[]={0x23,0xD9,0x6D,0x4F,0x16,0x39,0xBE,0xA6,0xEA,0x1A,0xAA,0xC0,0x57,0x12,0x3A,0xED,0x6B,0xE2,0x5B,0x8A,0xB4,0x8C,
0xAF,0x13,0xAF,0xF2,0x1C};
const char message635[]={0x7B,0xC5,0x2,0x76,0x7C,0x4D,0xD5,0x67,0x1B,0x23,0x75,0x0};
const char message636[]={0xBB,0xAD,0x1E,0xA9,0x35,0x9F,0x62,0x1F,0xA9,0x10,0x5E,0x13,0xDF,0x52,0xA4,0xE5,0xF9,0x40,0x55,0x1,0xE3,
0x53,0x7D,0x4B,0x79,0xDC,0x26,0xBC,0xFA,0xA9,0xAD,0x66,0xED,0x35,0x71,0xC6,0xD6,0x14,0xBC,0xEF,0xD0,0xB,0xFC,
0xBC,0x31,0x29,0x60,0xFC,0xA1,0xD5,0x19,0x19,0x68,0xA7,0xF1,0x9A,0x59,0x1F,0x5A,0x7D,0x4B,0x79,0x68,0x3,0xFC,
0x9A,0x78,0xAC,0x76,0x7A,0xA7,0x3,0x9E,0x62,0x5F,0x13,0xD7,0x32,0x84,0x73,0x87,0xB0,0x5E,0xFD,0x9A,0xB8,0xC5,0xE6,
0x7B,0x8A,0xBD,0x9E,0x21,0xAC,0x93,0x54,0xBF,0x26,0xBE,0x90,0xE3,0xEB,0x1D,0x42,0x1B,0xB0,0xD7,0x86,0xD7,
0xC4,0x8D,0xB4,0x96,0xC4,0x7D,0x8A,0x7D,0x3E,0x50,0x55,0xC0,0x35,0xAA,0xB7,0x7E,0x57,0x49,0xD4,0x86,0x5,0xDF,
0x98,0xB4,0xCD,0x33,0xE2,0x24,0x59,0x6F,0x79,0x4D,0xDC,0x62,0xF3,0x79,0xFE,0xFB,0x67,0x96,0xF9,0xBA,0xCB,0xC8,0x1A,
0x5F,0x53,0x75,0xE9,0x3A,0xA4,0x95,0x3B,0x47,0x7D,0xFF,0xC4,0x23,0xE2,0x2C,0xAC,0x1B,0xAD,0x82,0xFD,0x6,0xAE,
0x24,0x9,0xC3,0x19,0xA1,0xD3,0x9E,0xEA,0x24,0xCF,0xC7,0x59,0x5,0x7E,0xEB,0x8F,0x49,0x54,0x61,0x79,0xE};
const char message637[]={0xBB,0xAD,0xBE,0x90,0xBC,0xCD,0x67,0xDC,0xE2,0xBE,0x26,0xBE,0xA5,0xD0,0x2A,0xF0,0x7A,0x8A,0xFD,0xD0,0xEA,
0x3A,0x89,0xFD,0xEA,0x18,0x37,0xD2,0xEC,0xA3,0x8C,0xC0,0x5F,0x2A,0x8A,0x7A,0xC1,0xBE,0xFA,0x1A,0xAE,0x16,0xEC,
0xAB,0xBF,0x85,0x5E,0x78,0x4D,0x7C,0x24,0x92,0xD7,0x5B,0x7F,0x94,0x9C,0xBA,0x4E,0xE2,0x39,};
const char message638[]={0xFB,0x27,0x6E,0xBB,0xF9,0xB4,0xEE,0x43,0x54,0xDF,0x42,0x2F,0xD8,0x6B,0xC3,0xF3,0x21,0xD9,0xC5,0xA3,0xB4,0xA1,
0x37,0x9F,0xE7,0x0};
const char message639[]={0xBB,0xAD,0x1E,0xB5,0xE2,0xAF,0x8E,0x71,0x57,0x49,0xD4,0x86,0x5,0x9F,0xE4,0x35,0xF1,0x28,0x6D,0xE8,0xCD,0xE7,
0x7D,0xB7,0xD5,0x67,0x47,0x78,0x4D,0x1C,0x66,0xA3,0xD0,0x8B,0x5A,0x6E,0x50,0x8,0xD7,0x42,0x1B,0xA7,0x7A,0x46,0xC9,
0x35,0x7E,0x86,0xD0,0x6,0x89,0xFB,0x9A,0xB8,0xED,0xE6,0x57,0xBF,0x23,0x88,0xE7,0x0};
const char message640[]={0xBB,0xAD,0xAE,0x93,0xD8,0xE7,0xB5,0x36,0xFB,0xD6,0x1F,0x5A,0xDC,0xC7,0x59,0xDB,0xC4,0xF2,0x1C};
const char message650[]={0xFB,0x67,0x96,0xF9,0x7A,0x8A,0xE7,0x79,0x87,0xD9,0x28,0xF4,0x22,0x13,0x4E,0x16,0x39,0xCA,0x1};
const char message651[]={0xBB,0xAD,0x4E,0xB2,0xC0,0xF5,0x9A,0xF8,0x44,0xDA,0xB7,0xFE,0x16,0x3C,0xCE,0xDA,0xE6,0x49,0x5E,0x13,
0x8F,0xD2,0x86,0xDE,0x7C,0xD7,0x55,0x8,0x6F,0xFD,0xAE,0x92,0xA8,0xD,0xB,0xF6,0x3E,0x22,0xD5,0xFC,0xEA,0x18,0xCF,0x28,
0x62,0x4C,0xC8,0xA2,0x96,0xF1,0x87,0x56,0xF,0xE4,0xCE,0x7A,0x7E,0x61,0x6B,0xB1,0x8F,0xB3,0xB6,0xF9,0x14,
0xFB,0xA1,0xD5,0xC9,0x15,0x2A,0xBC,0x26,0xAE,0x13,0xAF,0x7A,0xB,0xBC,0xEF,0x9F,0x90,0xF,0xAD,0xCE,0x4A,0x5E,
0xFD,0x9A,0xF8,0xAA,0x64,0xAD,0x93,0xED,0x67,0x7,0x3B,0xFE,0x24,0x4B,0xE2,0x7E,0x68,0xC5,0xB,0x41,0xBF,
0x86,0x49,0x62,0x5F,0x13,0xDF,0x92,0xBD,0xEF,0xB6,0xFA,0x44,0xF2,0xF3,0xA1,0x95,0xFD,0x9E,0x3B,0xF6,0x19,0xC9,0x51,0x1F,0x71,0x42,
0x3E,0xB4,0x3A,0xA3,0x14,0xCB,0xF8,0x35,0xF1,0x28,0x6D,0xE8,0xCD,0x77,0x5A,0xEF,0x8,0x32,0xCA,0x1};
const char message652[]={0xBB,0xAD,0xBE,0x80,0xE7,0x7D,0x54,0xDB,0x84,0xDC,0x27,0xA4,0xE3,0x2D,0xAF,0x89,0x1B,0xCD,0x3E,0xD,0xB2,
0x4D,0xEF,0x7B,0xA2,0xA,0xFC,0x9A,0x29,0x97,0xAE,0x49,0xE2,0x7A,0xE};
const char message653[]={0xFB,0x27,0xE,0xB3,0x51,0xE8,0x45,0x2D,0x37,0x28,0x84,0x6B,0x4C,0xE2,0xBE,0x26,0x1E,0x11,0x67,0x61,0x7D,0x82,
0xE1,0x7D,0xB7,0xD5,0x5,0xB0,0xEF,0x9A,0xE0,0x27,0xC7,0xEB,0x7A,0xF3,0x6B,0xE2,0x1B,0xC3,0xF0,0x1C};
const char message654[]={0x7E,0x28,0xE6,0x1C,0x46,0x7D,0xB7,0xD5,0x75,0x12,0xFB,0xFC,0x8A,0x33,0x84,0xBB,0x4A,0x3E,0xC9,0x5A,0xC8,0x49,0x9E,
0xB7,0x58,0xBE,0x5B,0x4E,0x3,0xEC,0x39,};
const char message655[]={0xFE,0xFB,0x27,0xBE,0x31,0x8C,0x2F,0x20,0x5E,0xAF,0xBE,0x86,0x2F,0xC5,0x11,0xD3,0x82,0xFD,0x80,0x3A,0x23,
0x10,0x4C,0xB0,0xAF,0xFE,0x2,0x3E,0xB4,0xF2,0xBE,0xDB,0xEA,0x2B,0x87,0xD1,0xFC,0xFD,0x77,0xFE,0x5E,0x73,0x13,0xAE,0xB7,0x12,
0xFB,0x9A,0xB4,0xEE,0x13,0xD2,0xF1,0x14,0xFB,0x9A,0xF8,0x96,0x51,0x25,0x89,0xF9,0xBA,0xAB,0x64,0x7C,0x3,0xDF,0x52,
0xAE,0x93,0x3B,0xEB,0x35,0xF1,0x88,0x38,0xB,0x6B,0x94,0xBF,0xFF,0x3E,0xB0,0xF9,0x15,0x53,0xC0,0x7A,0x8A,0x7D,0xCA,
0x32,0xC0,0x6B,0x34,0xFF,0x9D,0x3F,0x22,0x42,0x18,0xDF,0xC0,0x67,0xDA,0x4F,0xB2,0x16,0xF2,0xD5,0x31,0x3C,0xCF,0x7B,0x40,0x99,
0xAF,0xAF,0x1C,0x3C,0xCF,0xFB,0x4C,0xB6,0x46,0x32,0x3C,0xCF,0xBB,0xDE,0xFC,0x15,0x61,0xA3,0xC,0xEF,0x6D,0xCB,0x45,
0x2D,0xCB,0xFB,0x88,0xB8,0x1,0xC6,0x8B,0x7,0x12,0xF7,0xD5,0xEF,0x8,0xF2,0x9A,0xB8,0xED,0xE6,0x1B,0x13,
0xF2,0xA1,0xD5,0xB5,0x0,0xE3,0x35,0xF1,0x28,0x6D,0xE8,0xCD,0xE7,0xF9,0xFB,0xEF,0xB6,0xBA,0x74,0xD1,0x86,0xAF,0x8E,
0xF1,0x90,0xEC,0xE2,0x5B,0x6,0xD2,0xC0,0x77,0x95,0xAC,0xF1,0x2D,0x74,0x12,0x2A,0x84,0xE1,0xB1,0xDA,0xE6,0x35,0x54,
0x81,0x5F,0x33,0xE5,0x43,0x2B,0x5E,0xDE,0xF7,0x4F,0xC8,0x87,0x56,0x9F,0x48,0xFE,0x2A,0x44,0xEB,0x5B,0xC7,0x24,
0xAE,0xE7,0xEF,0xBF,0xDF,0xE8,0x6F,0x4C,0x31,0x49,0x86,0x75,0x48,0x81,0xC7,0xD7,0x54,0xBD,0x26,0x86,0x27,0xE3,
0xC8,0x45,0x61,0xF8,0x52,0x1C,0x31,0x2D,0xD8,0xA7,0xD8,0x5B,0x5A,0xC9,0x31,0xEC,0xB5,0xE1,0x35,0xF1,0x8D,0x61,0x78,
0xFE,0xA3,0x27,0xE7,0x7C,0x8A,0xFD,0xFE,0x1E,0xFA,0x95,0x3E,0x7C,0x9B,0xC9,0x2E,0xDE,0xFA,0x6B,0x22,0xF6,0xBE,0xDB,
0xEA,0x29,0xF6,0x35,0x71,0xC6,0xAA,0xB7,0xFE,0x9A,0xF8,0xC6,0x30,0x5E,0x13,0x72,0x56,0xF2,0xEA,0xD7,
0xC4,0xE3,0x24,0xB9,0xC5,0xE6,0xF3,0xEE,0x97,0xA2,0x37,0x97,0x92,0x2C,0x84,0x61,0xFC,0x9A,0x78,0x19,0x7D,0x46,0x9C,
0x24,0x24,0xEE,0x23,0xE2,0x2C,0xAC,0xEB,0xE4,0xCE,0xBA,0x96,0x9B,0xEF,0x29,0xF6,0x95,0x3E,0x7C,0x4,0x26,0xD9,
0xB0,0xD6,0xF7,0x64,0xDA,0xB6,0xE6,0x5E,0xAB,0x9F,0x62,0xBF,0x23,0x68,0xE0,0x7A,0xAE,0xCF,0x5E,0x95,0x2E,0x96,0xF7,0x1D,
0xEB,0x35,0x31,0x5C,0xEB,0x64,0xFB,0x9A,0x20,0xBE,0xD6,0x59,0x1F,0x5A,0x7D,0x22,0xF9,0xF9,0x4D,0xF1,
0xC2,0x8D,0x9,0x79,0x4D,0xC,0x97,0x2E,0xDA,0x70,0x63,0x66,0x7D,0x68,0x75,0x4B,0xF6,0xD5,0xAF,0x89,0x6F,
0x29,0xD2,0xE2,0x7D,0xFF,0x84,0xBC,0x26,0x86,0x7,0xA4,0x9,0xE3,0xFB,0xC8,0x4A,0x46,0x11,0x89,0xFB,0xA1,0x15,0x5F,
0x67,0x82,0xD8,0xA7,0xD8,0xF,0xAD,0xF8,0xA1,0x4D,0xF0,0xFC,0x77,0x5B,0x3D,0x19,0x4F,0x71,0x79,0x78,0xD6,0x6B,
0xD2,0xFA,0x28,0x7F,0xFF,0xFD,0x13,0x8F,0x72,0x2D,0xA3,0xD9,0x5E,0x6F,0x7E,0x4D,0x5C,0x6F,0xC5,0x35,0x1F,0x25,0xD7,
0x5B,0x7F,0x4D,0xDC,0xCD,0x18,0xA7,0xF5,0xD1,0xFD,0xD8,0xBB,0xE7,0x9E,0x7B,0xB4,0xEF,0xFB,0xDA,0xEF,0xC7,0xCD,0xB8,0x77,0x9F,0xBD,0x3B,0xF6,0xD9,0xBF,0xEF,0x3B,0xF6,0xDC,0x31,0x92,0xFB,0xEC,0x70,
0x0};
const char message656[]={0xFB,0x27,0xE,0xB3,0x51,0xE8,0x45,0x2D,0x8F,0x73,0x78,0x56,0x71,0x6E,0xF5,0x9A,0xF8,0xC6,0x14,0x93,0x64,0x58,
0xDE,0x77,0x5B,0x3D,0x56,0xAB,0x6E,0xA1,0x93,0x50,0x21,0xC,0xB7,0xFD,0xD5,0x31,0x6A,0x92,0xB8,0xAF,0xBE,0x40,
0x15,0x67,0xA0,0x9D,0xC6,0x6B,0x82,0xF8,0x5B,0x8A,0xB4,0x5C,0x27,0x5E,0xE5,0x39,};
const char message657[]={0xBB,0xAD,0xBE,0x80,0xD7,0xC4,0xB7,0x21,0x90,0x58,0xF0,0xF8,0x35,0xF1,0x35,0x73,0xF3,0x5,0x3C,0xC5,0xBE,
0x26,0xAE,0xB5,0x1D,0xC6,0xAF,0x66,0x79,0x46,0xC9,0xE5,0x39,};
const char message658[]={0xA3,0x77,0x20,0x3B,0xCA,0x1};
const char message659[]={0x23,0xCE,0xAC,0xF,0xAD,0x9E,0x8C,0xF,0xAD,0x5E,0x93,0xC4,0x47,0xE2,0x8E,0xF4,0xBB,0xAD,0xBE,0x66,0xAB,0x60,0xEF,
0xF6,0x49,0x5E,0x13,0xDF,0x18,0x86,0xF9,0xFA,0x1E,0x54,0x72,0x81,0x4F,0x71,0xC,0x4B,0x59,0x8,0x83,0xF7,0xD1,0x3B,
0x46,0xB,0x4E,0xEB,0x5B,0xC7,0x24,0xEE,0x75,0xEE,0xF8,0x35,0xF1,0xD,0x52,0x9C,0xE1,0xDC,0x1D,0x8F,0x72,0x0};
const char message660[]={0xFB,0x27,0xAD,0x47,0x21,0x37,0x8C,0x9F,0xEB,0x30,0x81,0x7,0x63,0x82,0x71,0xD,0xA1,0x8D,0x5B,0x6C,0xBE,0xF1,0x69,
0x3D,0x50,0x5D,0x1B,0xBE,0xE2,0xC,0xE1,0x7A,0xC8,0xDA,0xD9,0xA0,0xCD,0xF7,0x28,0x39,0x75,0x9D,0xE4,0x21,0xE3,0x68,0x1D,
0x7B,0x50,0x14,0x45,0xB0,0x37,0xA8,0xE6,0x6B,0x82,0xF8,0xDB,0x4C,0xCE,0xAD,0xC0,0xB4,0x8A,0xB6,0xBB,0x21,0xD7,
0xFA,0x36,0x29,0x16,0xC,0x9E,0x3};
const char message661[]={0xFB,0xF4,0x28,0x7};
const char message662[]={0xFB,0xF4,0x5,0xB0,0xAF,0xFE,0x54,0xCC,0xC3,0x28,0x7};
const char message663[]={0xFB,0xF4,0xF8,0x35,0xB3,0xCC,0xD7,0x21,0xAD,0xDC,0x79,0xBD,0xF9,0x35,0xF1,0xB8,0x63,0x48,0x79,0xDF,0x6D,0x75,0x83,
0x42,0xF8,0xC6,0xC8,0xC2,0xF3,0x8B,0x4A,0x65,0x51,0xCB,0x43,0x16,0xD8,0x73,0x0};
const char message664[]={0xBB,0xAD,0xBE,0x80,0xE7,0x63,0x54,0x86,0x40,0xDB,0x2B,0xB5,0x80,0xAF,0xE,0x64,0xC3,0xF0,0x85,0x4D,0x31,
0xEC,0xAB,0x5F,0x13,0x77,0xB9,0x95,0xD8,0xF1,0xD,0xAA,0x79,0xA3,0xDB,0x42,0xBE,0xCD,0x24,0x5E,0x17,0x98,0xAD,
0x57,0x9F,0xCA,0x73,0x0};
const char message665[]={0xFB,0xF4,0xF8,0x1,0x69,0xC2,0xA9,0x9E,0xA1,0x5,0x9E,0x3};
const char message666[]={0xBB,0xAD,0xBE,0x80,0xD7,0xC4,0x8D,0x34,0x61,0xBD,0xF5,0xD7,0xC4,0xCD,0x84,0xA5,0x2,0x73,0xA,0x52,0xBE,
0x90,0xE3,0x17,0x49,0xC1,0x5E,0x1B,0x5E,0x13,0xB7,0x8,0xB4,0x65,0xE1,0x81,0xDC,0x59,0x6F,0xFD,0x4B,0xC9,
0x42,0x79,0xE};
const char message667[]={0x3B,0x7F,0x5F,0x31,0x5,0xCA,0xF1,0xF7,0x7E,0x4B,0x31,0xAF,0x1B,0x49,0xF5,0xEA,0x27,0x33,0x99,0x70,0x92,0xEF,0xCB,0x1D,
0xA2,0xF2,0x3E,0x22,0x6E,0x50,0x8,0x9F,0x69,0xC2,0xA3,0x0,0xA9,0xE1,0xAD,0xDF,0x68,0xF6,0xBD,0xFA,0xB6,0x47,0x39,};
const char message668[]={0xBB,0xAD,0x3E,0xD3,0x84,0x1B,0xCD,0x3E,0xD8,0xB7,0xBC,0x66,0x2F,0x3C,0xCE,0x68,0x5D,0x6F,0xBE,0x1,0xF8,0xD6,
0xF8,0xD2,0xC6,0xA8,0xEF,0xB6,0x7A,0x86,0xB8,0x57,0xDD,0x27,0x6D,0xBC,0x26,0xE2,0x6B,0xC3,0x27,0x92,0xCB,0x73,0x0};
const char message669[]={0xA3,0x7,0x72,0x67,0x85,0xE1,0x43,0x2B,0x71,0xC1,0xAF,0x99,0xF2,0x9A,0xF8,0x96,0x51,0x25,0xC9,0xF8,0xFB,0xC0,0xE6,
0x69,0x3D,0xBF,0xE2,0xC,0xE1,0x46,0xC7,0x29,0x37,0xA8,0xE6,0xB5,0x90,0x9B,0xEF,0x33,0x89,0x9F,0x62,0xAF,0x85,
0xDC,0x7C,0xC7,0x80,0xE5,0x39,};
const char message670[]={0x7E,0xEA,0xE1,0xB4,0x5E,0x13,0xEF,0x60,0xB1,0xEA,0x31,0x62,0xD,0xFC,0xD6,0x5F,0x13,0xDF,0x18,0xC6,0xF8,0x13,
0x8F,0xD5,0xAA,0x6B,0x78,0x6A,0xAD,0xEA,0x3B,0xE5,0x9D,0x3C,0xC5,0x7E,0xE6,0xBA,0x31,0xA9,0xF0,0x99,0xC4,0x4F,0xB1,
0xD7,0x90,0x6C,0x3D,0x7};
const char message671[]={0x3B,0xBE,0x3A,0x90,0xBD,0xD1,0x6D,0x21,0xD7,0x60,0xC7,0x5F,0xD8,0x14,0xC3,0xBE,0xFA,0x35,0x71,0x3D,0x74,
0xB3,0xE7,0x0};
const char message672[]={0xBB,0xAD,0x5E,0x93,0xC4,0x77,0xAA,0xD3,0xBA,0x31,0xA9,0xF0,0x4E,0xDF,0x8D,0x6E,0xEB,0x39,};
const char message673[]={0xBB,0xAD,0x9E,0x8C,0x4B,0xD7,0xDD,0x26,0x71,0x5F,0x7D,0x17,0x75,0x92,0xEA,0xD7,0xC4,0xB7,0x8C,0x2A,
0x49,0xCC,0xD7,0xB7,0xD4,0x48,0x6E,0x50,0xCD,0x56,0xF5,0x49,0xEB,0x11,0x38,0xA6,0xB5,0xA8,0x65,0x94,0x3};
const char message674[]={0xFB,0x27,0x9E,0xC4,0x5F,0x31,0x42,0x58,0x6F,0xFD,0xD4,0x96,0x4,0x4F,0xB1,0x5F,0x19,0x6A,0x7C,0x83,0x6A,
0x3E,0xAF,0x27,0x49,0x5D,0xA7,0x35,0x87,0x2B,0xB1,0xE0,0x6A,0x81,0xF7,0xDD,0x56,0xD7,0x18,0x59,0x13,0xA7,
0x3A,0xC9,0x4D,0x1D,0x54,0x54,0xAA,0xD5,0xA,0x83,0xE7,0x0};
const char message675[]={0x7E,0xE0,0xB1,0x5A,0x75,0xD,0xF7,0xF3,0x1E,0x7F,0xF3,0xFD,0xBC,0x6F,0x1F,0x90,0xBC,0xDE,0xC1,0x8E,0x4F,0xEB,0x2B,0x90,0x3B,
0x2B,0xC,0xAF,0xC,0x1,0xFC,0x9A,0x29,0x1F,0x5A,0x8D,0x6F,0x50,0xCD,0x6B,0xDC,0x86,0x7C,0x26,0xF1,0x53,0xEC,
0xF3,0x6,0xAD,0x68,0xB8,0x86,0x64,0xEB,0x7D,0xB7,0xD5,0x6B,0x92,0xF8,0x3E,0xB4,0x7A,0x68,0x13,0x3E,0x29,0xF6,0x3C,
0xCF,0x1};
const char message676[]={0x7B,0xCB,0x7C,0x3D,0x1F,0x92,0x5D,0x7C,0xC1,0x8D,0x21,0x5,0xFB,0xAD,0x4D,0xE0,0xC7,0x69,0x71,0x6D,0xF8,0x82,
0x9,0x9C,0xE1,0x46,0xB7,0x85,0x7C,0x66,0x6D,0x73,0x67,0x88,0xBD,0x86,0x8C,0xD7,0x53,0xEC,0xB7,0x36,0x81,0x61,
0xAF,0xD,0xCF,0x57,0x72,0xE4,0x7D,0xB7,0xD5,0xB7,0x94,0x4B,0xD7,0x19,0x71,0x9B,0xF0,0x9A,0x88,0x3D,0x7};
const char message677[]={0xBB,0xAD,0xBE,0xD2,0x78,0x4D,0x5A,0xDF,0x38,0x5,0xF,0xA4,0xD7,0x6B,0xE2,0x7B,0xF7,0xEF,0xB8,0x5F,0xEC,0xDB,0x4E,0x9E,0x62,
0x1F,0x3A,0xED,0xA9,0x6E,0x11,0x68,0xCB,0x42,0x18,0x4E,0xF2,0x9A,0xF8,0xEC,0x60,0xD7,0x5B,0x7F,0x4D,0x7C,
0xE4,0x41,0x32,0x86,0xE0,0x7A,0x2B,0xBE,0xCD,0x61,0x3D,0xDD,0xF6,0x1C};
const char message678[]={0xFB,0x74,0x4D,0x12,0xF7,0x6A,0x41,0x57,0x61,0x94,0x3};
const char message679[]={0xBB,0xAD,0x1E,0xE7,0xF0,0x45,0xF5,0x9A,0x60,0x3C,0xC5,0x9E,0x91,0xF6,0x79,0xAD,0xDB,0x37,0xBE,0xA6,0xEA,
0xD2,0x75,0x69,0xC3,0x73,0x0};
const char message680[]={0x7B,0x76,0xFB,0xD6,0x53,0x6B,0x55,0x97,0x34,0x91,0x9B,0x45,0x2D,0x4F,0xB1,0x8F,0x93,0x49,0xF0,0x40,0x5,
0xCE,0x52,0xC,0xEF,0xBB,0xAD,0x2E,0x5D,0xB4,0xE1,0x7E,0x80,0xE3,0x94,0x9B,0x89,0x60,0xA2,0x10,0x60,0xBE,0x6E,0x86,0xCC,0x6C,0x6D,
0xF8,0xC8,0xB4,0xF9,0xCC,0xD0,0x28,0x7};
const char message681[]={0xBB,0xAD,0xEE,0x92,0x9,0xAF,0xC9,0xC0,0x75,0xE2,0xF8,0x33,0xE3,0x18,0x7C,0x2D,0xB4,0xB1,0x5E,0xFD,0x9A,
0xB8,0x1,0xEB,0xE2,0x29,0xF6,0x35,0xF1,0x99,0xB5,0xCD,0x6B,0x8C,0xF4,0xAD,0x93,0x7C,0x66,0xD0,0xBD,0xEF,0xB6,
0xFA,0xDA,0x18,0x19,0xDF,0x98,0x90,0xF,0xAD,0xDE,0x11,0xE4,0x54,0xAF,0x3E,0xC9,0x8A,0xB0,0xD5,0x6B,0xE2,
0x41,0xB9,0x6E,0xBA,0xF8,0xD6,0x71,0x94,0x5C,0x31,0xA4,0x46,0xFB,0x8E,0xA0,0x81,0xEB,0x29,0xF6,0x23,0x30,0xC9,0x86,0xEF,0xC9,
0xB4,0x6D,0xCD,0xBD,0x56,0x3F,0x19,0xAF,0x9,0xC6,0xF8,0x5A,0x2B,0xB1,0x4F,0xB1,0x77,0xD3,0x75,0x61,0xBD,0xEF,
0xB6,0x3A,0xC5,0x31,0x2C,0x65,0x21,0xC,0xD7,0x19,0x78,0x4D,0xC4,0x4F,0xB1,0xF7,0xD1,0x5A,0x27,0x29,0xC8,
0x42,0x18,0xBE,0x23,0x68,0xE0,0x3A,0xC9,0x75,0x6E,0xA9,0xB7,0xFE,0x11,0x98,0x64,0xC3,0x5A,0xDF,0x93,0x69,0xDB,0x9A,
0x7B,0xAD,0xBE,0x31,0xFB,0x21,0x95,0x3B,0xD7,0x68,0xFE,0xFE,0x3B,0x7F,0x44,0x84,0x30,0x3E,0xD5,0x37,0x70,0x25,0x49,0x18,0x5E,
0xDD,0xBE,0xE7,0x8D,0x49,0x1,0xD7,0x9B,0x3F,0xB4,0xBA,0xD6,0x35,0x5F,0x7D,0x8B,0x8D,0x2C,0x3E,0xB4,0xE2,
0x85,0x60,0xC2,0x1A,0xE5,0x0};
const char message682[]={0xBB,0xAD,0xE,0x29,0xF0,0x6B,0xE2,0xDC,0x1D,0x5F,0xEF,0x10,0xDA,0x80,0xBD,0x36,0x7C,0xCB,0xA8,0x92,0xE4,0x66,
0x66,0x86,0x56,0xFA,0xF8,0x29,0xF6,0x35,0x19,0x78,0x72,0xC,0xFB,0xA8,0x3,0x6D,0x78,0xEB,0x3A,0x6D,0xE0,0xE5,
0x7D,0xB7,0xD5,0x17,0xF0,0x7C,0xA0,0xAA,0x80,0xEB,0x59,0x27,0xB1,0x64,0x22,0xAB,0x32,0xBC,0x32,0xF8,0x48,
0xDC,0x57,0xBF,0x26,0x5E,0x46,0x3F,0x22,0xCE,0xC2,0xF2,0xBE,0x7F,0x62,0x78,0x32,0x4E,0x71,0xC,0x4B,0x59,0x8,
0xC3,0x93,0x19,0xAB,0x60,0x3D,0x7F,0xFF,0xFD,0x46,0x7F,0xB6,0xE2,0xF5,0x90,0x5,0x1E,0xBF,0x26,0x1E,0x75,0xA0,0xD,
0xB7,0xB4,0xB6,0x36,0x81,0x5F,0x13,0xD7,0xB3,0x1E,0xA7,0x9C,0xD6,0x49,0x2C,0x60,0xBF,0x23,0x14,0x81,0xFB,
0x96,0xEE,0x27,0x5A,0xAB,0xBD,0xEF,0x95,0x2,0x73,0xBB,0x59,0xB0,0xE3,0x4F,0x7C,0x6B,0xD1,0xB1,0x16,0xD6,0x6B,
0x66,0x7D,0xE2,0x33,0xED,0x49,0x4C,0x58,0x5,0xFB,0x7C,0x48,0x76,0xF1,0x3D,0xA8,0x94,0xA2,0x1A,0xDE,0xFA,0xE3,
0x16,0xC,0xE3,0xD7,0xE4,0x56,0xEE,0x7C,0x4D,0x7C,0xCF,0x94,0x2D,0xEF,0xD7,0x8E,0x63,0xF0,0x46,0x19,0xF0,0xBD,0x95,0x81,
0x52,0x72,0x7C,0x92,0xD7,0xC4,0xB7,0x96,0x55,0xAC,0xB6,0xA2,0x96,0xB7,0xFE,0x9A,0xF8,0x9E,0xE0,0x40,0xB2,0xF3,0x9E,
0xE9,0x4E,0x9B,0xF6,0x9C,0x14,0x8C,0x1C,0xBC,0xFB,0x81,0x6F,0x2D,0x26,0x92,0xD,0xF6,0x93,0xE2,0x85,0xA0,0xBF,0x66,
0xD6,0x6B,0xE2,0xA3,0x53,0xF0,0xDD,0x4F,0x9D,0xF6,0x9C,0x21,0xC,0x37,0x5A,0x5,0x7B,0xD,0x37,0x81,0x87,0xDB,0x8C,
0xD3,0x25,0x71,0x5F,0xFD,0x9A,0x38,0x27,0x5,0x23,0x87,0x93,0x7E,0xAA,0x1B,0xB9,0xBE,0xD4,0xB6,0x61,0x2D,0x5D,
0x5,0xEF,0x7E,0xE0,0x3A,0x48,0x60,0x5F,0xFD,0x28,0xB9,0x68,0xA3,0x28,0xB,0xAF,0x7E,0x4D,0x9C,0x33,0x84,0xE1,
0xB9,0xBE,0xB5,0x9,0xFC,0xD5,0x9F,0xF8,0xD6,0x2A,0xD8,0xAF,0xD4,0xBA,0xD2,0xC5,0x6B,0xE2,0x5B,0x4B,0x61,
0x55,0x4A,0x2D,0xCF,0xDF,0x7F,0xA7,0x92,0x36,0x48,0xDC,0xD7,0xC4,0x2D,0xA,0x1C,0x93,0x64,0x51,0xCB,0x5B,0xFF,0x8,0x4C,
0xB2,0x61,0xAD,0xEF,0xC9,0xB4,0x6D,0xCD,0xBD,0x56,0x8F,0x3F,0x71,0x25,0x16,0xBC,0xAA,0xDB,0xBE,0x66,0xD6,0xD7,
0xC4,0x8D,0x56,0xC1,0x7E,0xA6,0x9,0xD7,0x0,0xF9,0xA4,0xF5,0xB8,0x57,0x7D,0x81,0xA9,0xD5,0x7A,0x47,0x51,
0xB,0xA4,0xBC,0xFB,0x81,0x47,0x49,0xF6,0xAB,0x63,0xB4,0xE0,0xD5,0xAF,0x8C,0x23,0xF0,0xD,0xAA,0xF9,0x9A,
0xF8,0x96,0x7C,0xD,0x7A,0x33,0x6E,0x11,0xC8,0x4,0x1E,0x4E,0x72,0x33,0x9C,0xC,0x91,0xF4,0xBE,0x7F,0x42,0x3E,
0xF1,0x28,0xC9,0xBE,0x26,0x1E,0x11,0x67,0x61,0xBD,0xFA,0x36,0xE3,0x74,0xF1,0x9A,0xF8,0x96,0xFC,0xE6,0xD7,
0xE4,0x36,0x4E,0x75,0x92,0xEA,0xD7,0xC4,0x17,0x72,0x7C,0x4D,0xD5,0x6B,0x62,0xB8,0xC5,0x46,0x16,0xF6,0xD5,
0x87,0xD9,0x6A,0xAE,0xAF,0x8E,0xF1,0xB8,0x5,0xC3,0xD5,0x22,0x71,0x5F,0x13,0x9F,0xBD,0x2A,0x5D,0xAC,0x1B,
0x13,0xF2,0x9A,0x18,0x1E,0x90,0x2C,0xF5,0x9A,0x59,0xDF,0x93,0x69,0xDB,0x9A,0x7B,0xAD,0xBE,0x91,0xEB,0xF9,0x88,
0x49,0x36,0xAC,0xE5,0xF9,0xFB,0x8F,0x88,0x10,0xC6,0x1F,0x5A,0xF1,0xD3,0x9A,0x20,0xA5,0x18,0xDF,0x52,0xBE,0xB5,0x14,
0x89,0xC2,0xA5,0xD,0xEF,0x3B,0xF4,0x2,0x5F,0x49,0xE8,0xB4,0x24,0xEE,0x6B,0xE2,0x3A,0x98,0x87,0xF,0xAD,0xBE,
0x72,0xB8,0xDB,0x6D,0xB5,0x1,0xAF,0x7E,0x4D,0x5C,0xE3,0x34,0xE1,0x5B,0x46,0x95,0x24,0x37,0x33,0x43,0xB7,0xD2,0x9F,
0x62,0x5F,0xFD,0x9A,0xF8,0xC6,0x30,0x3C,0x7F,0xFF,0x7D,0xDA,0xB8,0x74,0x4D,0x12,0xF7,0x6,0x85,0xF0,0x55,0x1D,0x7D,
0x68,0xF5,0x28,0xB9,0x68,0xA3,0x28,0x8B,0xC4,0x3D,0xC9,0x6B,0xE2,0xA3,0x53,0xF0,0xDD,0x4F,0x9D,0xF6,0x9C,0x21,0xC,
0x27,0x79,0x4D,0x6,0x6E,0x0,0xBE,0xF5,0xA2,0x18,0xDE,0xF7,0x54,0xF5,0x9A,0x59,0x37,0x28,0x84,0x6B,0x78,
0x4A,0xD7,0x4,0x7F,0x55,0xF3,0xE0,0x79,0x9E,0xBF,0xBF,0x19,0x49,0x32,0x3C,0xCA,0xB5,0x8C,0x66,0x3B,0xDA,0x47,0xF6,0xCB,0xBD,0x23,0xF8,0xA5,0x9F,0xFC,0x72,
0x9F,0x3D,0x77,0x8C,0xE4,0x3E,0x3B,0xF6,0xD9,0xBF,0xEF,0x7B,0xB4,0xEF,0x7B,0x1D};
const char message683[]={0x7B,0x32,0x6D,0x5B,0x73,0xAF,0xD5,0x5F,0x39,0xAC,0xD1,0xFC,0xFD,0x77,0xFE,0xDE,0x4F,0x24,0xDB,0xD7,0xC4,0x23,0xE2,0x2C,
0xAC,0xF1,0x6B,0x62,0x78,0xCD,0x56,0xEE,0xAC,0xEF,0xFD,0xD6,0x2A,0xD8,0x4B,0xD7,0x95,0x58,0xF0,0xAA,0x14,0xFB,0x9A,
0x88,0xC7,0xD7,0x54,0x7D,0xEF,0x3,0x92,0xA5,0x5E,0x13,0xC4,0xB7,0x94,0x1,0x5B,0xBD,0x26,0x3,0x1F,0x90,
0xBC,0x9E,0x6E,0xDF,0x98,0x90,0xEF,0xBD,0x1,0xA9,0xE7,0xC6,0xBD,0xD6,0x6B,0xE2,0xA3,0xE7,0x4C,0xCE,0x5B,
0x2C,0x70,0x9D,0xE4,0x29,0x87,0xD9,0x8,0x96,0x8A,0x5A,0xBC,0xEF,0x9F,0x18,0xCE,0x88,0x90,0x5,0xFB,0x9A,0x18,
0x1E,0xAB,0x55,0xD7,0xF0,0x28,0xC9,0x5E,0x1B,0x9E,0xF2,0xBD,0x95,0x81,0x52,0x2E,0x5D,0xD7,0x93,0xAF,0x73,0xC7,
0x9F,0x60,0x8C,0x4F,0xF2,0x7C,0xA5,0x9,0x2C,0x6F,0xFE,0xEA,0x18,0x35,0x49,0x5C,0xEF,0xFB,0x27,0x86,0x33,
0x22,0x64,0xC1,0x3E,0x2F,0x19,0x63,0xB4,0x5B,0xBA,0x9F,0x68,0xAD,0xF6,0xFC,0xFD,0x2D,0xDD,0x4F,0xB4,0x56,0x8F,0x6F,0xE9,0x7E,
0xA2,0xB5,0xDA,0xF3,0xBC,0xD7,0xC4,0x2D,0x31,0xB6,0x6A,0x7E,0xEB,0xDF,0xF7,0xBC,0xA9,0x37,0xDC,0x22,0x3C,0xCE,
0x2A,0x92,0x1E,0xBF,0x66,0xD6,0xCD,0xA4,0x90,0x82,0x85,0xB,0x8C,0x15,0x65,0x4,0xBE,0x31,0xFB,0xB,0x52,0xAF,
0x99,0xF5,0x14,0xE9,0x81,0xC4,0xFD,0x48,0xB4,0x62,0xC9,0x40,0xAB,0x46,0x39,};
const char message684[]={0x3B,0x7F,0xEF,0x43,0x9B,0xF0,0xA1,0xD5,0xF8,0x3B,0x82,0x6,0x2E,0xFF,0x9D,0xBF,0xF7,0xA1,0x4D,0xF8,0xD0,0x6A,0xFC,0xEA,0x1E,
0x7F,0x5F,0x31,0x5,0xCA,0x51,0xE};
const char message685[]={0xFB,0x27,0x3,0x4F,0x17,0x52,0xEB,0xAD,0xBF,0x26,0x1E,0x7A,0xCB,0xF0,0xA8,0x3,0x6D,0x18,0x7F,0xCB,0x10,0x60,
0xAF,0xD,0x1F,0x5A,0xF1,0x37,0x86,0x31,0x7E,0x32,0x93,0x9,0xDE,0x77,0x5B,0xDD,0x62,0x23,0x8B,0x57,0x7F,0x21,
0x79,0x9B,0xD7,0x9B,0x5F,0x13,0xDF,0x98,0x62,0x92,0xC,0xEB,0xD5,0x2E,0x6A,0x82,0xC7,0x5F,0x95,0x5C,0x24,
0xEE,0x75,0xEE,0xF8,0x79,0x41,0xB2,0x36,0xBC,0xD2,0x4,0x16,0xCF,0x1};
const char message686[]={0xBB,0xAD,0x9E,0xCB,0xF7,0x9A,0x38,0x89,0xF8,0x80,0x8,0x7C,0x4B,0x6B,0x63,0x14,0xC2,0x70,0xBD,0xF9,0x24,
0x7A,0x73,0x9C,0x45,0x2D,0x4F,0xAD,0x55,0xBD,0x26,0x1E,0x11,0x67,0xC1,0x7C,0x5D,0xEB,0xAC,0xF1,0x35,0x55,0x9F,
0xF8,0xCA,0x61,0x7D,0xE2,0x3E,0x69,0x63,0x5D,0xBA,0x26,0x89,0xEB,0x39,};
const char message687[]={0xFB,0x27,0x4E,0x22,0x3E,0x20,0x2,0x7F,0xE5,0xB0,0x3E,0xB4,0xFA,0x96,0x62,0x5E,0x77,0xFB,0x35,0xC1,0xF0,0xBE,
0xDB,0xEA,0x71,0xE,0xCF,0xE5,0x7B,0x4D,0x3C,0xEA,0x40,0x1B,0x5E,0x7D,0xBD,0x79,0xC3,0x27,0xC5,0xAF,0x7E,
0x40,0x7D,0x68,0x75,0x92,0xF1,0x35,0x55,0x1F,0x5A,0x3D,0x19,0x62,0x5E,0x5F,0x8A,0xF1,0x1,0xF5,0x9A,0x78,0x44,
0x9C,0x85,0xF5,0x64,0x9C,0xE4,0x35,0xF1,0x4A,0x13,0x58,0x3C,0x7};
const char message688[]={0xBB,0xAD,0x9E,0x62,0x9F,0x8F,0x3A,0xD0,0x86,0xB7,0xAE,0xD3,0x6,0xFE,0xAA,0xE4,0x7A,0xF5,0x49,0xA,0xCC,
0xED,0x66,0xE1,0x35,0x71,0x12,0xF1,0x1,0x11,0xD8,0xFB,0x8,0xE8,0x28,0xE0,0x24,0xAF,0x89,0x57,0x9A,0xC0,
0x72,0xD,0x2E,0xC9,0xAB,0x6F,0x69,0x6D,0xC,0x54,0x18,0xEE,0xF6,0xD3,0xC8,0xC1,0xBB,0x1F,0x38,0x23,0x42,
0xD6,0x7A,0xCD,0xAC,0x4F,0xDC,0x27,0x6D,0xAC,0x4B,0xD7,0x24,0x71,0xC7,0xD7,0x54,0x7D,0x55,0x72,0xAD,0x2F,0x3,
0x59,0x24,0xEE,0x27,0xD2,0x44,0x61,0xF0,0x1C};
const char message689[]={0xFB,0x27,0x1E,0x75,0xA0,0xD,0x6F,0x5D,0xA7,0xD,0xBC,0xAE,0x77,0x8,0x6D,0x7C,0x68,0xE5,0x39,};
const char message690[]={0xFB,0x27,0x86,0x27,0xE3,0xC9,0x31,0xEC,0x53,0xEC,0x19,0x69,0x87,0xEB,0xCD,0xCF,0xAD,0xA8,0xC5,0x73,0x0};
const char message691[]={0xA3,0x1B,0xC8,0x7A,0x8A,0xBD,0x4E,0x6B,0x7A,0xE};
const char message692[]={0x7E,0xE0,0xB,0x88,0xD7,0x53,0x6B,0x55,0xDF,0xB7,0x9D,0x7C,0x40,0xF2,0x7A,0x7,0x3B,0xBE,0x41,0x35,0xEF,0x32,0x72,0xD,
0xD7,0x42,0x6E,0xBE,0xCF,0x24,0x7E,0x8A,0x7D,0x48,0x76,0xF1,0x35,0x5B,0x5,0xB,0x5E,0x9E,0x3};
const char message693[]={0xFB,0x27,0x86,0xC3,0x6C,0x84,0xAD,0x9E,0x5B,0x51,0xCB,0xF8,0xD2,0x75,0xA3,0xD9,0x2E,0xCF,0x1};
const char message694[]={0xFB,0x74,0x9D,0xE2,0x88,0xB1,0x16,0x99,0x30,0xBE,0xA6,0xEA,0x1A,0xAA,0xC0,0xAF,0x99,0x72,0xE9,0x9A,0x24,0xAE,
0xE7,0x0};
const char message695[]={0xFB,0x27,0xAE,0x2B,0x16,0x2A,0xC5,0x38,0xAD,0x5B,0x6C,0xCD,0x59,0xB0,0x37,0xA8,0xE6,0x85,0x36,0x7C,0x4B,
0x36,0xC1,0xDE,0xE8,0xB6,0xD7,0x43,0x1B,0xE0,0xE5,0x39,};
const char message696[]={0x23,0xCE,0xAC,0xE7,0x43,0x9B,0x10,0x86,0x6F,0xC9,0xA3,0x1C};
const char message697[]={0xFB,0x67,0xD6,0xD,0xA,0xE1,0x1A,0xBE,0x20,0x75,0xBD,0xD9,0x48,0xB6,0x27,0x79,0x5A,0x53,0xCA,0x86,0xF1,0xAB,
0x1F,0x31,0xA2,0x64,0xBC,0x26,0xCE,0x19,0xC2,0xE0,0x39,};
const char message698[]={0xFB,0x9E,0xEC,0xE2,0x5B,0xCA,0x7A,0xEB,0x8F,0x92,0x53,0xD7,0x49,0xC6,0x5F,0xC8,0x0,0x7B,0x83,0x6A,0x7E,0x6B,0xF6,
0xAD,0xA7,0xD8,0x1B,0x69,0xF6,0x51,0x46,0x60,0xCF,0x1};
const char message699[]={0xFB,0x27,0xBE,0x31,0x8C,0xAF,0x0,0x44,0xEB,0x35,0xC1,0xF0,0xBE,0xEF,0x28,0xF3,0xF5,0xD9,0x11,0xAE,0x37,0xBF,
0x26,0xE2,0xD7,0xCC,0xBA,0xB4,0xD6,0x76,0xF8,0x92,0x66,0xAC,0x51,0xE};
const char message700[]={0xFB,0x27,0x86,0x2F,0x44,0xC9,0x59,0x78,0x4D,0x5C,0x3,0xD7,0x5C,0xAF,0xBE,0x4B,0x26,0x3C,0x1F,0xA8,0x2A,
0xE0,0x11,0x93,0x29,0xB7,0xC1,0x73,0x0};
const char message701[]={0xFB,0x27,0x86,0x6F,0x2D,0x95,0x24,0xAF,0x89,0x47,0xE0,0xD5,0x92,0xE1,0x1A,0x42,0x8B,0x4B,0xE2,0xAE,0xB7,
0xFE,0x9A,0xF8,0xC6,0x30,0x3C,0x7};
const char message702[]={0x7B,0xEB,0xB4,0x9E,0x5F,0x71,0x86,0x30,0xFE,0x80,0xBA,0x81,0x10,0x76,0xC6,0x1E,0x14,0x45,0x11,0xEC,0xF8,0x3E,0xAA,0x6D,
0x42,0x3C,0x7};
const char message703[]={0x66,0x24,0xC6,0x69,0xDD,0xA6,0xB8,0xE0,0x56,0xEB,0x2D,0xCF,0xAF,0x49,0xD1,0x28,0x7};
const char message704[]={0x23,0x66,0x81,0xAF,0x61,0xEB,0x18,0xEB,0xAB,0x90,0xF1,0x49,0x5E,0x13,0x5F,0x85,0x8C,0xEF,0x42,0xC0,0x59,
0xCD,0xEB,0x29,0xF6,0xB4,0x5E,0x13,0x72,0xC6,0xD6,0x26,0x30,0xEC,0xD,0xAA,0xF9,0xFC,0xD6,0x62,0x21,
0xB,0xEC,0x7D,0xFF,0xCC,0x7A,0xDC,0x26,0xAC,0xD7,0xC4,0x21,0x2E,0x9,0x3C,0x7};
const char message705[]={0xBB,0x2A,0x1E,0xF5,0xDD,0x56,0x77,0x51,0x9F,0x4A,0x5C,0x1E,0x46,0x39,};
const char message706[]={0x7E,0xED,0xC,0x4F,0xB1,0x6F,0xA,0x9E,0x3};
const char message707[]={0xA3,0xA7,0x8E,0x1A,0xAE,0x13,0xAF,0x1A,0xE5,0x0};
const char message708[]={0xBB,0xAD,0x1E,0x81,0x57,0x4B,0x86,0x30,0x3C,0x62,0xE8,0xE0,0x47,0xC9,0xA9,0xEB,0x24,0xCF,0xF5,0xBC,0xAE,0x10,
0xC6,0xD7,0x54,0x3D,0xEB,0x1,0xB9,0xEA,0x54,0xE6,0xEB,0x24,0x30,0x1B,0x41,0x16,0x99,0xE0,0x39,};
const char message709[]={0xFB,0x27,0x86,0xA7,0xA9,0xC9,0xDE,0x7,0x44,0x24,0xEE,0x43,0xB2,0x8B,0xEF,0x41,0xA5,0x14,0x15,0x61,0xBD,0xF5,0x6F,
0x9D,0xE1,0xD5,0x2E,0x6A,0x82,0xBD,0x9B,0xB1,0xF9,0x2B,0x75,0xD4,0x30,0xFE,0xD0,0xEA,0x3E,0x69,0x63,0x94,0x3};
const char message710[]={0x7E,0xB4,0x1,0x13,0x78,0x7C,0xD2,0x3F,0xB4,0xBA,0x91,0x52,0xAF,0xFE,0xAA,0x8E,0x5E,0x13,0x8F,0x88,0xB3,0xB0,
0xC6,0x1F,0x5A,0x7D,0xA6,0x9,0xAF,0xBE,0x4E,0x62,0x9F,0x37,0x72,0x78,0xF5,0xE3,0xF4,0xE1,0x54,0x57,0xA2,
0x56,0x6A,0x1,0x9E,0x3};
const char message711[]={0x7B,0xCB,0x7C,0x7D,0x45,0xE4,0x83,0x1D,0x5F,0xDA,0xF0,0xBE,0xB7,0x6E,0x50,0x8,0x97,0xAE,0xDB,0x7E,0xCA,0xF0,0x99,
0x1C,0x5F,0x6F,0x7E,0xDE,0x98,0x14,0xE0,0x39,};
const char message712[]={0xFB,0x27,0x18,0xA7,0x75,0xE9,0x33,0x72,0xB5,0xBC,0xFA,0x6E,0xBF,0x26,0x18,0x9E,0x3};
const char message713[]={0xFB,0x27,0x3E,0xB3,0xB6,0x79,0x5A,0xF,0xBD,0xF9,0x60,0x47,0x39,};
const char message714[]={0x23,0xD9,0x6D,0x4F,0x16,0x39,0xEA,0x23,0x52,0xCD,0x1B,0x33,0x6B,0xA4,0xE};
const char message715[]={0xBB,0xAD,0x5E,0x3C,0xBC,0xFA,0x7A,0xF3,0x86,0xD7,0xC4,0xD,0x58,0x17,0xD7,0x50,0x6,0x20,0xAF,0x89,
0xCF,0xAC,0x6D,0x3E,0xC5,0x9E,0x6A,0x5D,0xE7,0x8C,0x31,0xFE,0xEA,0x57,0x5F,0x63,0xA4,0xEF,0x35,0xF1,0xD0,0x9B,
0xF,0x3C,0xBE,0xA6,0xEA,0x54,0xA7,0xF5,0xEA,0xBE,0x16,0x94,0xD4,0x53,0xEC,0x6D,0x63,0x89,0x79,0xDD,0x45,
0x9D,0x64,0x91,0x85,0xE7,0x0};
const char message716[]={0xBB,0xAD,0x1E,0xA9,0x7A,0x4D,0x7C,0xCD,0xE4,0xE8,0x6,0xAC,0x8B,0x6B,0x28,0x3,0x90,0xD7,0xC4,0x67,0xD6,
0x36,0x9F,0x62,0x4F,0xB5,0xAE,0x73,0xC6,0x18,0x9F,0xEA,0x2E,0x6A,0x9D,0x64,0x91,0xC5,0x23,0xB0,0x8E,0xAD,
0xC2,0xE0,0x7D,0x9F,0x36,0x3E,0xB4,0xBA,0x0,0xF6,0xAB,0x63,0xD4,0x24,0x71,0x5F,0x7D,0xBD,0x79,0xC3,0xA9,0xAE,
0x2B,0xAE,0x9,0xBE,0x6D,0x43,0x3C,0x7};
const char message717[]={0x7B,0xCB,0x7C,0x3D,0xBF,0x36,0xCE,0xE8,0x11,0x61,0xC3,0x5B,0x7F,0xA7,0xEF,0x46,0xB7,0x1D,0xDF,0x98,0xBD,0xF0,0x35,
0x33,0xC2,0x69,0x3D,0xA3,0x88,0xDB,0x2C,0xC5,0x59,0x8,0xC3,0xF3,0x6,0xAC,0xB,0xCF,0x1};
const char message718[]={0xFB,0xB4,0x71,0xAA,0xF5,0x35,0x33,0xC2,0x69,0x7D,0x6B,0x59,0x64,0xC1,0xA9,0x85,0xE1,0x6B,0x26,0x47,0x60,0xCF,0x1};
const char message719[]={0xBB,0x6A,0xF3,0x8D,0xFA,0xFE,0x89,0xB7,0x84,0xE1,0x35,0x49,0xDC,0xF,0xAD,0x2E,0x5D,0xB4,0xE1,0x35,0xC1,0x38,
0xAD,0xE7,0x23,0xC2,0x86,0xB7,0x7E,0xA3,0xDB,0x8E,0x9F,0x51,0xC4,0x6D,0x96,0xE2,0x2C,0x84,0xE1,0x6B,0x66,0x4,0xFB,
0x5C,0xCF,0x1B,0xB0,0x2E,0x3C,0x7};
const char message720[]={0xBB,0xAD,0x2E,0x5D,0xB4,0xE1,0xF9,0x85,0x7A,0xEB,0x5F,0x14,0x4C,0xE0,0x6F,0xAA,0x2,0x78,0x38,0xC9,0x6B,
0xE2,0x5A,0x2E,0x92,0xF1,0x35,0x4C,0x12,0xFB,0x9A,0xB8,0x96,0xEC,0x39,};
const char message721[]={0xBB,0xAD,0x1E,0xD1,0xE6,0xBB,0x8A,0x9E,0xD7,0x9B,0x7D,0x4F,0xB1,0x1F,0x5A,0x9D,0xB1,0xB5,0x2B,0xB4,0xD3,0x38,0xD5,0x68,
0xAF,0x9,0xC6,0x69,0xBD,0x26,0x3E,0xF2,0x20,0x19,0x43,0x70,0xC9,0x18,0x87,0xB8,0x9C,0x26,0xD8,0xB7,
0x9C,0xCA,0xFB,0xFE,0xD9,0xB,0x37,0xC0,0xF8,0xAA,0xE,0x90,0x6B,0xC3,0x6B,0xE2,0x11,0x71,0x16,0xD6,0xA8,0xEF,
0xB6,0xFA,0x4C,0x13,0x5E,0x7D,0x13,0x2D,0xAA,0xD7,0xC4,0xB5,0xDC,0x7C,0xE7,0xEE,0x78,0x94,0x3};
const char message996[]={0xBB,0xAD,0xBE,0x80,0x4B,0xD7,0x24,0x71,0x4F,0x52,0x60,0xAC,0x22,0x71,0x3D,0x7};
const char message997[]={0xBB,0xAD,0x6E,0x5B,0xCC,0xEB,0x2B,0x46,0x8,0x4F,0x19,0x6A,0x92,0xB8,0x27,0x79,0x94,0x5C,0xB4,0xA9,0x90,0x3C,
0x7E,0x46,0xC9,0x75,0x9D,0x3B,0x7E,0x5E,0x4B,0x46,0x18,0x1E,0x81,0x37,0x44,0x45,0x5A,0xC0,0xD7,0x6,0xA9,0xB7,
0xFE,0x90,0x26,0x88,0x5,0x8F,0xBF,0x75,0x4C,0xE2,0x5E,0xE7,0x8E,0x3F,0xB4,0xE2,0x6F,0xA1,0x6B,0x62,0x79,0xE};
const char message998[]={0xBB,0xAD,0x3E,0xD3,0x84,0xE7,0x57,0x71,0x8A,0x8B,0x2F,0xC8,0xCA,0xA2,0x96,0xF1,0x33,0xC4,0xBD,0xEA,0xB9,
0x4E,0xFA,0x87,0x56,0x37,0xC0,0xB8,0x86,0xAD,0x63,0x12,0xF7,0x81,0xDC,0x59,0xE0,0xA7,0xD8,0x7,0x72,0x67,0x81,
0xBD,0xEF,0xD0,0xB,0xFC,0xBC,0x31,0x29,0x60,0x7C,0x98,0xC0,0x43,0x4D,0x12,0xF7,0x1A,0xB6,0x8E,0xB1,0x2E,0xCD,
0x71,0x86,0xF1,0xD3,0x4D,0x12,0xCF,0x1};
const char message999[]={0xFB,0xF4,0x8B,0x62,0x5C,0x6F,0x7E,0xCD,0xAC,0xF1,0xA5,0xD,0xCF,0x1};
const char message1000[]={0x7B,0xE4,0xCB,0xC1,0x73,0x0};
const char message1001[]={0x23,0xB7,0xC0,0x73,0x0};
const char message1002[]={0x23,0xB7,0xC0,0x73,0x0};
const char message1003[]={0xE9,0x0};
const char message1004[]={0xE9,0x0};
const char message1005[]={0xBB,0xAD,0xBE,0xA5,0x98,0xD7,0x2B,0x7D,0x78,0xCD,0xAC,0x51,0xE};
const char message1006[]={0xBB,0xAD,0xBE,0xA5,0x98,0xD7,0x6D,0xBF,0x66,0xD6,0x28,0x7};
const char message1007[]={0xBB,0xAD,0x6E,0x5B,0xCC,0xEB,0x33,0x4D,0x78,0xCD,0xAC,0x1B,0x54,0xF3,0x43,0xAB,0x51,0xE};
const char message1008[]={0xBB,0xAD,0xBE,0xA5,0x98,0xD7,0xDD,0x7E,0xCD,0xAC,0x1B,0x39,0x8C,0x72,0x0};
const char message1009[]={0x7B,0xAF,0xC1,0xFD,0xD0,0x8A,0x1F,0x25,0xDB,0x96,0x91,0x3A,};
const char message1010[]={0xBB,0xAD,0xBE,0xA5,0x98,0x97,0xE7,0x0};
const char message1011[]={0xBB,0xAD,0x9E,0x81,0x91,0x76,0xF8,0x4C,0x13,0x5E,0x33,0xEB,0x6,0xD5,0xFC,0xD0,0x6A,0x94,0x3};
const char message1012[]={0x23,0xCE,0xAC,0xDB,0xFE,0xD0,0xEA,0x46,0x4A,0xBD,0xFA,0xB6,0x47,0xEA,0x0};
const char message1013[]={0xE};
const char message1018[]={0x7B,0x6F,0x20,0xF9,0xE};
const char message1019[]={0xE};
const char message1020[]={0xBB,0xAD,0xBE,0xA5,0xDC,0xED,0xD1,0xEE,0x0};
const char message1021[]={0x7A,0x33,0x1C};
const char message1022[]={0xA9,0x97,0x3};
const char message1023[]={0xAB,0x92,0xB5,0x4E,0xB6,0xE};
const char message1024[]={0x51,0x73,0x39,};
const char message1025[]={0x2A,0x72,0x0};
const char message1026[]={0xB6,0xD,0x71,0x0};
const char message1027[]={0xE};
const char message1028[]={0xE};
const char message1029[]={0xE};
const char message1030[]={0xE};
const char message1031[]={0xBB,0xAD,0x2E,0x5D,0xB4,0x61,0xB4,0x3B,};
const char message1032[]={0xBB,0xAD,0x3E,0xD3,0x84,0x1B,0x54,0xF3,0x43,0xAB,0xD1,0xEE,0x0};
const char message1033[]={0xD2,0x35,0x49,0x5C,0xCF,0x1};
const char message1035[]={0xE};
const char* dir[6]={
    message1021,
    message1022,
    message1023,
    message1024,
    message1025,
    message1026};

const char desc_l24[]={0x23,0x30,0xC9,0x86,0xB5,0xBE,0x27,0xD3,0xB6,0x35,0xF7,0x5A,0xED,0x0};
const char desc_l25[]={0x3B,0x82,0x6,0xAE,0x8F,0x40,0x82,0xE0,0x0};
const char desc_l29[]={0x7B,0xF7,0xEF,0x78,0xDC,0x16,0xE1,0x7E,0xB1,0x6F,0x3B,0x71,0x0};
const char desc_l186[]={0x7E,0xCD,0xA8,0x92,0xE4,0x66,0x66,0x86,0x56,0xBA,0x3};
const char desc_l187[]={0xBB,0xAD,0xD6,0x82,0x3E,0x7E,0x4D,0x7C,0xEB,0xF6,0x39,};
const char desc_l188[]={0xA3,0x27,0xE7,0x1C,0xBF,0x26,0x1E,0xE7,0x36,0x49,0x68,0x95,0x3};
const char desc_l189[]={0xFB,0x7B,0xE8,0xF1,0x6B,0xE2,0xAB,0xDA,0x7,0x76,0x0};
const char desc_l190[]={0xFB,0xC0,0xE6,0xF8,0x35,0xF1,0x85,0xAD,0xC5,0xEE,0x4C,0xB2,0xF3,0xD6,0x71,0x9C,0x62,0x1D};
const char desc_l191[]={0x7E,0xEA,0x61,0xFC,0x9A,0xB8,0xD6,0x59,0xCB,0x48,0x12,0x7};
const char desc_l192[]={0x3B,0x1E,0x92,0x5D,0x7C,0x15,0x32,0x3E,0xC4,0x25,0x81,0x3};
const char desc_l193[]={0xBB,0xAD,0xF8,0x41,0xB9,0x6E,0xBA,0x70,0x0};
const char desc_l194[]={0x3B,0xE4,0x2A,0xD6,0x18,0x21,0xA4,0x3};
const char desc_l195[]={0x3B,0xBE,0x6F,0x3B,0x89,0xE3,0x6F,0x29,0xD2,0xE2,0x0};
const char desc_l196[]={0x3B,0x1E,0xA7,0xCC,0xE,0x70,0x0};
const char desc_l197[]={0x3B,0x3E,0x33,0x8E,0xC1,0xE};
const char desc_l198[]={0xA3,0x77,0x8C,0x87,0x64,0x17,0x97,0xA4,0xB0,0x1C};
const char desc_l199[]={0xA3,0x77,0x8C,0xBB,0x4A,0xA2,0x36,0x2C,0xD8,0x1};
const char desc_l240[]={0xA3,0x53,0x30,0x81,0xBF,0xA9,0xA,0xE0,0xC1,0x1};
const char desc_l241[]={0x3B,0x6E,0x74,0x5B,0xC8,0xD,0x58,0x17,0xE};
const char desc_l242[]={0x3B,0xBE,0x66,0x72,0x74,0xA3,0xDB,0x42,0x6E,0xC0,0xBA,0x70,0x0};
const char desc_l243[]={0x23,0xA6,0xD9,0x47,0x19,0x81,0x1D};
const char desc_l244[]={0x23,0xA6,0xD9,0x47,0x19,0x81,0x1D};
const char desc_l245[]={0x23,0xA6,0xD9,0x47,0x19,0x81,0x6F,0x50,0xCD,0xBB,0x4A,0xA2,0x36,0x2C,0xD8,0x1};
const char desc_l246[]={0x3B,0xAE,0xB5,0xD9,0xB7,0xFE,0xD0,0xE2,0x3E,0xCE,0xDA,0x26,0x96,0x3};
const char desc_l247[]={0x3B,0x1E,0x92,0x5D,0x3C,0x4A,0x1B,0x7A,0xF3,0x39,};
const char desc_l248[]={0x3B,0xBE,0xE2,0xC,0xE1,0xAE,0x12,0x7};
const char desc_l249[]={0x3B,0xEE,0xA3,0xDA,0x26,0xE4,0x3E,0x21,0x1D,0xE};
const char desc_l250[]={0x3B,0x5E,0x19,0xC2,0x23,0xE2,0x2C,0x38,};
const char desc_l251[]={0x3B,0xBE,0xB6,0x64,0x86,0x7D,0x44,0x9C,0x5,0x7};
const char desc_l252[]={0x23,0x10,0x36,0xAC,0xB7,0xFE,0xBC,0x16,0xDA,0x90,0x47,0x69,0x43,0x6F,0x3E,0x7};
const char desc_l254[]={0xFB,0x27,0x3,0x4F,0x8E,0x61,0x1F,0x75,0xA0,0xD,0x6F,0x5D,0xA7,0xD,0xBC,0x1C};
const char desc_l255[]={0xFB,0x27,0x4E,0x22,0x3E,0x20,0x2,0x3B,};
const int original_position[32 ]={
    70,63,76,60,81,82,83,60,60,82,0,0,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,};
object obj[32 ]={
    {24,desc_l24,70,0+ 2 },
    {25,desc_l25,63,0+ 2 },
    {29,desc_l29,76,0},
    {186,desc_l186,60,0+ 2 },
    {187,desc_l187,81,0+ 2 },
    {188,desc_l188,82,0+ 2 },
    {189,desc_l189,83,0+ 2 },
    {190,desc_l190,60,0+ 2 },
    {191,desc_l191,60,0+ 2 },
    {192,desc_l192,82,0+ 2 },
    {193,desc_l193,0,0+ 2 },
    {194,desc_l194,0,0+ 1 + 2 },
    {195,desc_l195,84,0+ 2 },
    {196,desc_l196,0,0+ 2 },
    {197,desc_l197,0,0+ 1 + 2 },
    {198,desc_l198,0,0+ 1 + 2 },
    {199,desc_l199,0,0+ 1 + 2 },
    {240,desc_l240,0,0+ 1 + 2 },
    {241,desc_l241,0,0+ 1 + 2 },
    {242,desc_l242,0,0+ 1 + 2 },
    {243,desc_l243,0,0+ 1 + 2 },
    {244,desc_l244,0,0+ 1 + 2 },
    {245,desc_l245,0,0+ 1 + 2 },
    {246,desc_l246,0,0+ 1 + 2 },
    {247,desc_l247,0,0+ 2 },
    {248,desc_l248,0,0+ 1 + 2 },
    {249,desc_l249,0,0+ 1 + 2 },
    {250,desc_l250,0,0+ 2 },
    {251,desc_l251,0,0+ 2 },
    {252,desc_l252,0,0+ 1 + 2 },
    {254,desc_l254,0,0+ 2 },
    {255,desc_l255,92,0+ 2 }
};

room_code current_position;
room_code next_position;
boolean retv;
extern unsigned char  ls;
extern char playerInput[];
boolean marker[129];
int counter[129];
object *odummy;

char *searchw(unsigned int w)  ;
boolean unwear(unsigned int o)  ;
void printnewline(void)
{
    writesameln("\n");
}

void printspace(void)
{
    writesameln(" ");
}

unsigned char  search_object(unsigned int o)  
{
    unsigned char  idx;
    for(idx=0; idx< 32 ;++idx)
        if(obj[idx].code==o)
            return idx;
    return 0;
}

object *search_object_p(unsigned int o)  
{
    return &obj[search_object(o)];
}
unsigned char  search_room(unsigned char  r)  
{
    for(cdummy=0; cdummy< 28 ;++cdummy)
        if(world[cdummy].code==r)
            return cdummy;
    return 0;
}

void restart(void)
{
    unsigned char  j;
    for(cdummy=1;cdummy<129;++cdummy){
        marker[cdummy]=0;
        counter[cdummy]=0;
    }
    for(j=0; j< 28 ;++j)
        for(cdummy=0; cdummy< 6 ;++cdummy)
            world[j].directions[cdummy]=original_connections[j][cdummy];
    marker[124]= 1 ;
    next_position=130;
    for(j=0; j< 32 ;++j)
        obj[j].position=original_position[j];
}

void show_messagenlf(const char *m)  
{
    boolean o;
    cpointer=0;
    bpointer=0;
    compressed=(char *)m;
    do{
        o=decode();
        writesameln(decompress_b);
    } while(o);
}

void show_message(const char *m)  
{
    show_messagenlf(m);
    printnewline();
}

boolean are_you_sure(void)
{
    show_message(areyousure);
    fgets(( playerInput ),( 128  ),(_impure_ptr ->_stdin) ); ;
    if(playerInput[0]=='Y' || playerInput[0]=='y') {
        return 1;
    }
    return 0;
}


# 1456 "silkdust34_no_UTF8.c"

void move(unsigned char  dir)  
{
    unsigned char  p;
    p=cr->directions[dir];
    if(p) {
        next_position=p;
        marker[120]= 0 ;
    } else 
        show_message(message1008);

}

boolean get(unsigned int o)  {

    odummy=search_object_p(o);
    if(odummy->position!=current_position) {
        show_message(message1006);
    } else if((odummy->attributes& 1 )==0) {
        show_message(message1005);
    } else {
        odummy->position= 1500 ;
        return 0 ;
    }
    return 1 ;
}
boolean vov(unsigned int v1, unsigned int v2);
boolean vovn(unsigned int v1, unsigned int v2, unsigned int n);
boolean vovn100_0(unsigned char  n)  ;
boolean non1(unsigned int n1, unsigned int n2);
void ok(void);
boolean check_verb_noun(unsigned int v, unsigned int n);
boolean cvn70(unsigned char  n)  ;
boolean check_verb_actor(unsigned int v, unsigned char  n);
boolean check_verb75_actor(unsigned char  n)  ;
boolean check_verb75_actor_available(unsigned char  n)  ;
boolean check_verb70_actor(unsigned char  n)  ;
boolean check_verb70_actor_available(unsigned char  n)  ;
unsigned char ams(unsigned char  v, unsigned char n, char* m);



    

void sendallroom(unsigned int s)  ;
# 1514 "silkdust34_no_UTF8.c"

    
    
    

boolean object_is_available(obj_code c)  
{
    return (search_object_p( c )->position==current_position) || (search_object_p( c )->position== 1500 ) ;
}
void set_object_position(obj_code c, int pos)
{
    search_object_p(c)->position=pos;
}
void set_object_position0(obj_code c)  
{
    set_object_position(c,0);
}
void set_object_positionC(obj_code c)  
{
    set_object_position(c,1500 );
}
void bring_object_here(obj_code c)  
{
    set_object_position(c,current_position);
}
void amsm(unsigned char  p, unsigned char  c, boolean v, const char *m);
boolean cvna(unsigned int v, unsigned int n, unsigned int o);
boolean cvna70(unsigned char  n, unsigned char  o);
boolean cvna70neq(unsigned char  n)  ;
boolean drop(unsigned int o)  
{
    odummy=search_object_p(o);    if(odummy->position== 1500 ){        odummy->position=current_position;    } else {        show_message(message1007);        return 1 ;    }    return 0 ;}
# 1554 "silkdust34_no_UTF8.c"

void jump(unsigned char  p)  
{
    next_position=p;
    marker[120]= 0 ;
}

void hold(unsigned int p)  ;
char iscarrsome(void);
char iswearsome(void);








char check_position_marker_on(unsigned int p, unsigned char f);
char check_position_marker_off(unsigned int p, unsigned char f);
void hi_cond(void)
{
    retv= 1 ;
     
    if(current_position==102) {
        wait_key(); ;
        jump(71);
        return;
    }

     
    if(current_position==77) if(marker[70]) {
        show_message(message655);
        jump(103);
        return;
    }

     
    if(current_position==103) {
        restart();
        marker[124]= 0 ;
        wait_key(); ;
        set_object_positionC(197);
        set_object_positionC(249);
        set_object_positionC(246);
        set_object_positionC(198);
        marker[60]= 1 ;
        jump(90);
        return;
    }

     
    if(current_position==93) {
        show_message(message682);
        { show_message(exitrestart); fgets(( playerInput ),( 128  ),(_impure_ptr ->_stdin) ); ; if(playerInput[0]=='E' || playerInput[0]=='e'){  ; exit(0); }} ;
        restart(); return;
    }

     
    if(current_position==90) if(marker[80]) if(marker[81]== 0 ) {
        show_message(message685);
        marker[81]= 1 ;
    }

     
    if(marker[81]) {
        bring_object_here(254);
        show_message(message689);
    }

    retv= 0 ;    return;
}
void low_cond(void)
{
    retv= 1 ;
     
    if(verb==( 73 ) ) {
        if(are_you_sure()) {
             ; exit(0);
        }
        return;
    }

     
    if(vovn(74,0,72)) {
        { boolean gs= 0 ; show_message(message1032); for(cdummy = 0; cdummy< 32 ; ++cdummy) { dummy=obj[cdummy].position; if(dummy== 1500 ||dummy== 1600 ) { gs= 1 ;  ; show_messagenlf(obj[cdummy].desc);  ; if(dummy== 1600 ){ printspace(); show_messagenlf(message1018); } printnewline(); } } if(gs== 0 ) show_message(message1033);} ;
        return;
    }

     
    if(verb==987) {
        if(are_you_sure())
            restart();
        return;
    }

     
    if(verb==( 110 ) ) {
        marker[120]= 0 ;
        return;
    }

     
    if(vovn100_0(80)) {
        move(0);
        return;
    }

     
    if(vovn100_0(81)) if(noun2==0) {
        move(1);
        return;
    }

     
    if(vovn100_0(82)) {
        move(2);
        return;
    }

     
    if(vovn100_0(83)) {
        move(3);
        return;
    }

     
    if(vovn100_0(84)) {
        move(4);
        return;
    }

     
    if(vovn100_0(85)) {
        move(5);
        return;
    }

     
    if(current_position==61||current_position==63) if(cvn70(51)) {
        show_message(message679);
        return;
    }

     
    if(check_verb70_actor_available(186)) {
        show_message(message600);
        return;
    }

     
    if(check_verb75_actor_available(186)) {
        show_message(message611);
        return;
    }

     
    if(check_verb70_actor_available(25)) if(marker[60]== 0 ) {
        show_message(message601);
        return;
    }

     
    if(check_verb70_actor_available(25)) {
        show_message(message675);
        return;
    }

     
    if(check_verb75_actor_available(25)) if(marker[60]== 0 ) {
        show_message(message622);
        return;
    }

     
    if(check_verb75_actor_available(25)) {
        show_message(message625);
        return;
    }

     
    if(check_verb_actor(406,25)) if(object_is_available(25)) if(marker[60]== 0 ) {
        show_message(message602);
        marker[60]= 1 ;
        return;
    }

     
    if(check_verb_actor(406,25)) if(object_is_available(25)) {
        show_message(message663);
        return;
    }

     
    if(check_verb70_actor_available(24)) {
        show_message(message603);
        return;
    }

     
    if(check_verb70_actor_available(187)) {
        show_message(message604);
        return;
    }

     
    if(check_verb75_actor_available(187)) if(marker[61]== 0 ) {
        show_message(message605);
        marker[61]= 1 ;
        return;
    }

     
    if(check_verb75_actor_available(187)) {
        show_message(message66);
        return;
    }

     
    if(check_verb70_actor_available(188)) {
        show_message(message608);
        return;
    }

     
    if(actor==26||actor==175) if(verb==( 70 ) ) if(object_is_available(189)) {
        show_message(message607);
        return;
    }

     
    if(check_verb75_actor(26)&&object_is_available(189)) {
        show_message(message66);
        return;
    }

     
    if(check_verb75_actor_available(188)) {
        show_message(message609);
        return;
    }

     
    if(cvna70(178,192)) {
        show_message(message610);
        return;
    }

     
    if(cvna70neq(193)) if(marker[71]== 0 ) {
        show_message(message620);
        bring_object_here(194);
        marker[71]= 1 ;
        return;
    }

     
    if(cvna70neq(193)) {
        show_message(message678);
        return;
    }

     
    if(cvna70neq(194)) {
        show_message(message621);
        return;
    }

     
    if(cvna70neq(195)) if(marker[67]) {
        show_message(message624);
        show_message(message711);
        return;
    }

     
    if(cvna70neq(195)) {
        show_message(message624);
        show_message(message710);
        return;
    }

     
    if(cvna(50,239,197)) {
        if(get(197)) return;
        ok();
        return;
    }

     
    if(cvna70(239,197)) {
        show_message(message658);
        return;
    }

     
    if(cvna70neq(198)) {
        show_message(message694);
        return;
    }

     
    if(check_verb_noun(50,3)) {
        if(get(244)) return;
        ok();
        return;
    }

     
    if(cvna(50,199,244)) {
        set_object_position0(199);
        set_object_position0(244);
        set_object_positionC(245);
        ok();
        return;
    }

     
    if(check_verb_noun(50,199)) {
        show_message(message635);
        return;
    }

     
    if(cvna70(173,252)) {
        show_message(message657);
        return;
    }

     
    if(cvna70neq(247)) {
        show_message(message658);
        return;
    }

     
    if(current_position>66) if(current_position<84) if(cvn70(58)) {
        show_message(message660);
        return;
    }

     
    if(verb==( 70 ) ) if(non1(248,249)) if(object_is_available(248)||object_is_available(249)) {
        show_message(message694);
        return;
    }

     
    if(verb==396) if(object_is_available(248)) {
        show_message(message505);
        return;
    }

     
    if(verb==( 157 ) ) if(noun1==241) if(noun2==249) if(object_is_available(241)) if(object_is_available(249)) {
        show_message(message718);
        set_object_position0(241);
        set_object_positionC(242);
        return;
    }

     
    if(cvna(157,241,241)) {
        show_message(message714);
        return;
    }

     
    if(current_position>66) if(current_position<84) if(check_verb_noun(50,58)) {
        show_message(message665);
        return;
    }

     
    if(current_position==67||current_position==71||current_position==70||current_position==73||current_position==77) if(check_verb_noun(15,18)) {
        show_message(message400);
        return;
    }

     
    if(current_position==67||current_position==71||current_position==70||current_position==73||current_position==77) if(cvn70(18)) {
        show_message(message671);
        return;
    }

     
    if(current_position==70||current_position==71||current_position==72||current_position==73||current_position==77) if(cvn70(51)) {
        show_message(message664);
        return;
    }

     
    if(verb==( 143 ) ) if(current_position<70) {
        show_message(message674);
        return;
    }

     
    if(check_verb75_actor_available(24)) {
        show_message(message667);
        return;
    }

     
    if(check_verb75_actor_available(190)) {
        show_message(message609);
        return;
    }

     
    if(check_verb75_actor_available(191)) {
        show_message(message505);
        return;
    }

     
    if(check_verb75_actor_available(254)) {
        show_message(message693);
        return;
    }

     
    if(check_verb70_actor_available(191)) {
        show_message(message670);
        return;
    }

     
    if(check_verb70_actor_available(254)) {
        show_message(message690);
        return;
    }

     
    if(check_verb70_actor_available(190)) {
        show_message(message669);
        return;
    }

     
    if(cvna70neq(241)) {
        show_message(message717);
        return;
    }

     
    if(cvna70(241,242)) {
        show_message(message718);
        return;
    }

     
    if(check_verb_noun(50,399)) {
        show_message(message401);
        return;
    }

     
    if(verb==( 201 ) ) {
        show_message(message400);
        return;
    }

     
    if(verb==( 122 ) ) {
        show_message(message403);
        return;
    }

     
    if(check_verb_noun(12,10)) {
        show_message(message401);
        return;
    }

     
    if(check_verb_noun(230,233)) {
        jump(103);
        return;
    }

     
    if(verb==1000) {
        show_message(message998);
        return;
    }

     
    if(verb==400) {
        show_message(message504);
        return;
    }

     
    if(verb==401) {
        show_message(message61);
        return;
    }

     
    if(verb==( 143 ) ) {
        show_message(message997);
        return;
    }

     
    if(verb==( 66 ) ) {
        show_message(message401);
        return;
    }

     
    if(vov(211,406)|| verb==( 67 ) ) {
        show_message(message401);
        return;
    }

     
    if(verb==( 1 ) ) if(noun1==124) if(actor==25) if(object_is_available(25)) {
        show_message(message662);
        return;
    }

     
    if(check_verb_noun(1,124)) {
        show_message(message661);
        return;
    }

     
    if(verb==( 50 ) ) if(noun1>24) if(noun1<50) {
        if(get(noun1)) return;
        ok();
        return;
    }

     
    if(verb==( 55 ) ) if(noun1>24) if(noun1<50) {
        if(drop(noun1)) return;
        ok();
        return;
    }

     
    if(verb==( 50 ) ) if(noun1>169) if(noun1<200) {
        if(get(noun1)) return;
        ok();
        return;
    }

     
    if(verb==( 55 ) ) if(noun1>169) if(noun1<200) {
        if(drop(noun1)) return;
        ok();
        return;
    }

     
    if(verb==( 50 ) ) if(noun1>239) if(noun1<256) {
        if(get(noun1)) return;
        ok();
        return;
    }

     
    if(verb==( 55 ) ) if(noun1>239) if(noun1<256) {
        if(drop(noun1)) return;
        ok();
        return;
    }

     
    if(verb==( 50 ) ) {
        show_message(message401);
        return;
    }

     
    if(verb==407) {
        show_message(message407);
        return;
    }

     
    if(cvn70(79)) {
        marker[120]= 0 ;
        return;
    }

     
    if(verb==( 210 ) ) {
        show_message(message231);
        return;
    }

     
    if(verb==( 70 ) ) {
        show_message(message996);
        return;
    }

     
    if(verb==( 15 ) ) {
        show_message(message408);
        return;
    }

     
    if(verb==( 78 ) ) {
        show_message(message122);
        return;
    }

     
    if(verb==988) {
        { _pcos_dstring( "Enter file name: " ) ; fgets(( playerInput ),(  128  ),(_impure_ptr ->_stdin) ); ; loadgame(playerInput); }  ;
        return;
    }

     
    if(verb==989) {
        { _pcos_dstring( "Enter file name: " ) ; fgets(( playerInput ),(  128  ),(_impure_ptr ->_stdin) ); ; savegame(playerInput); }  ;
        return;
    }

     
    if(verb==( 76 ) ) {
        show_message(message402);
        return;
    }

    retv= 0 ;
    return;
}
void local_cond(void)
{
    retv= 1 ;
    switch(current_position) {
    case 61:
     
    if(marker[60]) if(marker[61]) {
        show_message(message612);
        marker[62]= 1 ;
        marker[61]= 0 ;
        jump(71);
        return;
    }

     
    if(vovn100_0(82)) if(marker[63]) {
        show_message(message626);
        return;
    }

    break;
    case 62:
     
    if(cvn70(68)) {
        show_message(message672);
        return;
    }

    break;
    case 65:
     
    if(vovn100_0(80)) if(marker[63]) {
        show_message(message626);
        return;
    }

     
    if(vovn100_0(82)) if(marker[63]) {
        show_message(message626);
        return;
    }

     
    if(cvn70(204)) if(marker[63]) {
        show_message(message627);
        bring_object_here(196);
        return;
    }

     
    if(cvn70(204)) {
        show_message(message629);
        return;
    }

     
    if(check_verb_noun(12,196)) {
        show_message(message628);
        world[5].directions[(6)-1]=75;
        world[13].directions[(5)-1]=65;
        world[13].directions[(6)-1]=82;
        world[18].directions[(5)-1]=75;
        return;
    }

     
    if(cvn70(196)) {
        show_message(message630);
        return;
    }

     
    if(check_verb_noun(203,196)) {
        show_message(message401);
        return;
    }

     
    if(vovn100_0(81)) if(noun2==0) if(marker[63]== 0 ) {
        show_message(message673);
        return;
    }

     
    if(check_verb_noun(70,398)) {
        show_message(message676);
        return;
    }

     
    if(verb==( 70 ) ) if(non1(397,90)) {
        show_message(message677);
        return;
    }

    break;
    case 67:
     
    if(cvn70(51)) if(marker[72]== 0 ) {
        show_message(message654);
        bring_object_here(248);
        marker[72]= 1 ;
        return;
    }

     
    if(cvn70(51)) {
        show_message(message678);
        return;
    }

     
    if(cvn70(200)) {
        show_message(message680);
        return;
    }

    break;
    case 70:
     
    if(verb==( 70 ) ) if(non1(200,207)) {
        show_message(message668);
        return;
    }

     
    if(cvn70(144)) {
        show_message(message695);
        return;
    }

    break;
    case 71:
     
    if(vovn100_0(82)) if(marker[63]) {
        show_message(message615);
        return;
    }

     
    if(vovn100_0(82)) if(marker[62]) {
        show_message(message613);
        marker[63]= 1 ;
        world[13].directions[(2)-1]=0;
        set_object_position(191,77);
        set_object_position(190,77);
        set_object_position(189,77);
        set_object_position(188,77);
        set_object_position(187,77);
        return;
    }

     
    if(cvn70(10)) if(marker[63]) {
        show_message(message614);
        marker[65]= 1 ;
        return;
    }

     
    if(cvn70(10)) {
        show_message(message666);
        return;
    }

     
    if(check_verb_noun(12,10)) if(marker[65]) if(marker[64]== 0 ) {
        marker[64]= 1 ;
        show_message(message616);
        return;
    }

     
    if(check_verb_noun(203,10)) if(marker[65]) if(marker[64]) {
        marker[64]= 0 ;
        ok();
        return;
    }

     
    if(cvn70(13)) if(marker[66]) {
        show_message(message619);
        bring_object_here(193);
        return;
    }

     
    if(cvn70(13)) {
        show_message(message617);
        return;
    }

     
    if(check_verb_noun(12,13)) if(marker[63]) {
        show_message(message618);
        marker[66]= 1 ;
        return;
    }

     
    if(check_verb_noun(12,13)) {
        show_message(message505);
        return;
    }

     
    if(cvna(69,220,194)) {
        show_message(message623);
        world[9].directions[(6)-1]=84;
        world[9].directions[(5)-1]=61;
        world[1].directions[(6)-1]=71;
        marker[77]= 1 ;
        return;
    }

     
    if(verb==( 15 ) ) if(noun1==194) if(noun2==220) if(object_is_available(194)) {
        show_message(message623);
        world[9].directions[(6)-1]=84;
        world[9].directions[(5)-1]=61;
        world[1].directions[(6)-1]=71;
        marker[77]= 1 ;
        return;
    }

     
    if(verb==( 50 ) ) if(noun1==194||noun1==220) if(noun1==220||noun2==220) if(object_is_available(194)) {
        show_message(message623);
        world[9].directions[(6)-1]=84;
        world[9].directions[(5)-1]=61;
        world[1].directions[(6)-1]=71;
        marker[77]= 1 ;
        return;
    }

     
    if(vovn100_0(84)) if(marker[77]) {
        move(4);
        return;
    }

    break;
    case 74:
     
    if(cvn70(27)) if(marker[63]) if(marker[73]== 0 ) {
        show_message(message637);
        bring_object_here(244);
        marker[73]= 1 ;
        return;
    }

     
    if(verb==( 70 ) ) if(non1(27,173)||noun1==395) {
        show_message(message697);
        return;
    }

    break;
    case 75:
     
    if(marker[69]) if(vovn100_0(80)||non1(82,83)||non1(84,85)) {
        show_message(message659);
        return;
    }

     
    if(vovn100_0(80)) if(marker[63]) {
        show_message(message626);
        return;
    }

     
    if(cvn70(4)) if(marker[63]) if(marker[69]== 0 ) {
        show_message(message638);
        bring_object_here(247);
        return;
    }

     
    if(check_verb_noun(71,199)) if(noun2==247) if(object_is_available(247)) if(object_is_available(245)) {
        marker[70]= 1 ;
        set_object_position0(247);
        set_object_position0(245);
        show_message(message650);
        return;
    }

     
    if(check_verb_noun(235,199)) if(marker[70]) if(marker[69]== 0 ) if(marker[67]== 0 ) {
        show_message(message656);
        return;
    }

     
    if(check_verb_noun(235,199)) if(marker[70]) if(marker[69]== 0 ) if(object_is_available(248)) if(object_is_available(249)) {
        show_message(message651);
        marker[69]= 1 ;
        world[13].directions[(2)-1]=77;
        set_object_position0(247);
        bring_object_here(252);
        return;
    }

     
    if(check_verb_noun(235,199)) if(marker[70]) if(marker[69]== 0 ) {
        show_message(message653);
        return;
    }

     
    if(noun1==246) if(noun2==247) if(marker[70]) if(marker[69]== 0 ) if(marker[67]== 0 ) {
        show_message(message656);
        return;
    }

     
    if(noun1==246) if(noun2==247) if(marker[70]) if(marker[69]== 0 ) if(object_is_available(248)) if(object_is_available(249)) {
        show_message(message651);
        marker[69]= 1 ;
        world[13].directions[(2)-1]=77;
        set_object_position0(247);
        bring_object_here(252);
        return;
    }

     
    if(noun1==246) if(noun2==247) if(marker[70]) if(marker[69]== 0 ) {
        show_message(message653);
        return;
    }

     
    if(cvn70(4)) {
        show_message(message658);
        return;
    }

    break;
    case 76:
     
    if(cvn70(206)) if(marker[63]) if(marker[74]== 0 ) {
        show_message(message632);
        bring_object_here(197);
        bring_object_here(198);
        marker[74]= 1 ;
        return;
    }

     
    if(cvn70(29)) {
        show_message(message696);
        return;
    }

     
    if(cvn70(27)) {
        show_message(message698);
        return;
    }

     
    if(verb==( 70 ) ) if(non1(206,173)||noun1==395) {
        show_message(message697);
        return;
    }

    break;
    case 77:
     
    if(cvn70(10)) {
        show_message(message666);
        return;
    }

     
    if(cvn70(18)) {
        show_message(message699);
        return;
    }

     
    if(check_verb_noun(70,394)) {
        show_message(message700);
        return;
    }

     
    if(cvn70(13)) {
        show_message(message701);
        return;
    }

    break;
    case 80:
     
    if(cvn70(246)) if(marker[75]== 0 ) {
        show_message(message640);
        bring_object_here(246);
        marker[75]= 1 ;
        return;
    }

    break;
    case 81:
     
    if(cvn70(51)) if(marker[63]) if(marker[76]== 0 ) {
        show_message(message652);
        bring_object_here(249);
        marker[76]= 1 ;
        return;
    }

     
    if(cvn70(51)) if(marker[63]) {
        show_message(message678);
        return;
    }

     
    if(vovn100_0(80)) if(object_is_available(187)) {
        show_message(message606);
        return;
    }

     
    if(vovn100_0(84)) if(marker[63]) {
        show_message(message626);
        return;
    }

     
    if(verb==( 70 ) ) if(non1(51,59)) {
        show_message(message702);
        return;
    }

     
    if(verb==( 143 ) ) {
        show_message(message705);
        return;
    }

    break;
    case 82:
     
    if(cvn70(206)) {
        show_message(message703);
        return;
    }

     
    if(verb==( 70 ) ) if(non1(393,28)) {
        show_message(message704);
        return;
    }

     
    if(verb==( 143 ) ) {
        show_message(message706);
        return;
    }

    break;
    case 83:
     
    if(verb==( 143 ) ) {
        show_message(message706);
        return;
    }

     
    if(check_verb_noun(70,392)) {
        show_message(message707);
        return;
    }

     
    if(check_verb_noun(70,393)) {
        show_message(message708);
        return;
    }

     
    if(check_verb_noun(70,390)) {
        show_message(message709);
        return;
    }

    break;
    case 84:
     
    if(cvna(206,195,197)) if(object_is_available(198)) if(marker[68]== 0 ) {
        show_message(message634);
        return;
    }

     
    if(noun1==198) if(noun2==195) if(object_is_available(197)) if(object_is_available(198)) if(marker[68]== 0 ) {
        show_message(message634);
        return;
    }

     
    if(noun1==239) if(noun2==195) if(object_is_available(197)) if(object_is_available(198)) if(marker[68]== 0 ) {
        show_message(message634);
        return;
    }

     
    if(check_verb_noun(69,195)) if(marker[68]== 0 ) {
        show_message(message636);
        marker[68]= 1 ;
        bring_object_here(199);
        return;
    }

     
    if(check_verb_noun(69,195)) {
        show_message(message401);
        return;
    }

     
    if(check_verb_noun(205,195)) {
        show_message(message635);
        return;
    }

     
    if(cvna(206,195,197)) if(object_is_available(198)) if(marker[68]) if(marker[67]== 0 ) {
        show_message(message633);
        marker[67]= 1 ;
        return;
    }

     
    if(noun1==198) if(noun2==195) if(object_is_available(197)) if(object_is_available(198)) if(marker[68]) if(marker[67]== 0 ) {
        show_message(message633);
        marker[67]= 1 ;
        return;
    }

     
    if(noun1==239) if(noun2==195) if(object_is_available(197)) if(object_is_available(198)) if(marker[68]) if(marker[67]== 0 ) {
        show_message(message633);
        marker[67]= 1 ;
        return;
    }

    break;
    case 90:
     
    if(marker[80]== 0 ) if(vovn100_0(83)) {
        show_message(message712);
        return;
    }

     
    if(cvn70(112)) if(marker[89]== 0 ) {
        show_message(message719);
        bring_object_here(241);
        marker[89]= 1 ;
        return;
    }

    break;
    case 91:
     
    if(vovn(70,12,204)) if(marker[87]== 0 ) {
        show_message(message713);
        return;
    }

     
    if(verb==( 71 ) ) if(noun1==241) if(noun2==204) if(object_is_available(241)) if(marker[88]== 0 ) {
        show_message(message715);
        return;
    }

     
    if(verb==( 71 ) ) if(noun1==241) if(noun2==204) if(object_is_available(242)) if(marker[88]== 0 ) {
        show_message(message716);
        marker[88]= 1 ;
        return;
    }

     
    if(noun1==239) if(noun2==241) if(marker[88]) if(marker[87]== 0 ) {
        show_message(message681);
        marker[87]= 1 ;
        bring_object_here(24);
        bring_object_here(25);
        return;
    }

     
    if(check_verb75_actor_available(24)) {
        show_message(message683);
        marker[80]= 1 ;
        return;
    }

     
    if(check_verb75_actor(25)&&object_is_available(24)) {
        show_message(message684);
        return;
    }

    break;
    case 92:
     
    if(verb==( 143 ) ) {
        show_message(message691);
        return;
    }

     
    if(check_verb75_actor(255)) if(marker[80]== 0 ) {
        show_message(message686);
        return;
    }

     
    if(check_verb75_actor(255)) {
        show_message(message688);
        return;
    }

     
    if(check_verb70_actor(255)) {
        show_message(message692);
        return;
    }

     
    if(verb==( 70 ) ) if(non1(59,6)) if(marker[91]== 0 ) {
        show_message(message720);
        bring_object_here(240);
        marker[91]= 1 ;
        return;
    }

     
    if(cvna70neq(240)) if(marker[90]== 0 ) {
        show_message(message721);
        marker[90]= 1 ;
        return;
    }

     
    if(vovn100_0(83)) if(marker[90]== 0 ) {
        show_message(message687);
        return;
    }

    break;
    case 130:
     
    if(check_verb_noun(230,232)) {
        restart();
        jump(102);
        return;
    }

    }
    retv= 0 ;    return;
}

void game_cycle(void)
{
    unsigned char k;
    boolean ve,pa;
    while(1){
        current_position=next_position;
        if(marker[120]== 0 ) {
            printnewline();
             ;
            cr=&world[search_room(current_position)];
            show_messagenlf(cr->short_d);
            printspace();
             ;
             ;
            printspace();
            show_message(cr->long_d);
            printnewline();
            marker[120]= 1 ;
            ve= 0 ;
            for(k=0;k< 32 ;++k)
                if(obj[k].position==current_position) {
                    if(ve== 0 ) {
                        show_message(message1031);
                        ve= 1 ;
                         ;
                    }
                    show_message(obj[k].desc);
                }
             ;
            if(marker[124]) {
                pa= 0 ;
                for(k=0; k< 6 ; ++k)
                    if(cr->directions[k]) {
                        if(pa== 0 ) {
                            show_messagenlf(message1020);
                            pa= 1 ;
                        }
                     ;
                    show_messagenlf(dir[k]);
                    printspace();
                }
                 ;
                printnewline();
            }
        }
        ++counter[125];
        --counter[126];
        --counter[127];
        --counter[128];
        hi_cond();
        if(retv) continue;
        printnewline();
        if(ls==0 && counter[125]<5) show_message(message1012);
        interrogationAndAnalysis();
        local_cond();
        if(retv) continue;
        low_cond();
        if(retv) continue;
        show_message(verb==( 0 ) ?message1009:message1010);
    }
}

int main(void)
{
    restart();
    {showsplash();} ;
     ;
    show_message(header);
     ;
    wait_key(); ;
    game_cycle();
    return 0;
}






boolean vov(unsigned int v1, unsigned int v2)
{
    return verb==v1||verb==v2;
}
boolean vovn(unsigned int v1, unsigned int v2, unsigned int n)
{
    return vov(v1,v2)&&noun1==n;
}
boolean vovn100_0(unsigned char  n)  
{
    return vovn(100,0,n);
}
boolean non1(unsigned int n1, unsigned int n2)
{
    return noun1==n1||noun1==n2;
}
void ok(void)
{
        show_message(message1000);
}
boolean check_verb_noun(unsigned int v, unsigned int n)
{
    return verb==v&&noun1==n;
}
boolean cvn70(unsigned char  n)  
{
    return check_verb_noun(70,n);
}
boolean check_verb_actor(unsigned int v, unsigned char  n)
{
    return verb==v&&actor==n;
}
boolean check_verb75_actor(unsigned char  n)  
{
    return check_verb_actor(75,n);
}
boolean check_verb70_actor(unsigned char  n)  
{
    return check_verb_actor(70,n);
}
boolean check_verb70_actor_available(unsigned char  n)  
{
    return check_verb_actor(70,n)&&object_is_available(n);
}
boolean check_verb75_actor_available(unsigned char  n)  
{
    return check_verb_actor(75,n)&&object_is_available(n);
}
boolean cvna(unsigned int v, unsigned int n, unsigned int o)
{
    dummy= search_object_p( o )->position ;
    return check_verb_noun(v,n)&&(dummy==current_position||dummy== 1500 );
}
boolean cvna70(unsigned char  n, unsigned char  o)
{
   return cvna(70,n,o);
}
boolean cvna70neq(unsigned char  n)  
{
   return cvna70(n,n);
}
